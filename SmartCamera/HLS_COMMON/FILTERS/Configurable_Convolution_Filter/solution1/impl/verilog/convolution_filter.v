// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolution_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=41.666668,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.754188,HLS_SYN_LAT=310599,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2744,HLS_SYN_LUT=6256}" *)

module convolution_filter (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_img_V_TDATA,
        in_img_V_TVALID,
        in_img_V_TREADY,
        out_img_V_TDATA,
        out_img_V_TVALID,
        out_img_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state32 = 3'd4;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_img_V_TDATA;
input   in_img_V_TVALID;
output   in_img_V_TREADY;
output  [7:0] out_img_V_TDATA;
output   out_img_V_TVALID;
input   out_img_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] kernel_config_V_address0;
reg    kernel_config_V_ce0;
wire   [7:0] kernel_config_V_q0;
reg   [7:0] in_img_V_0_data_out;
wire    in_img_V_0_vld_in;
wire    in_img_V_0_vld_out;
wire    in_img_V_0_ack_in;
reg    in_img_V_0_ack_out;
reg   [7:0] in_img_V_0_payload_A;
reg   [7:0] in_img_V_0_payload_B;
reg    in_img_V_0_sel_rd;
reg    in_img_V_0_sel_wr;
wire    in_img_V_0_sel;
wire    in_img_V_0_load_A;
wire    in_img_V_0_load_B;
reg   [1:0] in_img_V_0_state;
wire    in_img_V_0_state_cmp_full;
reg   [7:0] out_img_V_1_data_out;
reg    out_img_V_1_vld_in;
wire    out_img_V_1_vld_out;
wire    out_img_V_1_ack_in;
wire    out_img_V_1_ack_out;
reg   [7:0] out_img_V_1_payload_A;
reg   [7:0] out_img_V_1_payload_B;
reg    out_img_V_1_sel_rd;
reg    out_img_V_1_sel_wr;
wire    out_img_V_1_sel;
wire    out_img_V_1_load_A;
wire    out_img_V_1_load_B;
reg   [1:0] out_img_V_1_state;
wire    out_img_V_1_state_cmp_full;
reg   [7:0] window_V_0_6;
reg   [7:0] window_V_1_6;
reg   [7:0] window_V_2_6;
reg   [7:0] window_V_3_6;
reg   [7:0] window_V_4_6;
reg   [7:0] window_V_5_6;
reg   [7:0] window_V_6_6;
reg  signed [7:0] kernel_sum_V;
reg   [7:0] kernel_off_V;
reg   [7:0] window_V_0_1;
reg   [7:0] window_V_0_2;
reg   [7:0] window_V_0_3;
reg   [7:0] window_V_0_4;
reg   [7:0] window_V_0_5;
reg   [7:0] window_V_1_1;
reg   [7:0] window_V_1_2;
reg   [7:0] window_V_1_3;
reg   [7:0] window_V_1_4;
reg   [7:0] window_V_1_5;
reg   [7:0] window_V_2_1;
reg   [7:0] window_V_2_2;
reg   [7:0] window_V_2_3;
reg   [7:0] window_V_2_4;
reg   [7:0] window_V_2_5;
reg   [7:0] window_V_3_1;
reg   [7:0] window_V_3_2;
reg   [7:0] window_V_3_3;
reg   [7:0] window_V_3_4;
reg   [7:0] window_V_3_5;
reg   [7:0] window_V_4_1;
reg   [7:0] window_V_4_2;
reg   [7:0] window_V_4_3;
reg   [7:0] window_V_4_4;
reg   [7:0] window_V_4_5;
reg   [7:0] window_V_5_1;
reg   [7:0] window_V_5_2;
reg   [7:0] window_V_5_3;
reg   [7:0] window_V_5_4;
reg   [7:0] window_V_5_5;
reg   [7:0] window_V_6_1;
reg   [7:0] window_V_6_2;
reg   [7:0] window_V_6_3;
reg   [7:0] window_V_6_4;
reg   [7:0] window_V_6_5;
wire   [9:0] line_buffer_V_0_address0;
reg    line_buffer_V_0_ce0;
wire   [7:0] line_buffer_V_0_q0;
reg    line_buffer_V_0_ce1;
reg    line_buffer_V_0_we1;
wire   [9:0] line_buffer_V_1_address0;
reg    line_buffer_V_1_ce0;
wire   [7:0] line_buffer_V_1_q0;
reg    line_buffer_V_1_ce1;
reg    line_buffer_V_1_we1;
wire   [9:0] line_buffer_V_2_address0;
reg    line_buffer_V_2_ce0;
wire   [7:0] line_buffer_V_2_q0;
reg    line_buffer_V_2_ce1;
reg    line_buffer_V_2_we1;
wire   [9:0] line_buffer_V_3_address0;
reg    line_buffer_V_3_ce0;
wire   [7:0] line_buffer_V_3_q0;
reg    line_buffer_V_3_ce1;
reg    line_buffer_V_3_we1;
wire   [9:0] line_buffer_V_4_address0;
reg    line_buffer_V_4_ce0;
wire   [7:0] line_buffer_V_4_q0;
reg    line_buffer_V_4_ce1;
reg    line_buffer_V_4_we1;
wire   [9:0] line_buffer_V_5_address0;
reg    line_buffer_V_5_ce0;
wire   [7:0] line_buffer_V_5_q0;
wire   [9:0] line_buffer_V_5_address1;
reg    line_buffer_V_5_ce1;
reg    line_buffer_V_5_we1;
reg  signed [7:0] kernel_V_0_0;
reg  signed [7:0] kernel_V_0_1;
reg  signed [7:0] kernel_V_0_2;
reg  signed [7:0] kernel_V_0_3;
reg  signed [7:0] kernel_V_0_4;
reg  signed [7:0] kernel_V_0_5;
reg  signed [7:0] kernel_V_0_6;
reg  signed [7:0] kernel_V_1_0;
reg  signed [7:0] kernel_V_1_1;
reg  signed [7:0] kernel_V_1_2;
reg  signed [7:0] kernel_V_1_3;
reg  signed [7:0] kernel_V_1_4;
reg  signed [7:0] kernel_V_1_5;
reg  signed [7:0] kernel_V_1_6;
reg  signed [7:0] kernel_V_2_0;
reg  signed [7:0] kernel_V_2_1;
reg  signed [7:0] kernel_V_2_2;
reg  signed [7:0] kernel_V_2_3;
reg  signed [7:0] kernel_V_2_4;
reg  signed [7:0] kernel_V_2_5;
reg  signed [7:0] kernel_V_2_6;
reg  signed [7:0] kernel_V_3_0;
reg  signed [7:0] kernel_V_3_1;
reg  signed [7:0] kernel_V_3_2;
reg  signed [7:0] kernel_V_3_3;
reg  signed [7:0] kernel_V_3_4;
reg  signed [7:0] kernel_V_3_5;
reg  signed [7:0] kernel_V_3_6;
reg  signed [7:0] kernel_V_4_0;
reg  signed [7:0] kernel_V_4_1;
reg  signed [7:0] kernel_V_4_2;
reg  signed [7:0] kernel_V_4_3;
reg  signed [7:0] kernel_V_4_4;
reg  signed [7:0] kernel_V_4_5;
reg  signed [7:0] kernel_V_4_6;
reg  signed [7:0] kernel_V_5_0;
reg  signed [7:0] kernel_V_5_1;
reg  signed [7:0] kernel_V_5_2;
reg  signed [7:0] kernel_V_5_3;
reg  signed [7:0] kernel_V_5_4;
reg  signed [7:0] kernel_V_5_5;
reg  signed [7:0] kernel_V_5_6;
reg  signed [7:0] kernel_V_6_0;
reg  signed [7:0] kernel_V_6_1;
reg  signed [7:0] kernel_V_6_2;
reg  signed [7:0] kernel_V_6_3;
reg  signed [7:0] kernel_V_6_4;
reg  signed [7:0] kernel_V_6_5;
reg  signed [7:0] kernel_V_6_6;
reg    in_img_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_3271;
reg   [0:0] or_cond_reg_3359;
reg    out_img_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter28;
reg   [0:0] or_cond1_reg_3363;
reg   [0:0] or_cond1_reg_3363_pp0_iter27_reg;
reg    ap_enable_reg_pp0_iter29;
reg   [0:0] or_cond1_reg_3363_pp0_iter28_reg;
reg   [18:0] indvar_flatten_reg_483;
reg   [18:0] iteration_reg_494;
reg   [8:0] row_reg_505;
reg   [18:0] iteration_1_reg_516;
reg   [9:0] col_reg_527;
wire   [0:0] exitcond_flatten_fu_611_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op295_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
reg    ap_block_state30_io;
wire    ap_block_state31_pp0_stage0_iter29;
reg    ap_block_state31_io;
reg    ap_block_pp0_stage0_11001;
wire   [18:0] indvar_flatten_next_fu_617_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [9:0] col_mid2_fu_643_p3;
reg   [9:0] col_mid2_reg_3280;
wire   [18:0] iteration_mid2_fu_697_p3;
wire   [8:0] row_mid2_fu_705_p3;
wire   [0:0] tmp_8_fu_713_p2;
reg   [0:0] tmp_8_reg_3295;
wire   [0:0] tmp_s_fu_719_p2;
reg   [0:0] tmp_s_reg_3299;
wire   [0:0] tmp_3_fu_725_p2;
reg   [0:0] tmp_3_reg_3303;
wire   [2:0] tmp_65_fu_770_p1;
reg   [2:0] tmp_65_reg_3312;
wire   [2:0] tmp_66_fu_774_p1;
reg   [2:0] tmp_66_reg_3316;
wire   [0:0] tmp_11_fu_794_p2;
reg   [0:0] tmp_11_reg_3320;
reg   [9:0] line_buffer_V_0_addr_reg_3324;
reg   [9:0] line_buffer_V_1_addr_reg_3330;
reg   [9:0] line_buffer_V_2_addr_reg_3336;
reg   [9:0] line_buffer_V_3_addr_reg_3342;
reg   [9:0] line_buffer_V_4_addr_reg_3348;
wire   [0:0] or_cond_fu_810_p2;
wire   [0:0] or_cond1_fu_822_p2;
reg   [0:0] or_cond1_reg_3363_pp0_iter1_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter2_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter3_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter4_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter5_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter6_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter7_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter8_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter9_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter10_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter11_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter12_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter13_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter14_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter15_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter16_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter17_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter18_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter19_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter20_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter21_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter22_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter23_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter24_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter25_reg;
reg   [0:0] or_cond1_reg_3363_pp0_iter26_reg;
wire   [18:0] tmp_36_fu_828_p2;
wire   [9:0] col_1_fu_834_p2;
reg   [7:0] in_temp_V_1_load_reg_3377;
reg   [7:0] window_V_5_6_loc_1_l_reg_3383;
reg   [7:0] window_V_4_6_loc_1_l_reg_3389;
reg   [7:0] window_V_3_6_loc_1_l_reg_3395;
reg   [7:0] window_V_2_6_loc_1_l_reg_3401;
reg   [7:0] window_V_1_6_loc_1_l_reg_3407;
reg   [7:0] window_V_0_6_loc_1_l_reg_3413;
reg   [7:0] kernel_off_V_load_reg_3419;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter3_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter4_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter5_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter6_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter7_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter8_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter9_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter10_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter11_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter12_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter13_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter14_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter15_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter16_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter17_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter18_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter19_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter20_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter21_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter22_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter23_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter24_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter25_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter26_reg;
reg   [7:0] kernel_off_V_load_reg_3419_pp0_iter27_reg;
wire   [7:0] r_V_2_fu_3185_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
wire   [63:0] tmp_2_fu_765_p1;
wire   [63:0] tmp_12_fu_800_p1;
wire   [63:0] tmp_13_fu_1239_p1;
reg   [31:0] i_1_fu_302;
wire   [31:0] tmp_7_i_1_fu_757_p3;
reg   [31:0] j_1_fu_306;
wire   [31:0] tmp_10_fu_778_p2;
reg   [7:0] in_temp_V_1_fu_310;
reg   [7:0] window_V_5_6_loc_1_fu_314;
reg   [7:0] window_V_4_6_loc_1_fu_318;
reg   [7:0] window_V_3_6_loc_1_fu_322;
reg   [7:0] window_V_2_6_loc_1_fu_326;
reg   [7:0] window_V_1_6_loc_1_fu_330;
reg   [7:0] window_V_0_6_loc_1_fu_334;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] exitcond_fu_629_p2;
wire   [18:0] tmp_4_fu_623_p2;
wire   [8:0] row_s_fu_651_p2;
wire   [0:0] tmp_4_mid1_fu_657_p2;
wire   [0:0] tmp_5_fu_663_p2;
wire   [0:0] tmp_6_mid1_fu_677_p2;
wire   [0:0] tmp_6_fu_683_p2;
wire   [18:0] iteration_1_mid2_fu_635_p3;
wire   [0:0] tmp_9_fu_737_p2;
wire   [31:0] tmp_7_fu_743_p2;
wire   [31:0] p_j_1_fu_749_p3;
wire   [0:0] tmp_4_mid2_fu_669_p3;
wire   [0:0] tmp_6_mid2_fu_689_p3;
wire   [0:0] tmp_14_fu_816_p2;
wire   [7:0] r_V_s_fu_1632_p1;
wire  signed [15:0] r_V_s_fu_1632_p2;
wire   [7:0] r_V_2_0_1_fu_1654_p1;
wire  signed [15:0] r_V_2_0_1_fu_1654_p2;
wire   [7:0] r_V_2_0_2_fu_1676_p1;
wire  signed [15:0] r_V_2_0_2_fu_1676_p2;
wire   [7:0] r_V_2_0_3_fu_1698_p1;
wire  signed [15:0] r_V_2_0_3_fu_1698_p2;
wire   [7:0] r_V_2_0_4_fu_1720_p1;
wire  signed [15:0] r_V_2_0_4_fu_1720_p2;
wire   [7:0] r_V_2_0_5_fu_1741_p1;
wire  signed [15:0] r_V_2_0_5_fu_1741_p2;
wire   [7:0] r_V_2_0_6_fu_1763_p1;
wire  signed [15:0] r_V_2_0_6_fu_1763_p2;
wire   [7:0] r_V_2_1_fu_1785_p1;
wire  signed [15:0] r_V_2_1_fu_1785_p2;
wire   [7:0] r_V_2_1_1_fu_1807_p1;
wire  signed [15:0] r_V_2_1_1_fu_1807_p2;
wire   [7:0] r_V_2_1_2_fu_1829_p1;
wire  signed [15:0] r_V_2_1_2_fu_1829_p2;
wire   [7:0] r_V_2_1_3_fu_1851_p1;
wire  signed [15:0] r_V_2_1_3_fu_1851_p2;
wire   [7:0] r_V_2_1_4_fu_1873_p1;
wire  signed [15:0] r_V_2_1_4_fu_1873_p2;
wire   [7:0] r_V_2_1_5_fu_1894_p1;
wire  signed [15:0] r_V_2_1_5_fu_1894_p2;
wire   [7:0] r_V_2_1_6_fu_1916_p1;
wire  signed [15:0] r_V_2_1_6_fu_1916_p2;
wire   [7:0] r_V_2_2_fu_1938_p1;
wire  signed [15:0] r_V_2_2_fu_1938_p2;
wire   [7:0] r_V_2_2_1_fu_1960_p1;
wire  signed [15:0] r_V_2_2_1_fu_1960_p2;
wire   [7:0] r_V_2_2_2_fu_1982_p1;
wire  signed [15:0] r_V_2_2_2_fu_1982_p2;
wire   [7:0] r_V_2_2_3_fu_2004_p1;
wire  signed [15:0] r_V_2_2_3_fu_2004_p2;
wire   [7:0] r_V_2_2_4_fu_2026_p1;
wire  signed [15:0] r_V_2_2_4_fu_2026_p2;
wire   [7:0] r_V_2_2_5_fu_2047_p1;
wire  signed [15:0] r_V_2_2_5_fu_2047_p2;
wire   [7:0] r_V_2_2_6_fu_2069_p1;
wire  signed [15:0] r_V_2_2_6_fu_2069_p2;
wire   [7:0] r_V_2_3_fu_2091_p1;
wire  signed [15:0] r_V_2_3_fu_2091_p2;
wire   [7:0] r_V_2_3_1_fu_2113_p1;
wire  signed [15:0] r_V_2_3_1_fu_2113_p2;
wire   [7:0] r_V_2_3_2_fu_2135_p1;
wire  signed [15:0] r_V_2_3_2_fu_2135_p2;
wire   [7:0] r_V_2_3_3_fu_2157_p1;
wire  signed [15:0] r_V_2_3_3_fu_2157_p2;
wire   [7:0] r_V_2_3_4_fu_2179_p1;
wire  signed [15:0] r_V_2_3_4_fu_2179_p2;
wire   [7:0] r_V_2_3_5_fu_2200_p1;
wire  signed [15:0] r_V_2_3_5_fu_2200_p2;
wire   [7:0] r_V_2_3_6_fu_2222_p1;
wire  signed [15:0] r_V_2_3_6_fu_2222_p2;
wire   [7:0] r_V_2_4_fu_2244_p1;
wire  signed [15:0] r_V_2_4_fu_2244_p2;
wire   [7:0] r_V_2_4_1_fu_2266_p1;
wire  signed [15:0] r_V_2_4_1_fu_2266_p2;
wire   [7:0] r_V_2_4_2_fu_2288_p1;
wire  signed [15:0] r_V_2_4_2_fu_2288_p2;
wire   [7:0] r_V_2_4_3_fu_2310_p1;
wire  signed [15:0] r_V_2_4_3_fu_2310_p2;
wire   [7:0] r_V_2_4_4_fu_2332_p1;
wire  signed [15:0] r_V_2_4_4_fu_2332_p2;
wire   [7:0] r_V_2_4_5_fu_2353_p1;
wire  signed [15:0] r_V_2_4_5_fu_2353_p2;
wire   [7:0] r_V_2_4_6_fu_2375_p1;
wire  signed [15:0] r_V_2_4_6_fu_2375_p2;
wire   [7:0] r_V_2_5_fu_2397_p1;
wire  signed [15:0] r_V_2_5_fu_2397_p2;
wire   [7:0] r_V_2_5_1_fu_2419_p1;
wire  signed [15:0] r_V_2_5_1_fu_2419_p2;
wire   [7:0] r_V_2_5_2_fu_2441_p1;
wire  signed [15:0] r_V_2_5_2_fu_2441_p2;
wire   [7:0] r_V_2_5_3_fu_2463_p1;
wire  signed [15:0] r_V_2_5_3_fu_2463_p2;
wire   [7:0] r_V_2_5_4_fu_2485_p1;
wire  signed [15:0] r_V_2_5_4_fu_2485_p2;
wire   [7:0] r_V_2_5_5_fu_2506_p1;
wire  signed [15:0] r_V_2_5_5_fu_2506_p2;
wire   [7:0] r_V_2_5_6_fu_2528_p1;
wire  signed [15:0] r_V_2_5_6_fu_2528_p2;
wire   [7:0] r_V_2_6_fu_2550_p1;
wire  signed [15:0] r_V_2_6_fu_2550_p2;
wire   [7:0] r_V_2_6_1_fu_2572_p1;
wire  signed [15:0] r_V_2_6_1_fu_2572_p2;
wire   [7:0] r_V_2_6_2_fu_2594_p1;
wire  signed [15:0] r_V_2_6_2_fu_2594_p2;
wire   [7:0] r_V_2_6_3_fu_2616_p1;
wire  signed [15:0] r_V_2_6_3_fu_2616_p2;
wire   [7:0] r_V_2_6_4_fu_2638_p1;
wire  signed [15:0] r_V_2_6_4_fu_2638_p2;
wire   [7:0] r_V_2_6_5_fu_2659_p1;
wire  signed [15:0] r_V_2_6_5_fu_2659_p2;
wire   [7:0] r_V_2_6_6_fu_2681_p1;
wire  signed [15:0] r_V_2_6_6_fu_2681_p2;
wire  signed [16:0] tmp_38_0_2_cast_fu_1682_p1;
wire  signed [16:0] tmp_38_0_1_cast_fu_1660_p1;
wire   [16:0] tmp5_fu_2691_p2;
wire  signed [17:0] tmp_381_cast_fu_1638_p1;
wire  signed [17:0] tmp5_cast_fu_2697_p1;
wire   [17:0] tmp4_fu_2701_p2;
wire  signed [16:0] tmp_38_0_5_cast_fu_1747_p1;
wire  signed [16:0] tmp_38_0_4_cast_fu_1726_p1;
wire   [16:0] tmp7_fu_2711_p2;
wire  signed [17:0] tmp_38_0_3_cast_fu_1704_p1;
wire  signed [17:0] tmp7_cast_fu_2717_p1;
wire   [17:0] tmp6_fu_2721_p2;
wire  signed [18:0] tmp4_cast_fu_2707_p1;
wire  signed [18:0] tmp6_cast_fu_2727_p1;
wire   [18:0] tmp3_fu_2731_p2;
wire  signed [16:0] tmp_38_1_1_cast_fu_1813_p1;
wire  signed [16:0] tmp_38_1_cast_fu_1791_p1;
wire   [16:0] tmp_fu_2741_p2;
wire  signed [17:0] tmp_38_0_6_cast_fu_1769_p1;
wire  signed [17:0] tmp10_cast_fu_2747_p1;
wire   [17:0] tmp9_fu_2751_p2;
wire  signed [16:0] tmp_38_1_4_cast_fu_1879_p1;
wire  signed [16:0] tmp_38_1_3_cast_fu_1857_p1;
wire   [16:0] tmp10_fu_2761_p2;
wire  signed [17:0] tmp_38_1_2_cast_fu_1835_p1;
wire  signed [17:0] tmp12_cast_fu_2767_p1;
wire   [17:0] tmp11_fu_2771_p2;
wire  signed [18:0] tmp9_cast_fu_2757_p1;
wire  signed [18:0] tmp11_cast_fu_2777_p1;
wire   [18:0] tmp8_fu_2781_p2;
wire  signed [19:0] tmp3_cast_fu_2737_p1;
wire  signed [19:0] tmp8_cast_fu_2787_p1;
wire   [19:0] tmp2_fu_2791_p2;
wire  signed [16:0] tmp_38_2_cast_fu_1944_p1;
wire  signed [16:0] tmp_38_1_6_cast_fu_1922_p1;
wire   [16:0] tmp12_fu_2801_p2;
wire  signed [17:0] tmp_38_1_5_cast_fu_1900_p1;
wire  signed [17:0] tmp16_cast_fu_2807_p1;
wire   [17:0] tmp15_fu_2811_p2;
wire  signed [16:0] tmp_38_2_3_cast_fu_2010_p1;
wire  signed [16:0] tmp_38_2_2_cast_fu_1988_p1;
wire   [16:0] tmp16_fu_2821_p2;
wire  signed [17:0] tmp_38_2_1_cast_fu_1966_p1;
wire  signed [17:0] tmp18_cast_fu_2827_p1;
wire   [17:0] tmp17_fu_2831_p2;
wire  signed [18:0] tmp15_cast_fu_2817_p1;
wire  signed [18:0] tmp17_cast_fu_2837_p1;
wire   [18:0] tmp14_fu_2841_p2;
wire  signed [16:0] tmp_38_2_6_cast_fu_2075_p1;
wire  signed [16:0] tmp_38_2_5_cast_fu_2053_p1;
wire   [16:0] tmp18_fu_2851_p2;
wire  signed [17:0] tmp_38_2_4_cast_fu_2032_p1;
wire  signed [17:0] tmp21_cast_fu_2857_p1;
wire   [17:0] tmp20_fu_2861_p2;
wire  signed [16:0] tmp_38_3_2_cast_fu_2141_p1;
wire  signed [16:0] tmp_38_3_1_cast_fu_2119_p1;
wire   [16:0] tmp21_fu_2871_p2;
wire  signed [17:0] tmp_38_3_cast_fu_2097_p1;
wire  signed [17:0] tmp23_cast_fu_2877_p1;
wire   [17:0] tmp22_fu_2881_p2;
wire  signed [18:0] tmp20_cast_fu_2867_p1;
wire  signed [18:0] tmp22_cast_fu_2887_p1;
wire   [18:0] tmp19_fu_2891_p2;
wire  signed [19:0] tmp14_cast_fu_2847_p1;
wire  signed [19:0] tmp19_cast_fu_2897_p1;
wire   [19:0] tmp13_fu_2901_p2;
wire  signed [20:0] tmp2_cast_fu_2797_p1;
wire  signed [20:0] tmp13_cast_fu_2907_p1;
wire   [20:0] tmp1_fu_2911_p2;
wire  signed [16:0] tmp_38_3_5_cast_fu_2206_p1;
wire  signed [16:0] tmp_38_3_4_cast_fu_2185_p1;
wire   [16:0] tmp23_fu_2921_p2;
wire  signed [17:0] tmp_38_3_3_cast_fu_2163_p1;
wire  signed [17:0] tmp28_cast_fu_2927_p1;
wire   [17:0] tmp27_fu_2931_p2;
wire  signed [16:0] tmp_38_4_1_cast_fu_2272_p1;
wire  signed [16:0] tmp_38_4_cast_fu_2250_p1;
wire   [16:0] tmp28_fu_2941_p2;
wire  signed [17:0] tmp_38_3_6_cast_fu_2228_p1;
wire  signed [17:0] tmp30_cast_fu_2947_p1;
wire   [17:0] tmp29_fu_2951_p2;
wire  signed [18:0] tmp27_cast_fu_2937_p1;
wire  signed [18:0] tmp29_cast_fu_2957_p1;
wire   [18:0] tmp26_fu_2961_p2;
wire  signed [16:0] tmp_38_4_4_cast_fu_2338_p1;
wire  signed [16:0] tmp_38_4_3_cast_fu_2316_p1;
wire   [16:0] tmp30_fu_2971_p2;
wire  signed [17:0] tmp_38_4_2_cast_fu_2294_p1;
wire  signed [17:0] tmp33_cast_fu_2977_p1;
wire   [17:0] tmp32_fu_2981_p2;
wire  signed [16:0] tmp_38_5_cast_fu_2403_p1;
wire  signed [16:0] tmp_38_4_6_cast_fu_2381_p1;
wire   [16:0] tmp33_fu_2991_p2;
wire  signed [17:0] tmp_38_4_5_cast_fu_2359_p1;
wire  signed [17:0] tmp35_cast_fu_2997_p1;
wire   [17:0] tmp34_fu_3001_p2;
wire  signed [18:0] tmp32_cast_fu_2987_p1;
wire  signed [18:0] tmp34_cast_fu_3007_p1;
wire   [18:0] tmp31_fu_3011_p2;
wire  signed [19:0] tmp26_cast_fu_2967_p1;
wire  signed [19:0] tmp31_cast_fu_3017_p1;
wire   [19:0] tmp25_fu_3021_p2;
wire  signed [16:0] tmp_38_5_3_cast_fu_2469_p1;
wire  signed [16:0] tmp_38_5_2_cast_fu_2447_p1;
wire   [16:0] tmp35_fu_3031_p2;
wire  signed [17:0] tmp_38_5_1_cast_fu_2425_p1;
wire  signed [17:0] tmp39_cast_fu_3037_p1;
wire   [17:0] tmp38_fu_3041_p2;
wire  signed [16:0] tmp_38_5_6_cast_fu_2534_p1;
wire  signed [16:0] tmp_38_5_5_cast_fu_2512_p1;
wire   [16:0] tmp39_fu_3051_p2;
wire  signed [17:0] tmp_38_5_4_cast_fu_2491_p1;
wire  signed [17:0] tmp41_cast_fu_3057_p1;
wire   [17:0] tmp40_fu_3061_p2;
wire  signed [18:0] tmp38_cast_fu_3047_p1;
wire  signed [18:0] tmp40_cast_fu_3067_p1;
wire   [18:0] tmp37_fu_3071_p2;
wire  signed [16:0] tmp_38_6_2_cast_fu_2600_p1;
wire  signed [16:0] tmp_38_6_1_cast_fu_2578_p1;
wire   [16:0] tmp41_fu_3081_p2;
wire  signed [17:0] tmp_38_6_cast_fu_2556_p1;
wire  signed [17:0] tmp44_cast_fu_3087_p1;
wire   [17:0] tmp43_fu_3091_p2;
wire  signed [16:0] tmp_38_6_4_cast_fu_2644_p1;
wire  signed [16:0] tmp_38_6_3_cast_fu_2622_p1;
wire   [16:0] tmp44_fu_3101_p2;
wire  signed [16:0] tmp_38_6_6_cast_fu_2687_p1;
wire  signed [16:0] tmp_38_6_5_cast_fu_2665_p1;
wire   [16:0] tmp46_fu_3111_p2;
wire  signed [17:0] tmp46_cast_fu_3107_p1;
wire  signed [17:0] tmp47_cast_fu_3117_p1;
wire   [17:0] tmp45_fu_3121_p2;
wire  signed [18:0] tmp43_cast_fu_3097_p1;
wire  signed [18:0] tmp45_cast_fu_3127_p1;
wire   [18:0] tmp42_fu_3131_p2;
wire  signed [19:0] tmp37_cast_fu_3077_p1;
wire  signed [19:0] tmp42_cast_fu_3137_p1;
wire   [19:0] tmp36_fu_3141_p2;
wire  signed [20:0] tmp25_cast_fu_3027_p1;
wire  signed [20:0] tmp36_cast_fu_3147_p1;
wire   [20:0] tmp24_fu_3151_p2;
wire  signed [21:0] tmp1_cast_fu_2917_p1;
wire  signed [21:0] tmp24_cast_fu_3157_p1;
wire   [21:0] out_temp_V_6_6_fu_3161_p2;
wire  signed [22:0] grp_fu_3175_p0;
wire   [7:0] grp_fu_3175_p2;
wire   [7:0] tmp_67_fu_3181_p1;
reg    grp_fu_3175_ce;
wire    ap_CS_fsm_state32;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] r_V_2_0_1_fu_1654_p10;
wire   [15:0] r_V_2_0_2_fu_1676_p10;
wire   [15:0] r_V_2_0_3_fu_1698_p10;
wire   [15:0] r_V_2_0_4_fu_1720_p10;
wire   [15:0] r_V_2_0_5_fu_1741_p10;
wire   [15:0] r_V_2_0_6_fu_1763_p10;
wire   [15:0] r_V_2_1_1_fu_1807_p10;
wire   [15:0] r_V_2_1_2_fu_1829_p10;
wire   [15:0] r_V_2_1_3_fu_1851_p10;
wire   [15:0] r_V_2_1_4_fu_1873_p10;
wire   [15:0] r_V_2_1_5_fu_1894_p10;
wire   [15:0] r_V_2_1_6_fu_1916_p10;
wire   [15:0] r_V_2_1_fu_1785_p10;
wire   [15:0] r_V_2_2_1_fu_1960_p10;
wire   [15:0] r_V_2_2_2_fu_1982_p10;
wire   [15:0] r_V_2_2_3_fu_2004_p10;
wire   [15:0] r_V_2_2_4_fu_2026_p10;
wire   [15:0] r_V_2_2_5_fu_2047_p10;
wire   [15:0] r_V_2_2_6_fu_2069_p10;
wire   [15:0] r_V_2_2_fu_1938_p10;
wire   [15:0] r_V_2_3_1_fu_2113_p10;
wire   [15:0] r_V_2_3_2_fu_2135_p10;
wire   [15:0] r_V_2_3_3_fu_2157_p10;
wire   [15:0] r_V_2_3_4_fu_2179_p10;
wire   [15:0] r_V_2_3_5_fu_2200_p10;
wire   [15:0] r_V_2_3_6_fu_2222_p10;
wire   [15:0] r_V_2_3_fu_2091_p10;
wire   [15:0] r_V_2_4_1_fu_2266_p10;
wire   [15:0] r_V_2_4_2_fu_2288_p10;
wire   [15:0] r_V_2_4_3_fu_2310_p10;
wire   [15:0] r_V_2_4_4_fu_2332_p10;
wire   [15:0] r_V_2_4_5_fu_2353_p10;
wire   [15:0] r_V_2_4_6_fu_2375_p10;
wire   [15:0] r_V_2_4_fu_2244_p10;
wire   [15:0] r_V_2_5_1_fu_2419_p10;
wire   [15:0] r_V_2_5_2_fu_2441_p10;
wire   [15:0] r_V_2_5_3_fu_2463_p10;
wire   [15:0] r_V_2_5_4_fu_2485_p10;
wire   [15:0] r_V_2_5_5_fu_2506_p10;
wire   [15:0] r_V_2_5_6_fu_2528_p10;
wire   [15:0] r_V_2_5_fu_2397_p10;
wire   [15:0] r_V_2_6_1_fu_2572_p10;
wire   [15:0] r_V_2_6_2_fu_2594_p10;
wire   [15:0] r_V_2_6_3_fu_2616_p10;
wire   [15:0] r_V_2_6_4_fu_2638_p10;
wire   [15:0] r_V_2_6_5_fu_2659_p10;
wire   [15:0] r_V_2_6_6_fu_2681_p10;
wire   [15:0] r_V_2_6_fu_2550_p10;
wire   [15:0] r_V_s_fu_1632_p10;
reg    ap_condition_2536;
reg    ap_condition_2534;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 in_img_V_0_sel_rd = 1'b0;
#0 in_img_V_0_sel_wr = 1'b0;
#0 in_img_V_0_state = 2'd0;
#0 out_img_V_1_sel_rd = 1'b0;
#0 out_img_V_1_sel_wr = 1'b0;
#0 out_img_V_1_state = 2'd0;
#0 window_V_0_6 = 8'd0;
#0 window_V_1_6 = 8'd0;
#0 window_V_2_6 = 8'd0;
#0 window_V_3_6 = 8'd0;
#0 window_V_4_6 = 8'd0;
#0 window_V_5_6 = 8'd0;
#0 window_V_6_6 = 8'd0;
#0 kernel_sum_V = 8'd1;
#0 kernel_off_V = 8'd0;
#0 window_V_0_1 = 8'd0;
#0 window_V_0_2 = 8'd0;
#0 window_V_0_3 = 8'd0;
#0 window_V_0_4 = 8'd0;
#0 window_V_0_5 = 8'd0;
#0 window_V_1_1 = 8'd0;
#0 window_V_1_2 = 8'd0;
#0 window_V_1_3 = 8'd0;
#0 window_V_1_4 = 8'd0;
#0 window_V_1_5 = 8'd0;
#0 window_V_2_1 = 8'd0;
#0 window_V_2_2 = 8'd0;
#0 window_V_2_3 = 8'd0;
#0 window_V_2_4 = 8'd0;
#0 window_V_2_5 = 8'd0;
#0 window_V_3_1 = 8'd0;
#0 window_V_3_2 = 8'd0;
#0 window_V_3_3 = 8'd0;
#0 window_V_3_4 = 8'd0;
#0 window_V_3_5 = 8'd0;
#0 window_V_4_1 = 8'd0;
#0 window_V_4_2 = 8'd0;
#0 window_V_4_3 = 8'd0;
#0 window_V_4_4 = 8'd0;
#0 window_V_4_5 = 8'd0;
#0 window_V_5_1 = 8'd0;
#0 window_V_5_2 = 8'd0;
#0 window_V_5_3 = 8'd0;
#0 window_V_5_4 = 8'd0;
#0 window_V_5_5 = 8'd0;
#0 window_V_6_1 = 8'd0;
#0 window_V_6_2 = 8'd0;
#0 window_V_6_3 = 8'd0;
#0 window_V_6_4 = 8'd0;
#0 window_V_6_5 = 8'd0;
#0 kernel_V_0_0 = 8'd0;
#0 kernel_V_0_1 = 8'd0;
#0 kernel_V_0_2 = 8'd0;
#0 kernel_V_0_3 = 8'd0;
#0 kernel_V_0_4 = 8'd0;
#0 kernel_V_0_5 = 8'd0;
#0 kernel_V_0_6 = 8'd0;
#0 kernel_V_1_0 = 8'd0;
#0 kernel_V_1_1 = 8'd0;
#0 kernel_V_1_2 = 8'd0;
#0 kernel_V_1_3 = 8'd0;
#0 kernel_V_1_4 = 8'd0;
#0 kernel_V_1_5 = 8'd0;
#0 kernel_V_1_6 = 8'd0;
#0 kernel_V_2_0 = 8'd0;
#0 kernel_V_2_1 = 8'd0;
#0 kernel_V_2_2 = 8'd0;
#0 kernel_V_2_3 = 8'd0;
#0 kernel_V_2_4 = 8'd0;
#0 kernel_V_2_5 = 8'd0;
#0 kernel_V_2_6 = 8'd0;
#0 kernel_V_3_0 = 8'd0;
#0 kernel_V_3_1 = 8'd0;
#0 kernel_V_3_2 = 8'd0;
#0 kernel_V_3_3 = 8'd0;
#0 kernel_V_3_4 = 8'd0;
#0 kernel_V_3_5 = 8'd0;
#0 kernel_V_3_6 = 8'd0;
#0 kernel_V_4_0 = 8'd0;
#0 kernel_V_4_1 = 8'd0;
#0 kernel_V_4_2 = 8'd0;
#0 kernel_V_4_3 = 8'd0;
#0 kernel_V_4_4 = 8'd0;
#0 kernel_V_4_5 = 8'd0;
#0 kernel_V_4_6 = 8'd0;
#0 kernel_V_5_0 = 8'd0;
#0 kernel_V_5_1 = 8'd0;
#0 kernel_V_5_2 = 8'd0;
#0 kernel_V_5_3 = 8'd0;
#0 kernel_V_5_4 = 8'd0;
#0 kernel_V_5_5 = 8'd0;
#0 kernel_V_5_6 = 8'd0;
#0 kernel_V_6_0 = 8'd0;
#0 kernel_V_6_1 = 8'd0;
#0 kernel_V_6_2 = 8'd0;
#0 kernel_V_6_3 = 8'd0;
#0 kernel_V_6_4 = 8'd0;
#0 kernel_V_6_5 = 8'd0;
#0 kernel_V_6_6 = 8'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
end

convolution_filtebkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_0_address0),
    .ce0(line_buffer_V_0_ce0),
    .q0(line_buffer_V_0_q0),
    .address1(line_buffer_V_0_addr_reg_3324),
    .ce1(line_buffer_V_0_ce1),
    .we1(line_buffer_V_0_we1),
    .d1(line_buffer_V_1_q0)
);

convolution_filtebkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_1_address0),
    .ce0(line_buffer_V_1_ce0),
    .q0(line_buffer_V_1_q0),
    .address1(line_buffer_V_1_addr_reg_3330),
    .ce1(line_buffer_V_1_ce1),
    .we1(line_buffer_V_1_we1),
    .d1(line_buffer_V_2_q0)
);

convolution_filtebkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_2_address0),
    .ce0(line_buffer_V_2_ce0),
    .q0(line_buffer_V_2_q0),
    .address1(line_buffer_V_2_addr_reg_3336),
    .ce1(line_buffer_V_2_ce1),
    .we1(line_buffer_V_2_we1),
    .d1(line_buffer_V_3_q0)
);

convolution_filtebkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_3_address0),
    .ce0(line_buffer_V_3_ce0),
    .q0(line_buffer_V_3_q0),
    .address1(line_buffer_V_3_addr_reg_3342),
    .ce1(line_buffer_V_3_ce1),
    .we1(line_buffer_V_3_we1),
    .d1(line_buffer_V_4_q0)
);

convolution_filtebkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_4_address0),
    .ce0(line_buffer_V_4_ce0),
    .q0(line_buffer_V_4_q0),
    .address1(line_buffer_V_4_addr_reg_3348),
    .ce1(line_buffer_V_4_ce1),
    .we1(line_buffer_V_4_we1),
    .d1(line_buffer_V_5_q0)
);

convolution_filtebkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_5_address0),
    .ce0(line_buffer_V_5_ce0),
    .q0(line_buffer_V_5_q0),
    .address1(line_buffer_V_5_address1),
    .ce1(line_buffer_V_5_ce1),
    .we1(line_buffer_V_5_we1),
    .d1(in_img_V_0_data_out)
);

convolution_filter_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
convolution_filter_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .kernel_config_V_address0(kernel_config_V_address0),
    .kernel_config_V_ce0(kernel_config_V_ce0),
    .kernel_config_V_q0(kernel_config_V_q0)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U1(
    .din0(kernel_V_0_0),
    .din1(r_V_s_fu_1632_p1),
    .dout(r_V_s_fu_1632_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U2(
    .din0(kernel_V_0_1),
    .din1(r_V_2_0_1_fu_1654_p1),
    .dout(r_V_2_0_1_fu_1654_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U3(
    .din0(kernel_V_0_2),
    .din1(r_V_2_0_2_fu_1676_p1),
    .dout(r_V_2_0_2_fu_1676_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U4(
    .din0(kernel_V_0_3),
    .din1(r_V_2_0_3_fu_1698_p1),
    .dout(r_V_2_0_3_fu_1698_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U5(
    .din0(kernel_V_0_4),
    .din1(r_V_2_0_4_fu_1720_p1),
    .dout(r_V_2_0_4_fu_1720_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U6(
    .din0(kernel_V_0_5),
    .din1(r_V_2_0_5_fu_1741_p1),
    .dout(r_V_2_0_5_fu_1741_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U7(
    .din0(kernel_V_0_6),
    .din1(r_V_2_0_6_fu_1763_p1),
    .dout(r_V_2_0_6_fu_1763_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U8(
    .din0(kernel_V_1_0),
    .din1(r_V_2_1_fu_1785_p1),
    .dout(r_V_2_1_fu_1785_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U9(
    .din0(kernel_V_1_1),
    .din1(r_V_2_1_1_fu_1807_p1),
    .dout(r_V_2_1_1_fu_1807_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U10(
    .din0(kernel_V_1_2),
    .din1(r_V_2_1_2_fu_1829_p1),
    .dout(r_V_2_1_2_fu_1829_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U11(
    .din0(kernel_V_1_3),
    .din1(r_V_2_1_3_fu_1851_p1),
    .dout(r_V_2_1_3_fu_1851_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U12(
    .din0(kernel_V_1_4),
    .din1(r_V_2_1_4_fu_1873_p1),
    .dout(r_V_2_1_4_fu_1873_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U13(
    .din0(kernel_V_1_5),
    .din1(r_V_2_1_5_fu_1894_p1),
    .dout(r_V_2_1_5_fu_1894_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U14(
    .din0(kernel_V_1_6),
    .din1(r_V_2_1_6_fu_1916_p1),
    .dout(r_V_2_1_6_fu_1916_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U15(
    .din0(kernel_V_2_0),
    .din1(r_V_2_2_fu_1938_p1),
    .dout(r_V_2_2_fu_1938_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U16(
    .din0(kernel_V_2_1),
    .din1(r_V_2_2_1_fu_1960_p1),
    .dout(r_V_2_2_1_fu_1960_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U17(
    .din0(kernel_V_2_2),
    .din1(r_V_2_2_2_fu_1982_p1),
    .dout(r_V_2_2_2_fu_1982_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U18(
    .din0(kernel_V_2_3),
    .din1(r_V_2_2_3_fu_2004_p1),
    .dout(r_V_2_2_3_fu_2004_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U19(
    .din0(kernel_V_2_4),
    .din1(r_V_2_2_4_fu_2026_p1),
    .dout(r_V_2_2_4_fu_2026_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U20(
    .din0(kernel_V_2_5),
    .din1(r_V_2_2_5_fu_2047_p1),
    .dout(r_V_2_2_5_fu_2047_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U21(
    .din0(kernel_V_2_6),
    .din1(r_V_2_2_6_fu_2069_p1),
    .dout(r_V_2_2_6_fu_2069_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U22(
    .din0(kernel_V_3_0),
    .din1(r_V_2_3_fu_2091_p1),
    .dout(r_V_2_3_fu_2091_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U23(
    .din0(kernel_V_3_1),
    .din1(r_V_2_3_1_fu_2113_p1),
    .dout(r_V_2_3_1_fu_2113_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U24(
    .din0(kernel_V_3_2),
    .din1(r_V_2_3_2_fu_2135_p1),
    .dout(r_V_2_3_2_fu_2135_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U25(
    .din0(kernel_V_3_3),
    .din1(r_V_2_3_3_fu_2157_p1),
    .dout(r_V_2_3_3_fu_2157_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U26(
    .din0(kernel_V_3_4),
    .din1(r_V_2_3_4_fu_2179_p1),
    .dout(r_V_2_3_4_fu_2179_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U27(
    .din0(kernel_V_3_5),
    .din1(r_V_2_3_5_fu_2200_p1),
    .dout(r_V_2_3_5_fu_2200_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U28(
    .din0(kernel_V_3_6),
    .din1(r_V_2_3_6_fu_2222_p1),
    .dout(r_V_2_3_6_fu_2222_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U29(
    .din0(kernel_V_4_0),
    .din1(r_V_2_4_fu_2244_p1),
    .dout(r_V_2_4_fu_2244_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U30(
    .din0(kernel_V_4_1),
    .din1(r_V_2_4_1_fu_2266_p1),
    .dout(r_V_2_4_1_fu_2266_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U31(
    .din0(kernel_V_4_2),
    .din1(r_V_2_4_2_fu_2288_p1),
    .dout(r_V_2_4_2_fu_2288_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U32(
    .din0(kernel_V_4_3),
    .din1(r_V_2_4_3_fu_2310_p1),
    .dout(r_V_2_4_3_fu_2310_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U33(
    .din0(kernel_V_4_4),
    .din1(r_V_2_4_4_fu_2332_p1),
    .dout(r_V_2_4_4_fu_2332_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U34(
    .din0(kernel_V_4_5),
    .din1(r_V_2_4_5_fu_2353_p1),
    .dout(r_V_2_4_5_fu_2353_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U35(
    .din0(kernel_V_4_6),
    .din1(r_V_2_4_6_fu_2375_p1),
    .dout(r_V_2_4_6_fu_2375_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U36(
    .din0(kernel_V_5_0),
    .din1(r_V_2_5_fu_2397_p1),
    .dout(r_V_2_5_fu_2397_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U37(
    .din0(kernel_V_5_1),
    .din1(r_V_2_5_1_fu_2419_p1),
    .dout(r_V_2_5_1_fu_2419_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U38(
    .din0(kernel_V_5_2),
    .din1(r_V_2_5_2_fu_2441_p1),
    .dout(r_V_2_5_2_fu_2441_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U39(
    .din0(kernel_V_5_3),
    .din1(r_V_2_5_3_fu_2463_p1),
    .dout(r_V_2_5_3_fu_2463_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U40(
    .din0(kernel_V_5_4),
    .din1(r_V_2_5_4_fu_2485_p1),
    .dout(r_V_2_5_4_fu_2485_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U41(
    .din0(kernel_V_5_5),
    .din1(r_V_2_5_5_fu_2506_p1),
    .dout(r_V_2_5_5_fu_2506_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U42(
    .din0(kernel_V_5_6),
    .din1(r_V_2_5_6_fu_2528_p1),
    .dout(r_V_2_5_6_fu_2528_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U43(
    .din0(kernel_V_6_0),
    .din1(r_V_2_6_fu_2550_p1),
    .dout(r_V_2_6_fu_2550_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U44(
    .din0(kernel_V_6_1),
    .din1(r_V_2_6_1_fu_2572_p1),
    .dout(r_V_2_6_1_fu_2572_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U45(
    .din0(kernel_V_6_2),
    .din1(r_V_2_6_2_fu_2594_p1),
    .dout(r_V_2_6_2_fu_2594_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U46(
    .din0(kernel_V_6_3),
    .din1(r_V_2_6_3_fu_2616_p1),
    .dout(r_V_2_6_3_fu_2616_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U47(
    .din0(kernel_V_6_4),
    .din1(r_V_2_6_4_fu_2638_p1),
    .dout(r_V_2_6_4_fu_2638_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U48(
    .din0(kernel_V_6_5),
    .din1(r_V_2_6_5_fu_2659_p1),
    .dout(r_V_2_6_5_fu_2659_p2)
);

convolution_filtehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolution_filtehbi_U49(
    .din0(kernel_V_6_6),
    .din1(r_V_2_6_6_fu_2681_p1),
    .dout(r_V_2_6_6_fu_2681_p2)
);

convolution_filteibs #(
    .ID( 1 ),
    .NUM_STAGE( 27 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolution_filteibs_U50(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3175_p0),
    .din1(kernel_sum_V),
    .ce(grp_fu_3175_ce),
    .dout(grp_fu_3175_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter29 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_img_V_0_sel_rd <= 1'b0;
    end else begin
        if (((in_img_V_0_ack_out == 1'b1) & (in_img_V_0_vld_out == 1'b1))) begin
            in_img_V_0_sel_rd <= ~in_img_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_img_V_0_sel_wr <= 1'b0;
    end else begin
        if (((in_img_V_0_ack_in == 1'b1) & (in_img_V_0_vld_in == 1'b1))) begin
            in_img_V_0_sel_wr <= ~in_img_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_img_V_0_state <= 2'd0;
    end else begin
        if ((((in_img_V_0_state == 2'd2) & (in_img_V_0_vld_in == 1'b0)) | ((in_img_V_0_state == 2'd3) & (in_img_V_0_vld_in == 1'b0) & (in_img_V_0_ack_out == 1'b1)))) begin
            in_img_V_0_state <= 2'd2;
        end else if ((((in_img_V_0_state == 2'd1) & (in_img_V_0_ack_out == 1'b0)) | ((in_img_V_0_state == 2'd3) & (in_img_V_0_ack_out == 1'b0) & (in_img_V_0_vld_in == 1'b1)))) begin
            in_img_V_0_state <= 2'd1;
        end else if (((~((in_img_V_0_vld_in == 1'b0) & (in_img_V_0_ack_out == 1'b1)) & ~((in_img_V_0_ack_out == 1'b0) & (in_img_V_0_vld_in == 1'b1)) & (in_img_V_0_state == 2'd3)) | ((in_img_V_0_state == 2'd1) & (in_img_V_0_ack_out == 1'b1)) | ((in_img_V_0_state == 2'd2) & (in_img_V_0_vld_in == 1'b1)))) begin
            in_img_V_0_state <= 2'd3;
        end else begin
            in_img_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_img_V_1_sel_rd <= 1'b0;
    end else begin
        if (((out_img_V_1_ack_out == 1'b1) & (out_img_V_1_vld_out == 1'b1))) begin
            out_img_V_1_sel_rd <= ~out_img_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_img_V_1_sel_wr <= 1'b0;
    end else begin
        if (((out_img_V_1_ack_in == 1'b1) & (out_img_V_1_vld_in == 1'b1))) begin
            out_img_V_1_sel_wr <= ~out_img_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_img_V_1_state <= 2'd0;
    end else begin
        if ((((out_img_V_1_state == 2'd2) & (out_img_V_1_vld_in == 1'b0)) | ((out_img_V_1_state == 2'd3) & (out_img_V_1_vld_in == 1'b0) & (out_img_V_1_ack_out == 1'b1)))) begin
            out_img_V_1_state <= 2'd2;
        end else if ((((out_img_V_1_state == 2'd1) & (out_img_V_1_ack_out == 1'b0)) | ((out_img_V_1_state == 2'd3) & (out_img_V_1_ack_out == 1'b0) & (out_img_V_1_vld_in == 1'b1)))) begin
            out_img_V_1_state <= 2'd1;
        end else if (((~((out_img_V_1_vld_in == 1'b0) & (out_img_V_1_ack_out == 1'b1)) & ~((out_img_V_1_ack_out == 1'b0) & (out_img_V_1_vld_in == 1'b1)) & (out_img_V_1_state == 2'd3)) | ((out_img_V_1_state == 2'd1) & (out_img_V_1_ack_out == 1'b1)) | ((out_img_V_1_state == 2'd2) & (out_img_V_1_vld_in == 1'b1)))) begin
            out_img_V_1_state <= 2'd3;
        end else begin
            out_img_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_reg_527 <= col_1_fu_834_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_reg_527 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_713_p2 == 1'd1) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_fu_302 <= tmp_7_i_1_fu_757_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_1_fu_302 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_temp_V_1_fu_310 <= in_img_V_0_data_out;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        in_temp_V_1_fu_310 <= window_V_6_6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_483 <= indvar_flatten_next_fu_617_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_483 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iteration_1_reg_516 <= tmp_36_fu_828_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        iteration_1_reg_516 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iteration_reg_494 <= iteration_mid2_fu_697_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        iteration_reg_494 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_713_p2 == 1'd1) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_1_fu_306 <= tmp_10_fu_778_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_1_fu_306 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_reg_505 <= row_mid2_fu_705_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_reg_505 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_0_6_loc_1_fu_334 <= line_buffer_V_0_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        window_V_0_6_loc_1_fu_334 <= window_V_0_6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_1_6_loc_1_fu_330 <= line_buffer_V_1_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        window_V_1_6_loc_1_fu_330 <= window_V_1_6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_2_6_loc_1_fu_326 <= line_buffer_V_2_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        window_V_2_6_loc_1_fu_326 <= window_V_2_6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_3_6_loc_1_fu_322 <= line_buffer_V_3_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        window_V_3_6_loc_1_fu_322 <= window_V_3_6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_4_6_loc_1_fu_318 <= line_buffer_V_4_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        window_V_4_6_loc_1_fu_318 <= window_V_4_6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_5_6_loc_1_fu_314 <= line_buffer_V_5_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        window_V_5_6_loc_1_fu_314 <= window_V_5_6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_mid2_reg_3280 <= col_mid2_fu_643_p3;
        or_cond1_reg_3363 <= or_cond1_fu_822_p2;
        or_cond_reg_3359 <= or_cond_fu_810_p2;
        tmp_11_reg_3320 <= tmp_11_fu_794_p2;
        tmp_8_reg_3295 <= tmp_8_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_3271 <= exitcond_flatten_fu_611_p2;
        in_temp_V_1_load_reg_3377 <= in_temp_V_1_fu_310;
        or_cond1_reg_3363_pp0_iter1_reg <= or_cond1_reg_3363;
        window_V_0_6_loc_1_l_reg_3413 <= window_V_0_6_loc_1_fu_334;
        window_V_1_6_loc_1_l_reg_3407 <= window_V_1_6_loc_1_fu_330;
        window_V_2_6_loc_1_l_reg_3401 <= window_V_2_6_loc_1_fu_326;
        window_V_3_6_loc_1_l_reg_3395 <= window_V_3_6_loc_1_fu_322;
        window_V_4_6_loc_1_l_reg_3389 <= window_V_4_6_loc_1_fu_318;
        window_V_5_6_loc_1_l_reg_3383 <= window_V_5_6_loc_1_fu_314;
    end
end

always @ (posedge ap_clk) begin
    if ((in_img_V_0_load_A == 1'b1)) begin
        in_img_V_0_payload_A <= in_img_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((in_img_V_0_load_B == 1'b1)) begin
        in_img_V_0_payload_B <= in_img_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_0_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_0_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_0_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_0_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_0_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_0_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd0) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_0_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_1_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_1_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_1_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_1_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_1_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_1_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd1) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_1_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_2_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_2_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_2_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_2_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_2_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_2_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd2) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_2_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_3_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_3_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_3_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_3_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_3_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_3_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd3) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_3_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_4_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_4_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_4_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_4_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_4_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_4_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd4) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_4_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_5_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_5_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_5_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_5_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_5_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_V_5_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd5) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_5_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd0) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd1) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_1 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd2) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_2 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd3) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_3 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd4) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_4 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd5) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_5 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd7) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd7) & (exitcond_flatten_reg_3271 == 1'd0)) | ((tmp_8_reg_3295 == 1'd1) & (tmp_66_reg_3316 == 3'd6) & (tmp_65_reg_3312 == 3'd6) & (exitcond_flatten_reg_3271 == 1'd0))))) begin
        kernel_V_6_6 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_3303 == 1'd1) & (tmp_s_reg_3299 == 1'd0) & (tmp_8_reg_3295 == 1'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_off_V <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_reg_3363_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_off_V_load_reg_3419 <= kernel_off_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        kernel_off_V_load_reg_3419_pp0_iter10_reg <= kernel_off_V_load_reg_3419_pp0_iter9_reg;
        kernel_off_V_load_reg_3419_pp0_iter11_reg <= kernel_off_V_load_reg_3419_pp0_iter10_reg;
        kernel_off_V_load_reg_3419_pp0_iter12_reg <= kernel_off_V_load_reg_3419_pp0_iter11_reg;
        kernel_off_V_load_reg_3419_pp0_iter13_reg <= kernel_off_V_load_reg_3419_pp0_iter12_reg;
        kernel_off_V_load_reg_3419_pp0_iter14_reg <= kernel_off_V_load_reg_3419_pp0_iter13_reg;
        kernel_off_V_load_reg_3419_pp0_iter15_reg <= kernel_off_V_load_reg_3419_pp0_iter14_reg;
        kernel_off_V_load_reg_3419_pp0_iter16_reg <= kernel_off_V_load_reg_3419_pp0_iter15_reg;
        kernel_off_V_load_reg_3419_pp0_iter17_reg <= kernel_off_V_load_reg_3419_pp0_iter16_reg;
        kernel_off_V_load_reg_3419_pp0_iter18_reg <= kernel_off_V_load_reg_3419_pp0_iter17_reg;
        kernel_off_V_load_reg_3419_pp0_iter19_reg <= kernel_off_V_load_reg_3419_pp0_iter18_reg;
        kernel_off_V_load_reg_3419_pp0_iter20_reg <= kernel_off_V_load_reg_3419_pp0_iter19_reg;
        kernel_off_V_load_reg_3419_pp0_iter21_reg <= kernel_off_V_load_reg_3419_pp0_iter20_reg;
        kernel_off_V_load_reg_3419_pp0_iter22_reg <= kernel_off_V_load_reg_3419_pp0_iter21_reg;
        kernel_off_V_load_reg_3419_pp0_iter23_reg <= kernel_off_V_load_reg_3419_pp0_iter22_reg;
        kernel_off_V_load_reg_3419_pp0_iter24_reg <= kernel_off_V_load_reg_3419_pp0_iter23_reg;
        kernel_off_V_load_reg_3419_pp0_iter25_reg <= kernel_off_V_load_reg_3419_pp0_iter24_reg;
        kernel_off_V_load_reg_3419_pp0_iter26_reg <= kernel_off_V_load_reg_3419_pp0_iter25_reg;
        kernel_off_V_load_reg_3419_pp0_iter27_reg <= kernel_off_V_load_reg_3419_pp0_iter26_reg;
        kernel_off_V_load_reg_3419_pp0_iter3_reg <= kernel_off_V_load_reg_3419;
        kernel_off_V_load_reg_3419_pp0_iter4_reg <= kernel_off_V_load_reg_3419_pp0_iter3_reg;
        kernel_off_V_load_reg_3419_pp0_iter5_reg <= kernel_off_V_load_reg_3419_pp0_iter4_reg;
        kernel_off_V_load_reg_3419_pp0_iter6_reg <= kernel_off_V_load_reg_3419_pp0_iter5_reg;
        kernel_off_V_load_reg_3419_pp0_iter7_reg <= kernel_off_V_load_reg_3419_pp0_iter6_reg;
        kernel_off_V_load_reg_3419_pp0_iter8_reg <= kernel_off_V_load_reg_3419_pp0_iter7_reg;
        kernel_off_V_load_reg_3419_pp0_iter9_reg <= kernel_off_V_load_reg_3419_pp0_iter8_reg;
        or_cond1_reg_3363_pp0_iter10_reg <= or_cond1_reg_3363_pp0_iter9_reg;
        or_cond1_reg_3363_pp0_iter11_reg <= or_cond1_reg_3363_pp0_iter10_reg;
        or_cond1_reg_3363_pp0_iter12_reg <= or_cond1_reg_3363_pp0_iter11_reg;
        or_cond1_reg_3363_pp0_iter13_reg <= or_cond1_reg_3363_pp0_iter12_reg;
        or_cond1_reg_3363_pp0_iter14_reg <= or_cond1_reg_3363_pp0_iter13_reg;
        or_cond1_reg_3363_pp0_iter15_reg <= or_cond1_reg_3363_pp0_iter14_reg;
        or_cond1_reg_3363_pp0_iter16_reg <= or_cond1_reg_3363_pp0_iter15_reg;
        or_cond1_reg_3363_pp0_iter17_reg <= or_cond1_reg_3363_pp0_iter16_reg;
        or_cond1_reg_3363_pp0_iter18_reg <= or_cond1_reg_3363_pp0_iter17_reg;
        or_cond1_reg_3363_pp0_iter19_reg <= or_cond1_reg_3363_pp0_iter18_reg;
        or_cond1_reg_3363_pp0_iter20_reg <= or_cond1_reg_3363_pp0_iter19_reg;
        or_cond1_reg_3363_pp0_iter21_reg <= or_cond1_reg_3363_pp0_iter20_reg;
        or_cond1_reg_3363_pp0_iter22_reg <= or_cond1_reg_3363_pp0_iter21_reg;
        or_cond1_reg_3363_pp0_iter23_reg <= or_cond1_reg_3363_pp0_iter22_reg;
        or_cond1_reg_3363_pp0_iter24_reg <= or_cond1_reg_3363_pp0_iter23_reg;
        or_cond1_reg_3363_pp0_iter25_reg <= or_cond1_reg_3363_pp0_iter24_reg;
        or_cond1_reg_3363_pp0_iter26_reg <= or_cond1_reg_3363_pp0_iter25_reg;
        or_cond1_reg_3363_pp0_iter27_reg <= or_cond1_reg_3363_pp0_iter26_reg;
        or_cond1_reg_3363_pp0_iter28_reg <= or_cond1_reg_3363_pp0_iter27_reg;
        or_cond1_reg_3363_pp0_iter2_reg <= or_cond1_reg_3363_pp0_iter1_reg;
        or_cond1_reg_3363_pp0_iter3_reg <= or_cond1_reg_3363_pp0_iter2_reg;
        or_cond1_reg_3363_pp0_iter4_reg <= or_cond1_reg_3363_pp0_iter3_reg;
        or_cond1_reg_3363_pp0_iter5_reg <= or_cond1_reg_3363_pp0_iter4_reg;
        or_cond1_reg_3363_pp0_iter6_reg <= or_cond1_reg_3363_pp0_iter5_reg;
        or_cond1_reg_3363_pp0_iter7_reg <= or_cond1_reg_3363_pp0_iter6_reg;
        or_cond1_reg_3363_pp0_iter8_reg <= or_cond1_reg_3363_pp0_iter7_reg;
        or_cond1_reg_3363_pp0_iter9_reg <= or_cond1_reg_3363_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_3299 == 1'd1) & (tmp_8_reg_3295 == 1'd0) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_sum_V <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_fu_794_p2 == 1'd1) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_addr_reg_3324 <= tmp_12_fu_800_p1;
        line_buffer_V_1_addr_reg_3330 <= tmp_12_fu_800_p1;
        line_buffer_V_2_addr_reg_3336 <= tmp_12_fu_800_p1;
        line_buffer_V_3_addr_reg_3342 <= tmp_12_fu_800_p1;
        line_buffer_V_4_addr_reg_3348 <= tmp_12_fu_800_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((out_img_V_1_load_A == 1'b1)) begin
        out_img_V_1_payload_A <= r_V_2_fu_3185_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((out_img_V_1_load_B == 1'b1)) begin
        out_img_V_1_payload_B <= r_V_2_fu_3185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_719_p2 == 1'd0) & (tmp_8_fu_713_p2 == 1'd0) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_3303 <= tmp_3_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_713_p2 == 1'd1) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_65_reg_3312 <= tmp_65_fu_770_p1;
        tmp_66_reg_3316 <= tmp_66_fu_774_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_713_p2 == 1'd0) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_s_reg_3299 <= tmp_s_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        window_V_0_1 <= window_V_0_2;
        window_V_0_2 <= window_V_0_3;
        window_V_0_3 <= window_V_0_4;
        window_V_0_4 <= window_V_0_5;
        window_V_0_5 <= window_V_0_6_loc_1_l_reg_3413;
        window_V_1_1 <= window_V_1_2;
        window_V_1_2 <= window_V_1_3;
        window_V_1_3 <= window_V_1_4;
        window_V_1_4 <= window_V_1_5;
        window_V_1_5 <= window_V_1_6_loc_1_l_reg_3407;
        window_V_2_1 <= window_V_2_2;
        window_V_2_2 <= window_V_2_3;
        window_V_2_3 <= window_V_2_4;
        window_V_2_4 <= window_V_2_5;
        window_V_2_5 <= window_V_2_6_loc_1_l_reg_3401;
        window_V_3_1 <= window_V_3_2;
        window_V_3_2 <= window_V_3_3;
        window_V_3_3 <= window_V_3_4;
        window_V_3_4 <= window_V_3_5;
        window_V_3_5 <= window_V_3_6_loc_1_l_reg_3395;
        window_V_4_1 <= window_V_4_2;
        window_V_4_2 <= window_V_4_3;
        window_V_4_3 <= window_V_4_4;
        window_V_4_4 <= window_V_4_5;
        window_V_4_5 <= window_V_4_6_loc_1_l_reg_3389;
        window_V_5_1 <= window_V_5_2;
        window_V_5_2 <= window_V_5_3;
        window_V_5_3 <= window_V_5_4;
        window_V_5_4 <= window_V_5_5;
        window_V_5_5 <= window_V_5_6_loc_1_l_reg_3383;
        window_V_6_1 <= window_V_6_2;
        window_V_6_2 <= window_V_6_3;
        window_V_6_3 <= window_V_6_4;
        window_V_6_4 <= window_V_6_5;
        window_V_6_5 <= in_temp_V_1_load_reg_3377;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_0_6 <= line_buffer_V_0_q0;
        window_V_1_6 <= line_buffer_V_1_q0;
        window_V_2_6 <= line_buffer_V_2_q0;
        window_V_3_6 <= line_buffer_V_3_q0;
        window_V_4_6 <= line_buffer_V_4_q0;
        window_V_5_6 <= line_buffer_V_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_V_6_6 <= in_img_V_0_data_out;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) & (out_img_V_1_ack_in == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) & (out_img_V_1_ack_in == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3175_ce = 1'b1;
    end else begin
        grp_fu_3175_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_img_V_0_ack_out = 1'b1;
    end else begin
        in_img_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((in_img_V_0_sel == 1'b1)) begin
        in_img_V_0_data_out = in_img_V_0_payload_B;
    end else begin
        in_img_V_0_data_out = in_img_V_0_payload_A;
    end
end

always @ (*) begin
    if (((or_cond_reg_3359 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_img_V_TDATA_blk_n = in_img_V_0_state[1'd0];
    end else begin
        in_img_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2534)) begin
        if ((tmp_8_fu_713_p2 == 1'd1)) begin
            kernel_config_V_address0 = tmp_2_fu_765_p1;
        end else if (((tmp_s_fu_719_p2 == 1'd1) & (tmp_8_fu_713_p2 == 1'd0))) begin
            kernel_config_V_address0 = 64'd49;
        end else if ((1'b1 == ap_condition_2536)) begin
            kernel_config_V_address0 = 64'd50;
        end else begin
            kernel_config_V_address0 = 'bx;
        end
    end else begin
        kernel_config_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_8_fu_713_p2 == 1'd1) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_3_fu_725_p2 == 1'd1) & (tmp_s_fu_719_p2 == 1'd0) & (tmp_8_fu_713_p2 == 1'd0) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_s_fu_719_p2 == 1'd1) & (tmp_8_fu_713_p2 == 1'd0) & (exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_config_V_ce0 = 1'b1;
    end else begin
        kernel_config_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_ce0 = 1'b1;
    end else begin
        line_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_ce1 = 1'b1;
    end else begin
        line_buffer_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_we1 = 1'b1;
    end else begin
        line_buffer_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_1_ce0 = 1'b1;
    end else begin
        line_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_1_ce1 = 1'b1;
    end else begin
        line_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_1_we1 = 1'b1;
    end else begin
        line_buffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_2_ce0 = 1'b1;
    end else begin
        line_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_2_ce1 = 1'b1;
    end else begin
        line_buffer_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_2_we1 = 1'b1;
    end else begin
        line_buffer_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_3_ce0 = 1'b1;
    end else begin
        line_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_3_ce1 = 1'b1;
    end else begin
        line_buffer_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_3_we1 = 1'b1;
    end else begin
        line_buffer_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_4_ce0 = 1'b1;
    end else begin
        line_buffer_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_4_ce1 = 1'b1;
    end else begin
        line_buffer_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_3320 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_4_we1 = 1'b1;
    end else begin
        line_buffer_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_5_ce0 = 1'b1;
    end else begin
        line_buffer_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_5_ce1 = 1'b1;
    end else begin
        line_buffer_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_5_we1 = 1'b1;
    end else begin
        line_buffer_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((out_img_V_1_sel == 1'b1)) begin
        out_img_V_1_data_out = out_img_V_1_payload_B;
    end else begin
        out_img_V_1_data_out = out_img_V_1_payload_A;
    end
end

always @ (*) begin
    if (((or_cond1_reg_3363_pp0_iter27_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        out_img_V_1_vld_in = 1'b1;
    end else begin
        out_img_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond1_reg_3363_pp0_iter28_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((or_cond1_reg_3363_pp0_iter27_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1)))) begin
        out_img_V_TDATA_blk_n = out_img_V_1_state[1'd1];
    end else begin
        out_img_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (out_img_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((in_img_V_0_vld_out == 1'b0) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((in_img_V_0_vld_out == 1'b0) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((in_img_V_0_vld_out == 1'b0) & (ap_predicate_op295_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((or_cond1_reg_3363_pp0_iter27_reg == 1'd1) & (out_img_V_1_ack_in == 1'b0));
end

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_io = ((or_cond1_reg_3363_pp0_iter28_reg == 1'd1) & (out_img_V_1_ack_in == 1'b0));
end

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((in_img_V_0_vld_out == 1'b0) & (ap_predicate_op295_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2534 = ((exitcond_flatten_fu_611_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_2536 = ((tmp_3_fu_725_p2 == 1'd1) & (tmp_s_fu_719_p2 == 1'd0) & (tmp_8_fu_713_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op295_read_state3 = ((or_cond_reg_3359 == 1'd1) & (exitcond_flatten_reg_3271 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign col_1_fu_834_p2 = (col_mid2_fu_643_p3 + 10'd1);

assign col_mid2_fu_643_p3 = ((exitcond_fu_629_p2[0:0] === 1'b1) ? 10'd0 : col_reg_527);

assign exitcond_flatten_fu_611_p2 = ((indvar_flatten_reg_483 == 19'd310569) ? 1'b1 : 1'b0);

assign exitcond_fu_629_p2 = ((col_reg_527 == 10'd643) ? 1'b1 : 1'b0);

assign grp_fu_3175_p0 = $signed(out_temp_V_6_6_fu_3161_p2);

assign in_img_V_0_ack_in = in_img_V_0_state[1'd1];

assign in_img_V_0_load_A = (in_img_V_0_state_cmp_full & ~in_img_V_0_sel_wr);

assign in_img_V_0_load_B = (in_img_V_0_state_cmp_full & in_img_V_0_sel_wr);

assign in_img_V_0_sel = in_img_V_0_sel_rd;

assign in_img_V_0_state_cmp_full = ((in_img_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign in_img_V_0_vld_in = in_img_V_TVALID;

assign in_img_V_0_vld_out = in_img_V_0_state[1'd0];

assign in_img_V_TREADY = in_img_V_0_state[1'd1];

assign indvar_flatten_next_fu_617_p2 = (indvar_flatten_reg_483 + 19'd1);

assign iteration_1_mid2_fu_635_p3 = ((exitcond_fu_629_p2[0:0] === 1'b1) ? tmp_4_fu_623_p2 : iteration_1_reg_516);

assign iteration_mid2_fu_697_p3 = ((exitcond_fu_629_p2[0:0] === 1'b1) ? tmp_4_fu_623_p2 : iteration_reg_494);

assign line_buffer_V_0_address0 = tmp_12_fu_800_p1;

assign line_buffer_V_1_address0 = tmp_12_fu_800_p1;

assign line_buffer_V_2_address0 = tmp_12_fu_800_p1;

assign line_buffer_V_3_address0 = tmp_12_fu_800_p1;

assign line_buffer_V_4_address0 = tmp_12_fu_800_p1;

assign line_buffer_V_5_address0 = tmp_12_fu_800_p1;

assign line_buffer_V_5_address1 = tmp_13_fu_1239_p1;

assign or_cond1_fu_822_p2 = (tmp_6_mid2_fu_689_p3 & tmp_14_fu_816_p2);

assign or_cond_fu_810_p2 = (tmp_4_mid2_fu_669_p3 & tmp_11_fu_794_p2);

assign out_img_V_1_ack_in = out_img_V_1_state[1'd1];

assign out_img_V_1_ack_out = out_img_V_TREADY;

assign out_img_V_1_load_A = (out_img_V_1_state_cmp_full & ~out_img_V_1_sel_wr);

assign out_img_V_1_load_B = (out_img_V_1_state_cmp_full & out_img_V_1_sel_wr);

assign out_img_V_1_sel = out_img_V_1_sel_rd;

assign out_img_V_1_state_cmp_full = ((out_img_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_img_V_1_vld_out = out_img_V_1_state[1'd0];

assign out_img_V_TDATA = out_img_V_1_data_out;

assign out_img_V_TVALID = out_img_V_1_state[1'd0];

assign out_temp_V_6_6_fu_3161_p2 = ($signed(tmp1_cast_fu_2917_p1) + $signed(tmp24_cast_fu_3157_p1));

assign p_j_1_fu_749_p3 = ((tmp_9_fu_737_p2[0:0] === 1'b1) ? 32'd0 : j_1_fu_306);

assign r_V_2_0_1_fu_1654_p1 = r_V_2_0_1_fu_1654_p10;

assign r_V_2_0_1_fu_1654_p10 = window_V_0_2;

assign r_V_2_0_2_fu_1676_p1 = r_V_2_0_2_fu_1676_p10;

assign r_V_2_0_2_fu_1676_p10 = window_V_0_3;

assign r_V_2_0_3_fu_1698_p1 = r_V_2_0_3_fu_1698_p10;

assign r_V_2_0_3_fu_1698_p10 = window_V_0_4;

assign r_V_2_0_4_fu_1720_p1 = r_V_2_0_4_fu_1720_p10;

assign r_V_2_0_4_fu_1720_p10 = window_V_0_5;

assign r_V_2_0_5_fu_1741_p1 = r_V_2_0_5_fu_1741_p10;

assign r_V_2_0_5_fu_1741_p10 = window_V_0_6_loc_1_l_reg_3413;

assign r_V_2_0_6_fu_1763_p1 = r_V_2_0_6_fu_1763_p10;

assign r_V_2_0_6_fu_1763_p10 = window_V_0_6_loc_1_fu_334;

assign r_V_2_1_1_fu_1807_p1 = r_V_2_1_1_fu_1807_p10;

assign r_V_2_1_1_fu_1807_p10 = window_V_1_2;

assign r_V_2_1_2_fu_1829_p1 = r_V_2_1_2_fu_1829_p10;

assign r_V_2_1_2_fu_1829_p10 = window_V_1_3;

assign r_V_2_1_3_fu_1851_p1 = r_V_2_1_3_fu_1851_p10;

assign r_V_2_1_3_fu_1851_p10 = window_V_1_4;

assign r_V_2_1_4_fu_1873_p1 = r_V_2_1_4_fu_1873_p10;

assign r_V_2_1_4_fu_1873_p10 = window_V_1_5;

assign r_V_2_1_5_fu_1894_p1 = r_V_2_1_5_fu_1894_p10;

assign r_V_2_1_5_fu_1894_p10 = window_V_1_6_loc_1_l_reg_3407;

assign r_V_2_1_6_fu_1916_p1 = r_V_2_1_6_fu_1916_p10;

assign r_V_2_1_6_fu_1916_p10 = window_V_1_6_loc_1_fu_330;

assign r_V_2_1_fu_1785_p1 = r_V_2_1_fu_1785_p10;

assign r_V_2_1_fu_1785_p10 = window_V_1_1;

assign r_V_2_2_1_fu_1960_p1 = r_V_2_2_1_fu_1960_p10;

assign r_V_2_2_1_fu_1960_p10 = window_V_2_2;

assign r_V_2_2_2_fu_1982_p1 = r_V_2_2_2_fu_1982_p10;

assign r_V_2_2_2_fu_1982_p10 = window_V_2_3;

assign r_V_2_2_3_fu_2004_p1 = r_V_2_2_3_fu_2004_p10;

assign r_V_2_2_3_fu_2004_p10 = window_V_2_4;

assign r_V_2_2_4_fu_2026_p1 = r_V_2_2_4_fu_2026_p10;

assign r_V_2_2_4_fu_2026_p10 = window_V_2_5;

assign r_V_2_2_5_fu_2047_p1 = r_V_2_2_5_fu_2047_p10;

assign r_V_2_2_5_fu_2047_p10 = window_V_2_6_loc_1_l_reg_3401;

assign r_V_2_2_6_fu_2069_p1 = r_V_2_2_6_fu_2069_p10;

assign r_V_2_2_6_fu_2069_p10 = window_V_2_6_loc_1_fu_326;

assign r_V_2_2_fu_1938_p1 = r_V_2_2_fu_1938_p10;

assign r_V_2_2_fu_1938_p10 = window_V_2_1;

assign r_V_2_3_1_fu_2113_p1 = r_V_2_3_1_fu_2113_p10;

assign r_V_2_3_1_fu_2113_p10 = window_V_3_2;

assign r_V_2_3_2_fu_2135_p1 = r_V_2_3_2_fu_2135_p10;

assign r_V_2_3_2_fu_2135_p10 = window_V_3_3;

assign r_V_2_3_3_fu_2157_p1 = r_V_2_3_3_fu_2157_p10;

assign r_V_2_3_3_fu_2157_p10 = window_V_3_4;

assign r_V_2_3_4_fu_2179_p1 = r_V_2_3_4_fu_2179_p10;

assign r_V_2_3_4_fu_2179_p10 = window_V_3_5;

assign r_V_2_3_5_fu_2200_p1 = r_V_2_3_5_fu_2200_p10;

assign r_V_2_3_5_fu_2200_p10 = window_V_3_6_loc_1_l_reg_3395;

assign r_V_2_3_6_fu_2222_p1 = r_V_2_3_6_fu_2222_p10;

assign r_V_2_3_6_fu_2222_p10 = window_V_3_6_loc_1_fu_322;

assign r_V_2_3_fu_2091_p1 = r_V_2_3_fu_2091_p10;

assign r_V_2_3_fu_2091_p10 = window_V_3_1;

assign r_V_2_4_1_fu_2266_p1 = r_V_2_4_1_fu_2266_p10;

assign r_V_2_4_1_fu_2266_p10 = window_V_4_2;

assign r_V_2_4_2_fu_2288_p1 = r_V_2_4_2_fu_2288_p10;

assign r_V_2_4_2_fu_2288_p10 = window_V_4_3;

assign r_V_2_4_3_fu_2310_p1 = r_V_2_4_3_fu_2310_p10;

assign r_V_2_4_3_fu_2310_p10 = window_V_4_4;

assign r_V_2_4_4_fu_2332_p1 = r_V_2_4_4_fu_2332_p10;

assign r_V_2_4_4_fu_2332_p10 = window_V_4_5;

assign r_V_2_4_5_fu_2353_p1 = r_V_2_4_5_fu_2353_p10;

assign r_V_2_4_5_fu_2353_p10 = window_V_4_6_loc_1_l_reg_3389;

assign r_V_2_4_6_fu_2375_p1 = r_V_2_4_6_fu_2375_p10;

assign r_V_2_4_6_fu_2375_p10 = window_V_4_6_loc_1_fu_318;

assign r_V_2_4_fu_2244_p1 = r_V_2_4_fu_2244_p10;

assign r_V_2_4_fu_2244_p10 = window_V_4_1;

assign r_V_2_5_1_fu_2419_p1 = r_V_2_5_1_fu_2419_p10;

assign r_V_2_5_1_fu_2419_p10 = window_V_5_2;

assign r_V_2_5_2_fu_2441_p1 = r_V_2_5_2_fu_2441_p10;

assign r_V_2_5_2_fu_2441_p10 = window_V_5_3;

assign r_V_2_5_3_fu_2463_p1 = r_V_2_5_3_fu_2463_p10;

assign r_V_2_5_3_fu_2463_p10 = window_V_5_4;

assign r_V_2_5_4_fu_2485_p1 = r_V_2_5_4_fu_2485_p10;

assign r_V_2_5_4_fu_2485_p10 = window_V_5_5;

assign r_V_2_5_5_fu_2506_p1 = r_V_2_5_5_fu_2506_p10;

assign r_V_2_5_5_fu_2506_p10 = window_V_5_6_loc_1_l_reg_3383;

assign r_V_2_5_6_fu_2528_p1 = r_V_2_5_6_fu_2528_p10;

assign r_V_2_5_6_fu_2528_p10 = window_V_5_6_loc_1_fu_314;

assign r_V_2_5_fu_2397_p1 = r_V_2_5_fu_2397_p10;

assign r_V_2_5_fu_2397_p10 = window_V_5_1;

assign r_V_2_6_1_fu_2572_p1 = r_V_2_6_1_fu_2572_p10;

assign r_V_2_6_1_fu_2572_p10 = window_V_6_2;

assign r_V_2_6_2_fu_2594_p1 = r_V_2_6_2_fu_2594_p10;

assign r_V_2_6_2_fu_2594_p10 = window_V_6_3;

assign r_V_2_6_3_fu_2616_p1 = r_V_2_6_3_fu_2616_p10;

assign r_V_2_6_3_fu_2616_p10 = window_V_6_4;

assign r_V_2_6_4_fu_2638_p1 = r_V_2_6_4_fu_2638_p10;

assign r_V_2_6_4_fu_2638_p10 = window_V_6_5;

assign r_V_2_6_5_fu_2659_p1 = r_V_2_6_5_fu_2659_p10;

assign r_V_2_6_5_fu_2659_p10 = in_temp_V_1_load_reg_3377;

assign r_V_2_6_6_fu_2681_p1 = r_V_2_6_6_fu_2681_p10;

assign r_V_2_6_6_fu_2681_p10 = in_temp_V_1_fu_310;

assign r_V_2_6_fu_2550_p1 = r_V_2_6_fu_2550_p10;

assign r_V_2_6_fu_2550_p10 = window_V_6_1;

assign r_V_2_fu_3185_p2 = (kernel_off_V_load_reg_3419_pp0_iter27_reg + tmp_67_fu_3181_p1);

assign r_V_s_fu_1632_p1 = r_V_s_fu_1632_p10;

assign r_V_s_fu_1632_p10 = window_V_0_1;

assign row_mid2_fu_705_p3 = ((exitcond_fu_629_p2[0:0] === 1'b1) ? row_s_fu_651_p2 : row_reg_505);

assign row_s_fu_651_p2 = (row_reg_505 + 9'd1);

assign tmp10_cast_fu_2747_p1 = $signed(tmp_fu_2741_p2);

assign tmp10_fu_2761_p2 = ($signed(tmp_38_1_4_cast_fu_1879_p1) + $signed(tmp_38_1_3_cast_fu_1857_p1));

assign tmp11_cast_fu_2777_p1 = $signed(tmp11_fu_2771_p2);

assign tmp11_fu_2771_p2 = ($signed(tmp_38_1_2_cast_fu_1835_p1) + $signed(tmp12_cast_fu_2767_p1));

assign tmp12_cast_fu_2767_p1 = $signed(tmp10_fu_2761_p2);

assign tmp12_fu_2801_p2 = ($signed(tmp_38_2_cast_fu_1944_p1) + $signed(tmp_38_1_6_cast_fu_1922_p1));

assign tmp13_cast_fu_2907_p1 = $signed(tmp13_fu_2901_p2);

assign tmp13_fu_2901_p2 = ($signed(tmp14_cast_fu_2847_p1) + $signed(tmp19_cast_fu_2897_p1));

assign tmp14_cast_fu_2847_p1 = $signed(tmp14_fu_2841_p2);

assign tmp14_fu_2841_p2 = ($signed(tmp15_cast_fu_2817_p1) + $signed(tmp17_cast_fu_2837_p1));

assign tmp15_cast_fu_2817_p1 = $signed(tmp15_fu_2811_p2);

assign tmp15_fu_2811_p2 = ($signed(tmp_38_1_5_cast_fu_1900_p1) + $signed(tmp16_cast_fu_2807_p1));

assign tmp16_cast_fu_2807_p1 = $signed(tmp12_fu_2801_p2);

assign tmp16_fu_2821_p2 = ($signed(tmp_38_2_3_cast_fu_2010_p1) + $signed(tmp_38_2_2_cast_fu_1988_p1));

assign tmp17_cast_fu_2837_p1 = $signed(tmp17_fu_2831_p2);

assign tmp17_fu_2831_p2 = ($signed(tmp_38_2_1_cast_fu_1966_p1) + $signed(tmp18_cast_fu_2827_p1));

assign tmp18_cast_fu_2827_p1 = $signed(tmp16_fu_2821_p2);

assign tmp18_fu_2851_p2 = ($signed(tmp_38_2_6_cast_fu_2075_p1) + $signed(tmp_38_2_5_cast_fu_2053_p1));

assign tmp19_cast_fu_2897_p1 = $signed(tmp19_fu_2891_p2);

assign tmp19_fu_2891_p2 = ($signed(tmp20_cast_fu_2867_p1) + $signed(tmp22_cast_fu_2887_p1));

assign tmp1_cast_fu_2917_p1 = $signed(tmp1_fu_2911_p2);

assign tmp1_fu_2911_p2 = ($signed(tmp2_cast_fu_2797_p1) + $signed(tmp13_cast_fu_2907_p1));

assign tmp20_cast_fu_2867_p1 = $signed(tmp20_fu_2861_p2);

assign tmp20_fu_2861_p2 = ($signed(tmp_38_2_4_cast_fu_2032_p1) + $signed(tmp21_cast_fu_2857_p1));

assign tmp21_cast_fu_2857_p1 = $signed(tmp18_fu_2851_p2);

assign tmp21_fu_2871_p2 = ($signed(tmp_38_3_2_cast_fu_2141_p1) + $signed(tmp_38_3_1_cast_fu_2119_p1));

assign tmp22_cast_fu_2887_p1 = $signed(tmp22_fu_2881_p2);

assign tmp22_fu_2881_p2 = ($signed(tmp_38_3_cast_fu_2097_p1) + $signed(tmp23_cast_fu_2877_p1));

assign tmp23_cast_fu_2877_p1 = $signed(tmp21_fu_2871_p2);

assign tmp23_fu_2921_p2 = ($signed(tmp_38_3_5_cast_fu_2206_p1) + $signed(tmp_38_3_4_cast_fu_2185_p1));

assign tmp24_cast_fu_3157_p1 = $signed(tmp24_fu_3151_p2);

assign tmp24_fu_3151_p2 = ($signed(tmp25_cast_fu_3027_p1) + $signed(tmp36_cast_fu_3147_p1));

assign tmp25_cast_fu_3027_p1 = $signed(tmp25_fu_3021_p2);

assign tmp25_fu_3021_p2 = ($signed(tmp26_cast_fu_2967_p1) + $signed(tmp31_cast_fu_3017_p1));

assign tmp26_cast_fu_2967_p1 = $signed(tmp26_fu_2961_p2);

assign tmp26_fu_2961_p2 = ($signed(tmp27_cast_fu_2937_p1) + $signed(tmp29_cast_fu_2957_p1));

assign tmp27_cast_fu_2937_p1 = $signed(tmp27_fu_2931_p2);

assign tmp27_fu_2931_p2 = ($signed(tmp_38_3_3_cast_fu_2163_p1) + $signed(tmp28_cast_fu_2927_p1));

assign tmp28_cast_fu_2927_p1 = $signed(tmp23_fu_2921_p2);

assign tmp28_fu_2941_p2 = ($signed(tmp_38_4_1_cast_fu_2272_p1) + $signed(tmp_38_4_cast_fu_2250_p1));

assign tmp29_cast_fu_2957_p1 = $signed(tmp29_fu_2951_p2);

assign tmp29_fu_2951_p2 = ($signed(tmp_38_3_6_cast_fu_2228_p1) + $signed(tmp30_cast_fu_2947_p1));

assign tmp2_cast_fu_2797_p1 = $signed(tmp2_fu_2791_p2);

assign tmp2_fu_2791_p2 = ($signed(tmp3_cast_fu_2737_p1) + $signed(tmp8_cast_fu_2787_p1));

assign tmp30_cast_fu_2947_p1 = $signed(tmp28_fu_2941_p2);

assign tmp30_fu_2971_p2 = ($signed(tmp_38_4_4_cast_fu_2338_p1) + $signed(tmp_38_4_3_cast_fu_2316_p1));

assign tmp31_cast_fu_3017_p1 = $signed(tmp31_fu_3011_p2);

assign tmp31_fu_3011_p2 = ($signed(tmp32_cast_fu_2987_p1) + $signed(tmp34_cast_fu_3007_p1));

assign tmp32_cast_fu_2987_p1 = $signed(tmp32_fu_2981_p2);

assign tmp32_fu_2981_p2 = ($signed(tmp_38_4_2_cast_fu_2294_p1) + $signed(tmp33_cast_fu_2977_p1));

assign tmp33_cast_fu_2977_p1 = $signed(tmp30_fu_2971_p2);

assign tmp33_fu_2991_p2 = ($signed(tmp_38_5_cast_fu_2403_p1) + $signed(tmp_38_4_6_cast_fu_2381_p1));

assign tmp34_cast_fu_3007_p1 = $signed(tmp34_fu_3001_p2);

assign tmp34_fu_3001_p2 = ($signed(tmp_38_4_5_cast_fu_2359_p1) + $signed(tmp35_cast_fu_2997_p1));

assign tmp35_cast_fu_2997_p1 = $signed(tmp33_fu_2991_p2);

assign tmp35_fu_3031_p2 = ($signed(tmp_38_5_3_cast_fu_2469_p1) + $signed(tmp_38_5_2_cast_fu_2447_p1));

assign tmp36_cast_fu_3147_p1 = $signed(tmp36_fu_3141_p2);

assign tmp36_fu_3141_p2 = ($signed(tmp37_cast_fu_3077_p1) + $signed(tmp42_cast_fu_3137_p1));

assign tmp37_cast_fu_3077_p1 = $signed(tmp37_fu_3071_p2);

assign tmp37_fu_3071_p2 = ($signed(tmp38_cast_fu_3047_p1) + $signed(tmp40_cast_fu_3067_p1));

assign tmp38_cast_fu_3047_p1 = $signed(tmp38_fu_3041_p2);

assign tmp38_fu_3041_p2 = ($signed(tmp_38_5_1_cast_fu_2425_p1) + $signed(tmp39_cast_fu_3037_p1));

assign tmp39_cast_fu_3037_p1 = $signed(tmp35_fu_3031_p2);

assign tmp39_fu_3051_p2 = ($signed(tmp_38_5_6_cast_fu_2534_p1) + $signed(tmp_38_5_5_cast_fu_2512_p1));

assign tmp3_cast_fu_2737_p1 = $signed(tmp3_fu_2731_p2);

assign tmp3_fu_2731_p2 = ($signed(tmp4_cast_fu_2707_p1) + $signed(tmp6_cast_fu_2727_p1));

assign tmp40_cast_fu_3067_p1 = $signed(tmp40_fu_3061_p2);

assign tmp40_fu_3061_p2 = ($signed(tmp_38_5_4_cast_fu_2491_p1) + $signed(tmp41_cast_fu_3057_p1));

assign tmp41_cast_fu_3057_p1 = $signed(tmp39_fu_3051_p2);

assign tmp41_fu_3081_p2 = ($signed(tmp_38_6_2_cast_fu_2600_p1) + $signed(tmp_38_6_1_cast_fu_2578_p1));

assign tmp42_cast_fu_3137_p1 = $signed(tmp42_fu_3131_p2);

assign tmp42_fu_3131_p2 = ($signed(tmp43_cast_fu_3097_p1) + $signed(tmp45_cast_fu_3127_p1));

assign tmp43_cast_fu_3097_p1 = $signed(tmp43_fu_3091_p2);

assign tmp43_fu_3091_p2 = ($signed(tmp_38_6_cast_fu_2556_p1) + $signed(tmp44_cast_fu_3087_p1));

assign tmp44_cast_fu_3087_p1 = $signed(tmp41_fu_3081_p2);

assign tmp44_fu_3101_p2 = ($signed(tmp_38_6_4_cast_fu_2644_p1) + $signed(tmp_38_6_3_cast_fu_2622_p1));

assign tmp45_cast_fu_3127_p1 = $signed(tmp45_fu_3121_p2);

assign tmp45_fu_3121_p2 = ($signed(tmp46_cast_fu_3107_p1) + $signed(tmp47_cast_fu_3117_p1));

assign tmp46_cast_fu_3107_p1 = $signed(tmp44_fu_3101_p2);

assign tmp46_fu_3111_p2 = ($signed(tmp_38_6_6_cast_fu_2687_p1) + $signed(tmp_38_6_5_cast_fu_2665_p1));

assign tmp47_cast_fu_3117_p1 = $signed(tmp46_fu_3111_p2);

assign tmp4_cast_fu_2707_p1 = $signed(tmp4_fu_2701_p2);

assign tmp4_fu_2701_p2 = ($signed(tmp_381_cast_fu_1638_p1) + $signed(tmp5_cast_fu_2697_p1));

assign tmp5_cast_fu_2697_p1 = $signed(tmp5_fu_2691_p2);

assign tmp5_fu_2691_p2 = ($signed(tmp_38_0_2_cast_fu_1682_p1) + $signed(tmp_38_0_1_cast_fu_1660_p1));

assign tmp6_cast_fu_2727_p1 = $signed(tmp6_fu_2721_p2);

assign tmp6_fu_2721_p2 = ($signed(tmp_38_0_3_cast_fu_1704_p1) + $signed(tmp7_cast_fu_2717_p1));

assign tmp7_cast_fu_2717_p1 = $signed(tmp7_fu_2711_p2);

assign tmp7_fu_2711_p2 = ($signed(tmp_38_0_5_cast_fu_1747_p1) + $signed(tmp_38_0_4_cast_fu_1726_p1));

assign tmp8_cast_fu_2787_p1 = $signed(tmp8_fu_2781_p2);

assign tmp8_fu_2781_p2 = ($signed(tmp9_cast_fu_2757_p1) + $signed(tmp11_cast_fu_2777_p1));

assign tmp9_cast_fu_2757_p1 = $signed(tmp9_fu_2751_p2);

assign tmp9_fu_2751_p2 = ($signed(tmp_38_0_6_cast_fu_1769_p1) + $signed(tmp10_cast_fu_2747_p1));

assign tmp_10_fu_778_p2 = (p_j_1_fu_749_p3 + 32'd1);

assign tmp_11_fu_794_p2 = ((col_mid2_fu_643_p3 < 10'd640) ? 1'b1 : 1'b0);

assign tmp_12_fu_800_p1 = col_mid2_fu_643_p3;

assign tmp_13_fu_1239_p1 = col_mid2_reg_3280;

assign tmp_14_fu_816_p2 = ((col_mid2_fu_643_p3 > 10'd2) ? 1'b1 : 1'b0);

assign tmp_2_fu_765_p1 = iteration_1_mid2_fu_635_p3;

assign tmp_36_fu_828_p2 = (iteration_1_mid2_fu_635_p3 + 19'd1);

assign tmp_381_cast_fu_1638_p1 = r_V_s_fu_1632_p2;

assign tmp_38_0_1_cast_fu_1660_p1 = r_V_2_0_1_fu_1654_p2;

assign tmp_38_0_2_cast_fu_1682_p1 = r_V_2_0_2_fu_1676_p2;

assign tmp_38_0_3_cast_fu_1704_p1 = r_V_2_0_3_fu_1698_p2;

assign tmp_38_0_4_cast_fu_1726_p1 = r_V_2_0_4_fu_1720_p2;

assign tmp_38_0_5_cast_fu_1747_p1 = r_V_2_0_5_fu_1741_p2;

assign tmp_38_0_6_cast_fu_1769_p1 = r_V_2_0_6_fu_1763_p2;

assign tmp_38_1_1_cast_fu_1813_p1 = r_V_2_1_1_fu_1807_p2;

assign tmp_38_1_2_cast_fu_1835_p1 = r_V_2_1_2_fu_1829_p2;

assign tmp_38_1_3_cast_fu_1857_p1 = r_V_2_1_3_fu_1851_p2;

assign tmp_38_1_4_cast_fu_1879_p1 = r_V_2_1_4_fu_1873_p2;

assign tmp_38_1_5_cast_fu_1900_p1 = r_V_2_1_5_fu_1894_p2;

assign tmp_38_1_6_cast_fu_1922_p1 = r_V_2_1_6_fu_1916_p2;

assign tmp_38_1_cast_fu_1791_p1 = r_V_2_1_fu_1785_p2;

assign tmp_38_2_1_cast_fu_1966_p1 = r_V_2_2_1_fu_1960_p2;

assign tmp_38_2_2_cast_fu_1988_p1 = r_V_2_2_2_fu_1982_p2;

assign tmp_38_2_3_cast_fu_2010_p1 = r_V_2_2_3_fu_2004_p2;

assign tmp_38_2_4_cast_fu_2032_p1 = r_V_2_2_4_fu_2026_p2;

assign tmp_38_2_5_cast_fu_2053_p1 = r_V_2_2_5_fu_2047_p2;

assign tmp_38_2_6_cast_fu_2075_p1 = r_V_2_2_6_fu_2069_p2;

assign tmp_38_2_cast_fu_1944_p1 = r_V_2_2_fu_1938_p2;

assign tmp_38_3_1_cast_fu_2119_p1 = r_V_2_3_1_fu_2113_p2;

assign tmp_38_3_2_cast_fu_2141_p1 = r_V_2_3_2_fu_2135_p2;

assign tmp_38_3_3_cast_fu_2163_p1 = r_V_2_3_3_fu_2157_p2;

assign tmp_38_3_4_cast_fu_2185_p1 = r_V_2_3_4_fu_2179_p2;

assign tmp_38_3_5_cast_fu_2206_p1 = r_V_2_3_5_fu_2200_p2;

assign tmp_38_3_6_cast_fu_2228_p1 = r_V_2_3_6_fu_2222_p2;

assign tmp_38_3_cast_fu_2097_p1 = r_V_2_3_fu_2091_p2;

assign tmp_38_4_1_cast_fu_2272_p1 = r_V_2_4_1_fu_2266_p2;

assign tmp_38_4_2_cast_fu_2294_p1 = r_V_2_4_2_fu_2288_p2;

assign tmp_38_4_3_cast_fu_2316_p1 = r_V_2_4_3_fu_2310_p2;

assign tmp_38_4_4_cast_fu_2338_p1 = r_V_2_4_4_fu_2332_p2;

assign tmp_38_4_5_cast_fu_2359_p1 = r_V_2_4_5_fu_2353_p2;

assign tmp_38_4_6_cast_fu_2381_p1 = r_V_2_4_6_fu_2375_p2;

assign tmp_38_4_cast_fu_2250_p1 = r_V_2_4_fu_2244_p2;

assign tmp_38_5_1_cast_fu_2425_p1 = r_V_2_5_1_fu_2419_p2;

assign tmp_38_5_2_cast_fu_2447_p1 = r_V_2_5_2_fu_2441_p2;

assign tmp_38_5_3_cast_fu_2469_p1 = r_V_2_5_3_fu_2463_p2;

assign tmp_38_5_4_cast_fu_2491_p1 = r_V_2_5_4_fu_2485_p2;

assign tmp_38_5_5_cast_fu_2512_p1 = r_V_2_5_5_fu_2506_p2;

assign tmp_38_5_6_cast_fu_2534_p1 = r_V_2_5_6_fu_2528_p2;

assign tmp_38_5_cast_fu_2403_p1 = r_V_2_5_fu_2397_p2;

assign tmp_38_6_1_cast_fu_2578_p1 = r_V_2_6_1_fu_2572_p2;

assign tmp_38_6_2_cast_fu_2600_p1 = r_V_2_6_2_fu_2594_p2;

assign tmp_38_6_3_cast_fu_2622_p1 = r_V_2_6_3_fu_2616_p2;

assign tmp_38_6_4_cast_fu_2644_p1 = r_V_2_6_4_fu_2638_p2;

assign tmp_38_6_5_cast_fu_2665_p1 = r_V_2_6_5_fu_2659_p2;

assign tmp_38_6_6_cast_fu_2687_p1 = r_V_2_6_6_fu_2681_p2;

assign tmp_38_6_cast_fu_2556_p1 = r_V_2_6_fu_2550_p2;

assign tmp_3_fu_725_p2 = ((iteration_1_mid2_fu_635_p3 == 19'd50) ? 1'b1 : 1'b0);

assign tmp_4_fu_623_p2 = (iteration_reg_494 + 19'd643);

assign tmp_4_mid1_fu_657_p2 = ((row_s_fu_651_p2 < 9'd480) ? 1'b1 : 1'b0);

assign tmp_4_mid2_fu_669_p3 = ((exitcond_fu_629_p2[0:0] === 1'b1) ? tmp_4_mid1_fu_657_p2 : tmp_5_fu_663_p2);

assign tmp_5_fu_663_p2 = ((row_reg_505 < 9'd480) ? 1'b1 : 1'b0);

assign tmp_65_fu_770_p1 = tmp_7_i_1_fu_757_p3[2:0];

assign tmp_66_fu_774_p1 = p_j_1_fu_749_p3[2:0];

assign tmp_67_fu_3181_p1 = grp_fu_3175_p2[7:0];

assign tmp_6_fu_683_p2 = ((row_reg_505 > 9'd2) ? 1'b1 : 1'b0);

assign tmp_6_mid1_fu_677_p2 = ((row_s_fu_651_p2 > 9'd2) ? 1'b1 : 1'b0);

assign tmp_6_mid2_fu_689_p3 = ((exitcond_fu_629_p2[0:0] === 1'b1) ? tmp_6_mid1_fu_677_p2 : tmp_6_fu_683_p2);

assign tmp_7_fu_743_p2 = (32'd1 + i_1_fu_302);

assign tmp_7_i_1_fu_757_p3 = ((tmp_9_fu_737_p2[0:0] === 1'b1) ? tmp_7_fu_743_p2 : i_1_fu_302);

assign tmp_8_fu_713_p2 = ((iteration_1_mid2_fu_635_p3 < 19'd49) ? 1'b1 : 1'b0);

assign tmp_9_fu_737_p2 = (($signed(j_1_fu_306) > $signed(32'd6)) ? 1'b1 : 1'b0);

assign tmp_fu_2741_p2 = ($signed(tmp_38_1_1_cast_fu_1813_p1) + $signed(tmp_38_1_cast_fu_1791_p1));

assign tmp_s_fu_719_p2 = ((iteration_1_mid2_fu_635_p3 == 19'd49) ? 1'b1 : 1'b0);

endmodule //convolution_filter
