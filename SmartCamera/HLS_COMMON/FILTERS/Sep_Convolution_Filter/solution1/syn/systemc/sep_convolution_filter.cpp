// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sep_convolution_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sep_convolution_filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sep_convolution_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> sep_convolution_filter::ap_ST_fsm_state1 = "1";
const sc_lv<3> sep_convolution_filter::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> sep_convolution_filter::ap_ST_fsm_state40 = "100";
const sc_lv<32> sep_convolution_filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool sep_convolution_filter::ap_const_boolean_1 = true;
const sc_lv<1> sep_convolution_filter::ap_const_lv1_0 = "0";
const sc_lv<1> sep_convolution_filter::ap_const_lv1_1 = "1";
const sc_lv<2> sep_convolution_filter::ap_const_lv2_0 = "00";
const sc_lv<2> sep_convolution_filter::ap_const_lv2_2 = "10";
const sc_lv<2> sep_convolution_filter::ap_const_lv2_3 = "11";
const sc_lv<2> sep_convolution_filter::ap_const_lv2_1 = "1";
const sc_lv<19> sep_convolution_filter::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<32> sep_convolution_filter::ap_const_lv32_1 = "1";
const bool sep_convolution_filter::ap_const_boolean_0 = false;
const sc_lv<9> sep_convolution_filter::ap_const_lv9_0 = "000000000";
const sc_lv<10> sep_convolution_filter::ap_const_lv10_0 = "0000000000";
const sc_lv<64> sep_convolution_filter::ap_const_lv64_31 = "110001";
const sc_lv<64> sep_convolution_filter::ap_const_lv64_32 = "110010";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_0 = "000";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_1 = "1";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_2 = "10";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_3 = "11";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_4 = "100";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_5 = "101";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_6 = "110";
const sc_lv<3> sep_convolution_filter::ap_const_lv3_7 = "111";
const sc_lv<19> sep_convolution_filter::ap_const_lv19_4BD29 = "1001011110100101001";
const sc_lv<19> sep_convolution_filter::ap_const_lv19_1 = "1";
const sc_lv<19> sep_convolution_filter::ap_const_lv19_283 = "1010000011";
const sc_lv<10> sep_convolution_filter::ap_const_lv10_283 = "1010000011";
const sc_lv<9> sep_convolution_filter::ap_const_lv9_1 = "1";
const sc_lv<9> sep_convolution_filter::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> sep_convolution_filter::ap_const_lv9_2 = "10";
const sc_lv<19> sep_convolution_filter::ap_const_lv19_31 = "110001";
const sc_lv<19> sep_convolution_filter::ap_const_lv19_32 = "110010";
const sc_lv<32> sep_convolution_filter::ap_const_lv32_6 = "110";
const sc_lv<10> sep_convolution_filter::ap_const_lv10_280 = "1010000000";
const sc_lv<10> sep_convolution_filter::ap_const_lv10_2 = "10";
const sc_lv<10> sep_convolution_filter::ap_const_lv10_1 = "1";
const sc_lv<32> sep_convolution_filter::ap_const_lv32_2 = "10";

sep_convolution_filter::sep_convolution_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    line_buffer_V_0_U = new sep_convolution_fbkb("line_buffer_V_0_U");
    line_buffer_V_0_U->clk(ap_clk);
    line_buffer_V_0_U->reset(ap_rst_n_inv);
    line_buffer_V_0_U->address0(line_buffer_V_0_address0);
    line_buffer_V_0_U->ce0(line_buffer_V_0_ce0);
    line_buffer_V_0_U->q0(line_buffer_V_0_q0);
    line_buffer_V_0_U->address1(line_buffer_V_0_addr_reg_1386);
    line_buffer_V_0_U->ce1(line_buffer_V_0_ce1);
    line_buffer_V_0_U->we1(line_buffer_V_0_we1);
    line_buffer_V_0_U->d1(line_buffer_V_1_q0);
    line_buffer_V_1_U = new sep_convolution_fbkb("line_buffer_V_1_U");
    line_buffer_V_1_U->clk(ap_clk);
    line_buffer_V_1_U->reset(ap_rst_n_inv);
    line_buffer_V_1_U->address0(line_buffer_V_1_address0);
    line_buffer_V_1_U->ce0(line_buffer_V_1_ce0);
    line_buffer_V_1_U->q0(line_buffer_V_1_q0);
    line_buffer_V_1_U->address1(line_buffer_V_1_addr_reg_1392);
    line_buffer_V_1_U->ce1(line_buffer_V_1_ce1);
    line_buffer_V_1_U->we1(line_buffer_V_1_we1);
    line_buffer_V_1_U->d1(line_buffer_V_2_q0);
    line_buffer_V_2_U = new sep_convolution_fbkb("line_buffer_V_2_U");
    line_buffer_V_2_U->clk(ap_clk);
    line_buffer_V_2_U->reset(ap_rst_n_inv);
    line_buffer_V_2_U->address0(line_buffer_V_2_address0);
    line_buffer_V_2_U->ce0(line_buffer_V_2_ce0);
    line_buffer_V_2_U->q0(line_buffer_V_2_q0);
    line_buffer_V_2_U->address1(line_buffer_V_2_addr_reg_1398);
    line_buffer_V_2_U->ce1(line_buffer_V_2_ce1);
    line_buffer_V_2_U->we1(line_buffer_V_2_we1);
    line_buffer_V_2_U->d1(line_buffer_V_3_q0);
    line_buffer_V_3_U = new sep_convolution_fbkb("line_buffer_V_3_U");
    line_buffer_V_3_U->clk(ap_clk);
    line_buffer_V_3_U->reset(ap_rst_n_inv);
    line_buffer_V_3_U->address0(line_buffer_V_3_address0);
    line_buffer_V_3_U->ce0(line_buffer_V_3_ce0);
    line_buffer_V_3_U->q0(line_buffer_V_3_q0);
    line_buffer_V_3_U->address1(line_buffer_V_3_addr_reg_1404);
    line_buffer_V_3_U->ce1(line_buffer_V_3_ce1);
    line_buffer_V_3_U->we1(line_buffer_V_3_we1);
    line_buffer_V_3_U->d1(line_buffer_V_4_q0);
    line_buffer_V_4_U = new sep_convolution_fbkb("line_buffer_V_4_U");
    line_buffer_V_4_U->clk(ap_clk);
    line_buffer_V_4_U->reset(ap_rst_n_inv);
    line_buffer_V_4_U->address0(line_buffer_V_4_address0);
    line_buffer_V_4_U->ce0(line_buffer_V_4_ce0);
    line_buffer_V_4_U->q0(line_buffer_V_4_q0);
    line_buffer_V_4_U->address1(line_buffer_V_4_addr_reg_1410);
    line_buffer_V_4_U->ce1(line_buffer_V_4_ce1);
    line_buffer_V_4_U->we1(line_buffer_V_4_we1);
    line_buffer_V_4_U->d1(line_buffer_V_5_q0);
    line_buffer_V_5_U = new sep_convolution_fbkb("line_buffer_V_5_U");
    line_buffer_V_5_U->clk(ap_clk);
    line_buffer_V_5_U->reset(ap_rst_n_inv);
    line_buffer_V_5_U->address0(line_buffer_V_5_address0);
    line_buffer_V_5_U->ce0(line_buffer_V_5_ce0);
    line_buffer_V_5_U->q0(line_buffer_V_5_q0);
    line_buffer_V_5_U->address1(line_buffer_V_5_address1);
    line_buffer_V_5_U->ce1(line_buffer_V_5_ce1);
    line_buffer_V_5_U->we1(line_buffer_V_5_we1);
    line_buffer_V_5_U->d1(in_temp_V_reg_1421);
    sep_convolution_fhbi_U1 = new sep_convolution_fhbi<1,34,30,8,8>("sep_convolution_fhbi_U1");
    sep_convolution_fhbi_U1->clk(ap_clk);
    sep_convolution_fhbi_U1->reset(ap_rst_n_inv);
    sep_convolution_fhbi_U1->din0(grp_fu_1158_p0);
    sep_convolution_fhbi_U1->din1(kernel_sum_V_load_reg_1432);
    sep_convolution_fhbi_U1->ce(grp_fu_1158_ce);
    sep_convolution_fhbi_U1->dout(grp_fu_1158_p2);
    sep_convolution_fibs_U2 = new sep_convolution_fibs<1,1,8,8,16,17>("sep_convolution_fibs_U2");
    sep_convolution_fibs_U2->din0(kernel_v_V_2);
    sep_convolution_fibs_U2->din1(grp_fu_1174_p1);
    sep_convolution_fibs_U2->din2(r_V_fu_831_p2);
    sep_convolution_fibs_U2->dout(grp_fu_1174_p3);
    sep_convolution_fibs_U3 = new sep_convolution_fibs<1,1,8,8,16,17>("sep_convolution_fibs_U3");
    sep_convolution_fibs_U3->din0(kernel_v_V_3);
    sep_convolution_fibs_U3->din1(grp_fu_1183_p1);
    sep_convolution_fibs_U3->din2(r_V_7_fu_931_p2);
    sep_convolution_fibs_U3->dout(grp_fu_1183_p3);
    sep_convolution_fjbC_U4 = new sep_convolution_fjbC<1,1,8,8,17,18>("sep_convolution_fjbC_U4");
    sep_convolution_fjbC_U4->din0(kernel_v_V_4);
    sep_convolution_fjbC_U4->din1(grp_fu_1192_p1);
    sep_convolution_fjbC_U4->din2(grp_fu_1183_p3);
    sep_convolution_fjbC_U4->dout(grp_fu_1192_p3);
    sep_convolution_fibs_U5 = new sep_convolution_fibs<1,1,8,8,16,17>("sep_convolution_fibs_U5");
    sep_convolution_fibs_U5->din0(kernel_v_V_6);
    sep_convolution_fibs_U5->din1(grp_fu_1201_p1);
    sep_convolution_fibs_U5->din2(r_V_s_fu_857_p2);
    sep_convolution_fibs_U5->dout(grp_fu_1201_p3);
    sep_convolution_fkbM_U6 = new sep_convolution_fkbM<1,1,19,8,28,28>("sep_convolution_fkbM_U6");
    sep_convolution_fkbM_U6->din0(convolution_buffer_V_1);
    sep_convolution_fkbM_U6->din1(kernel_h_V_0_loc_1_l_1_reg_1427);
    sep_convolution_fkbM_U6->din2(grp_fu_1225_p3);
    sep_convolution_fkbM_U6->dout(grp_fu_1210_p3);
    sep_convolution_flbW_U7 = new sep_convolution_flbW<1,1,19,8,27>("sep_convolution_flbW_U7");
    sep_convolution_flbW_U7->din0(convolution_buffer_V_2);
    sep_convolution_flbW_U7->din1(kernel_h_V_1);
    sep_convolution_flbW_U7->dout(r_V_4_1_fu_1218_p2);
    sep_convolution_fmb6_U8 = new sep_convolution_fmb6<1,1,19,8,27,28>("sep_convolution_fmb6_U8");
    sep_convolution_fmb6_U8->din0(convolution_buffer_V_3);
    sep_convolution_fmb6_U8->din1(kernel_h_V_2);
    sep_convolution_fmb6_U8->din2(r_V_4_1_fu_1218_p2);
    sep_convolution_fmb6_U8->dout(grp_fu_1225_p3);
    sep_convolution_flbW_U9 = new sep_convolution_flbW<1,1,19,8,27>("sep_convolution_flbW_U9");
    sep_convolution_flbW_U9->din0(convolution_buffer_V_4);
    sep_convolution_flbW_U9->din1(kernel_h_V_3);
    sep_convolution_flbW_U9->dout(r_V_4_3_fu_1234_p2);
    sep_convolution_fmb6_U10 = new sep_convolution_fmb6<1,1,19,8,27,28>("sep_convolution_fmb6_U10");
    sep_convolution_fmb6_U10->din0(convolution_buffer_V_5);
    sep_convolution_fmb6_U10->din1(kernel_h_V_4);
    sep_convolution_fmb6_U10->din2(r_V_4_3_fu_1234_p2);
    sep_convolution_fmb6_U10->dout(grp_fu_1241_p3);
    sep_convolution_flbW_U11 = new sep_convolution_flbW<1,1,19,8,27>("sep_convolution_flbW_U11");
    sep_convolution_flbW_U11->din0(convolution_buffer_V_6);
    sep_convolution_flbW_U11->din1(kernel_h_V_5);
    sep_convolution_flbW_U11->dout(r_V_4_5_fu_1250_p2);
    sep_convolution_fncg_U12 = new sep_convolution_fncg<1,1,19,8,27,27>("sep_convolution_fncg_U12");
    sep_convolution_fncg_U12->din0(temp_v_V_6_fu_979_p2);
    sep_convolution_fncg_U12->din1(kernel_h_V_6);
    sep_convolution_fncg_U12->din2(r_V_4_5_fu_1250_p2);
    sep_convolution_fncg_U12->dout(grp_fu_1256_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_img_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_1368 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_img_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_1368 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_img_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_1368 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( ap_block_state38_io );
    sensitive << ( ap_block_state39_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter28);

    SC_METHOD(thread_ap_block_state31_pp0_stage0_iter29);

    SC_METHOD(thread_ap_block_state32_pp0_stage0_iter30);

    SC_METHOD(thread_ap_block_state33_pp0_stage0_iter31);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter32);

    SC_METHOD(thread_ap_block_state35_pp0_stage0_iter33);

    SC_METHOD(thread_ap_block_state36_pp0_stage0_iter34);

    SC_METHOD(thread_ap_block_state37_pp0_stage0_iter35);

    SC_METHOD(thread_ap_block_state38_io);
    sensitive << ( out_img_V_1_ack_in );
    sensitive << ( or_cond1_reg_1372_pp0_iter35_reg );

    SC_METHOD(thread_ap_block_state38_pp0_stage0_iter36);

    SC_METHOD(thread_ap_block_state39_io);
    sensitive << ( out_img_V_1_ack_in );
    sensitive << ( or_cond1_reg_1372_pp0_iter36_reg );

    SC_METHOD(thread_ap_block_state39_pp0_stage0_iter37);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_img_V_0_vld_out );
    sensitive << ( or_cond_reg_1368 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_1476);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_condition_1478);
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_8_fu_517_p2 );
    sensitive << ( tmp_4_fu_523_p2 );

    SC_METHOD(thread_ap_condition_1483);
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_3_fu_564_p2 );
    sensitive << ( grp_fu_381_p2 );

    SC_METHOD(thread_ap_condition_1489);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_9_reg_1322_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_condition_1491);
    sensitive << ( tmp_3_reg_1334_pp0_iter1_reg );
    sensitive << ( tmp_11_reg_1338_pp0_iter1_reg );
    sensitive << ( tmp_22_reg_1347_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_409_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( out_img_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter28 );
    sensitive << ( ap_enable_reg_pp0_iter29 );
    sensitive << ( ap_enable_reg_pp0_iter30 );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_enable_reg_pp0_iter33 );
    sensitive << ( ap_enable_reg_pp0_iter34 );
    sensitive << ( ap_enable_reg_pp0_iter35 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_img_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_col_1_fu_634_p2);
    sensitive << ( col_mid2_fu_441_p3 );

    SC_METHOD(thread_col_mid2_fu_441_p3);
    sensitive << ( col_reg_370 );
    sensitive << ( exitcond_fu_427_p2 );

    SC_METHOD(thread_exitcond_flatten_fu_409_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_326 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_427_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( col_reg_370 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_1158_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_1158_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( temp_h_V_fu_1139_p2 );

    SC_METHOD(thread_grp_fu_1174_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond1_reg_1372_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_1174_p10 );

    SC_METHOD(thread_grp_fu_1174_p10);
    sensitive << ( window_V_2 );

    SC_METHOD(thread_grp_fu_1183_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond1_reg_1372_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_1183_p10 );

    SC_METHOD(thread_grp_fu_1183_p10);
    sensitive << ( window_V_3 );

    SC_METHOD(thread_grp_fu_1192_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond1_reg_1372_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_1192_p10 );

    SC_METHOD(thread_grp_fu_1192_p10);
    sensitive << ( window_V_4 );

    SC_METHOD(thread_grp_fu_1201_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond1_reg_1372_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_1201_p10 );

    SC_METHOD(thread_grp_fu_1201_p10);
    sensitive << ( window_V_6 );

    SC_METHOD(thread_grp_fu_381_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_3_fu_564_p2 );
    sensitive << ( p_j_1_fu_547_p3 );

    SC_METHOD(thread_in_img_V_0_ack_in);
    sensitive << ( in_img_V_0_state );

    SC_METHOD(thread_in_img_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_1368 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_img_V_0_data_out);
    sensitive << ( in_img_V_0_payload_A );
    sensitive << ( in_img_V_0_payload_B );
    sensitive << ( in_img_V_0_sel );

    SC_METHOD(thread_in_img_V_0_load_A);
    sensitive << ( in_img_V_0_sel_wr );
    sensitive << ( in_img_V_0_state_cmp_full );

    SC_METHOD(thread_in_img_V_0_load_B);
    sensitive << ( in_img_V_0_sel_wr );
    sensitive << ( in_img_V_0_state_cmp_full );

    SC_METHOD(thread_in_img_V_0_sel);
    sensitive << ( in_img_V_0_sel_rd );

    SC_METHOD(thread_in_img_V_0_state_cmp_full);
    sensitive << ( in_img_V_0_state );

    SC_METHOD(thread_in_img_V_0_vld_in);
    sensitive << ( in_img_V_TVALID );

    SC_METHOD(thread_in_img_V_0_vld_out);
    sensitive << ( in_img_V_0_state );

    SC_METHOD(thread_in_img_V_TDATA_blk_n);
    sensitive << ( in_img_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond_reg_1368 );

    SC_METHOD(thread_in_img_V_TREADY);
    sensitive << ( in_img_V_0_state );

    SC_METHOD(thread_indvar_flatten_next_fu_415_p2);
    sensitive << ( indvar_flatten_reg_326 );

    SC_METHOD(thread_iteration_1_mid2_fu_433_p3);
    sensitive << ( iteration_1_reg_359 );
    sensitive << ( exitcond_fu_427_p2 );
    sensitive << ( tmp_5_fu_421_p2 );

    SC_METHOD(thread_iteration_mid2_fu_495_p3);
    sensitive << ( iteration_reg_337 );
    sensitive << ( exitcond_fu_427_p2 );
    sensitive << ( tmp_5_fu_421_p2 );

    SC_METHOD(thread_kernel_config_V_address0);
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_8_fu_517_p2 );
    sensitive << ( tmp_3_fu_564_p2 );
    sensitive << ( tmp_12_fu_570_p1 );
    sensitive << ( tmp_10_fu_579_p1 );
    sensitive << ( ap_condition_1478 );
    sensitive << ( ap_condition_1483 );
    sensitive << ( ap_condition_1476 );

    SC_METHOD(thread_kernel_config_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_8_fu_517_p2 );
    sensitive << ( tmp_4_fu_523_p2 );
    sensitive << ( tmp_3_fu_564_p2 );
    sensitive << ( grp_fu_381_p2 );

    SC_METHOD(thread_line_buffer_V_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_fu_663_p1 );

    SC_METHOD(thread_line_buffer_V_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_V_0_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_0_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_15_reg_1364_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_fu_663_p1 );

    SC_METHOD(thread_line_buffer_V_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_V_1_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_1_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_15_reg_1364_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_fu_663_p1 );

    SC_METHOD(thread_line_buffer_V_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_V_2_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_2_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_15_reg_1364_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_fu_663_p1 );

    SC_METHOD(thread_line_buffer_V_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_V_3_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_3_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_15_reg_1364_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_fu_663_p1 );

    SC_METHOD(thread_line_buffer_V_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_V_4_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_4_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_15_reg_1364_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_fu_663_p1 );

    SC_METHOD(thread_line_buffer_V_5_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_17_fu_800_p1 );

    SC_METHOD(thread_line_buffer_V_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buffer_V_5_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_line_buffer_V_5_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_cond_reg_1368_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_or_cond1_fu_622_p2);
    sensitive << ( tmp_7_mid2_fu_487_p3 );
    sensitive << ( tmp_18_fu_616_p2 );

    SC_METHOD(thread_or_cond_fu_610_p2);
    sensitive << ( tmp_15_fu_604_p2 );
    sensitive << ( tmp_5_mid2_fu_467_p3 );

    SC_METHOD(thread_out_img_V_1_ack_in);
    sensitive << ( out_img_V_1_state );

    SC_METHOD(thread_out_img_V_1_ack_out);
    sensitive << ( out_img_V_TREADY );

    SC_METHOD(thread_out_img_V_1_data_out);
    sensitive << ( out_img_V_1_payload_A );
    sensitive << ( out_img_V_1_payload_B );
    sensitive << ( out_img_V_1_sel );

    SC_METHOD(thread_out_img_V_1_load_A);
    sensitive << ( out_img_V_1_sel_wr );
    sensitive << ( out_img_V_1_state_cmp_full );

    SC_METHOD(thread_out_img_V_1_load_B);
    sensitive << ( out_img_V_1_sel_wr );
    sensitive << ( out_img_V_1_state_cmp_full );

    SC_METHOD(thread_out_img_V_1_sel);
    sensitive << ( out_img_V_1_sel_rd );

    SC_METHOD(thread_out_img_V_1_state_cmp_full);
    sensitive << ( out_img_V_1_state );

    SC_METHOD(thread_out_img_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( or_cond1_reg_1372_pp0_iter35_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_img_V_1_vld_out);
    sensitive << ( out_img_V_1_state );

    SC_METHOD(thread_out_img_V_TDATA);
    sensitive << ( out_img_V_1_data_out );

    SC_METHOD(thread_out_img_V_TDATA_blk_n);
    sensitive << ( out_img_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( or_cond1_reg_1372_pp0_iter35_reg );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( or_cond1_reg_1372_pp0_iter36_reg );

    SC_METHOD(thread_out_img_V_TVALID);
    sensitive << ( out_img_V_1_state );

    SC_METHOD(thread_p_j_1_fu_547_p3);
    sensitive << ( j_1_fu_170 );
    sensitive << ( tmp_s_fu_535_p2 );

    SC_METHOD(thread_r_V_7_fu_931_p0);
    sensitive << ( kernel_v_V_5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_r_V_7_fu_931_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( r_V_7_fu_931_p10 );

    SC_METHOD(thread_r_V_7_fu_931_p10);
    sensitive << ( window_V_5 );

    SC_METHOD(thread_r_V_7_fu_931_p2);
    sensitive << ( r_V_7_fu_931_p0 );
    sensitive << ( r_V_7_fu_931_p1 );

    SC_METHOD(thread_r_V_9_fu_1168_p2);
    sensitive << ( kernel_off_V_load_reg_1437_pp0_iter35_reg );
    sensitive << ( tmp_23_fu_1164_p1 );

    SC_METHOD(thread_r_V_fu_831_p0);
    sensitive << ( kernel_v_V_0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_r_V_fu_831_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( r_V_fu_831_p10 );

    SC_METHOD(thread_r_V_fu_831_p10);
    sensitive << ( window_V_0 );

    SC_METHOD(thread_r_V_fu_831_p2);
    sensitive << ( r_V_fu_831_p0 );
    sensitive << ( r_V_fu_831_p1 );

    SC_METHOD(thread_r_V_s_fu_857_p0);
    sensitive << ( kernel_v_V_1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_r_V_s_fu_857_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( r_V_s_fu_857_p10 );

    SC_METHOD(thread_r_V_s_fu_857_p10);
    sensitive << ( window_V_1 );

    SC_METHOD(thread_r_V_s_fu_857_p2);
    sensitive << ( r_V_s_fu_857_p0 );
    sensitive << ( r_V_s_fu_857_p1 );

    SC_METHOD(thread_row_mid2_fu_503_p3);
    sensitive << ( row_reg_348 );
    sensitive << ( exitcond_fu_427_p2 );
    sensitive << ( row_s_fu_449_p2 );

    SC_METHOD(thread_row_s_fu_449_p2);
    sensitive << ( row_reg_348 );

    SC_METHOD(thread_temp_h_V_fu_1139_p2);
    sensitive << ( tmp12_cast_fu_1135_p1 );
    sensitive << ( tmp10_cast_fu_1124_p1 );

    SC_METHOD(thread_temp_v_V_6_fu_979_p2);
    sensitive << ( tmp7_cast_fu_975_p1 );
    sensitive << ( tmp5_cast_fu_960_p1 );

    SC_METHOD(thread_tmp10_cast_fu_1124_p1);
    sensitive << ( grp_fu_1210_p3 );

    SC_METHOD(thread_tmp12_cast_fu_1135_p1);
    sensitive << ( tmp_fu_1130_p2 );

    SC_METHOD(thread_tmp14_cast_fu_1127_p1);
    sensitive << ( grp_fu_1256_p3 );

    SC_METHOD(thread_tmp5_cast_fu_960_p1);
    sensitive << ( grp_fu_1192_p3 );

    SC_METHOD(thread_tmp7_cast_fu_975_p1);
    sensitive << ( tmp7_fu_969_p2 );

    SC_METHOD(thread_tmp7_fu_969_p2);
    sensitive << ( tmp9_cast_fu_966_p1 );
    sensitive << ( tmp8_cast_fu_963_p1 );

    SC_METHOD(thread_tmp8_cast_fu_963_p1);
    sensitive << ( grp_fu_1174_p3 );

    SC_METHOD(thread_tmp9_cast_fu_966_p1);
    sensitive << ( grp_fu_1201_p3 );

    SC_METHOD(thread_tmp_10_fu_579_p1);
    sensitive << ( iteration_1_mid2_fu_433_p3 );

    SC_METHOD(thread_tmp_12_fu_570_p1);
    sensitive << ( iteration_1_mid2_fu_433_p3 );

    SC_METHOD(thread_tmp_14_fu_588_p2);
    sensitive << ( p_j_1_fu_547_p3 );

    SC_METHOD(thread_tmp_15_fu_604_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( col_mid2_fu_441_p3 );

    SC_METHOD(thread_tmp_16_fu_663_p1);
    sensitive << ( col_mid2_reg_1306 );

    SC_METHOD(thread_tmp_17_fu_800_p1);
    sensitive << ( col_mid2_reg_1306_pp0_iter1_reg );

    SC_METHOD(thread_tmp_18_fu_616_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( col_mid2_fu_441_p3 );

    SC_METHOD(thread_tmp_20_fu_628_p2);
    sensitive << ( iteration_1_mid2_fu_433_p3 );

    SC_METHOD(thread_tmp_21_fu_584_p1);
    sensitive << ( p_j_1_fu_547_p3 );

    SC_METHOD(thread_tmp_22_fu_575_p1);
    sensitive << ( tmp_2_i_1_fu_556_p3 );

    SC_METHOD(thread_tmp_23_fu_1164_p1);
    sensitive << ( grp_fu_1158_p2 );

    SC_METHOD(thread_tmp_2_fu_541_p2);
    sensitive << ( i_1_fu_166 );

    SC_METHOD(thread_tmp_2_i_1_fu_556_p3);
    sensitive << ( i_1_fu_166 );
    sensitive << ( tmp_s_fu_535_p2 );
    sensitive << ( tmp_2_fu_541_p2 );

    SC_METHOD(thread_tmp_3_fu_564_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_2_i_1_fu_556_p3 );

    SC_METHOD(thread_tmp_4_fu_523_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( tmp_8_fu_517_p2 );
    sensitive << ( iteration_1_mid2_fu_433_p3 );

    SC_METHOD(thread_tmp_5_fu_421_p2);
    sensitive << ( iteration_reg_337 );

    SC_METHOD(thread_tmp_5_mid1_fu_455_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( row_s_fu_449_p2 );

    SC_METHOD(thread_tmp_5_mid2_fu_467_p3);
    sensitive << ( exitcond_fu_427_p2 );
    sensitive << ( tmp_5_mid1_fu_455_p2 );
    sensitive << ( tmp_6_fu_461_p2 );

    SC_METHOD(thread_tmp_6_fu_461_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( row_reg_348 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_7_fu_481_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( row_reg_348 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_7_mid1_fu_475_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( row_s_fu_449_p2 );

    SC_METHOD(thread_tmp_7_mid2_fu_487_p3);
    sensitive << ( exitcond_fu_427_p2 );
    sensitive << ( tmp_7_mid1_fu_475_p2 );
    sensitive << ( tmp_7_fu_481_p2 );

    SC_METHOD(thread_tmp_8_fu_517_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( iteration_1_mid2_fu_433_p3 );

    SC_METHOD(thread_tmp_9_fu_511_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( iteration_1_mid2_fu_433_p3 );

    SC_METHOD(thread_tmp_fu_1130_p2);
    sensitive << ( tmp14_cast_fu_1127_p1 );
    sensitive << ( grp_fu_1241_p3 );

    SC_METHOD(thread_tmp_s_fu_535_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_511_p2 );
    sensitive << ( j_1_fu_170 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_img_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( exitcond_flatten_fu_409_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state40 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    in_img_V_0_sel_rd = SC_LOGIC_0;
    in_img_V_0_sel_wr = SC_LOGIC_0;
    in_img_V_0_state = "00";
    out_img_V_1_sel_rd = SC_LOGIC_0;
    out_img_V_1_sel_wr = SC_LOGIC_0;
    out_img_V_1_state = "00";
    kernel_h_V_0 = "00000000";
    kernel_v_V_0 = "00000000";
    kernel_sum_V = "00000001";
    kernel_off_V = "00000000";
    window_V_0 = "00000000";
    window_V_1 = "00000000";
    window_V_2 = "00000000";
    window_V_3 = "00000000";
    window_V_4 = "00000000";
    window_V_5 = "00000000";
    window_V_6 = "00000000";
    kernel_v_V_1 = "00000000";
    kernel_v_V_2 = "00000000";
    kernel_v_V_3 = "00000000";
    kernel_v_V_4 = "00000000";
    kernel_v_V_5 = "00000000";
    kernel_v_V_6 = "00000000";
    convolution_buffer_V_1 = "0000000000000000000";
    convolution_buffer_V_2 = "0000000000000000000";
    kernel_h_V_1 = "00000000";
    convolution_buffer_V_3 = "0000000000000000000";
    kernel_h_V_2 = "00000000";
    convolution_buffer_V_4 = "0000000000000000000";
    kernel_h_V_3 = "00000000";
    convolution_buffer_V_5 = "0000000000000000000";
    kernel_h_V_4 = "00000000";
    convolution_buffer_V_6 = "0000000000000000000";
    kernel_h_V_5 = "00000000";
    kernel_h_V_6 = "00000000";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter36 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter37 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter28 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter29 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter30 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter31 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter32 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter33 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter34 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter35 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sep_convolution_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, kernel_config_V_address0, "(port)kernel_config_V_address0");
    sc_trace(mVcdFile, kernel_config_V_ce0, "(port)kernel_config_V_ce0");
    sc_trace(mVcdFile, kernel_config_V_q0, "(port)kernel_config_V_q0");
    sc_trace(mVcdFile, in_img_V_TDATA, "(port)in_img_V_TDATA");
    sc_trace(mVcdFile, in_img_V_TVALID, "(port)in_img_V_TVALID");
    sc_trace(mVcdFile, in_img_V_TREADY, "(port)in_img_V_TREADY");
    sc_trace(mVcdFile, out_img_V_TDATA, "(port)out_img_V_TDATA");
    sc_trace(mVcdFile, out_img_V_TVALID, "(port)out_img_V_TVALID");
    sc_trace(mVcdFile, out_img_V_TREADY, "(port)out_img_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_img_V_0_data_out, "in_img_V_0_data_out");
    sc_trace(mVcdFile, in_img_V_0_vld_in, "in_img_V_0_vld_in");
    sc_trace(mVcdFile, in_img_V_0_vld_out, "in_img_V_0_vld_out");
    sc_trace(mVcdFile, in_img_V_0_ack_in, "in_img_V_0_ack_in");
    sc_trace(mVcdFile, in_img_V_0_ack_out, "in_img_V_0_ack_out");
    sc_trace(mVcdFile, in_img_V_0_payload_A, "in_img_V_0_payload_A");
    sc_trace(mVcdFile, in_img_V_0_payload_B, "in_img_V_0_payload_B");
    sc_trace(mVcdFile, in_img_V_0_sel_rd, "in_img_V_0_sel_rd");
    sc_trace(mVcdFile, in_img_V_0_sel_wr, "in_img_V_0_sel_wr");
    sc_trace(mVcdFile, in_img_V_0_sel, "in_img_V_0_sel");
    sc_trace(mVcdFile, in_img_V_0_load_A, "in_img_V_0_load_A");
    sc_trace(mVcdFile, in_img_V_0_load_B, "in_img_V_0_load_B");
    sc_trace(mVcdFile, in_img_V_0_state, "in_img_V_0_state");
    sc_trace(mVcdFile, in_img_V_0_state_cmp_full, "in_img_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_img_V_1_data_out, "out_img_V_1_data_out");
    sc_trace(mVcdFile, out_img_V_1_vld_in, "out_img_V_1_vld_in");
    sc_trace(mVcdFile, out_img_V_1_vld_out, "out_img_V_1_vld_out");
    sc_trace(mVcdFile, out_img_V_1_ack_in, "out_img_V_1_ack_in");
    sc_trace(mVcdFile, out_img_V_1_ack_out, "out_img_V_1_ack_out");
    sc_trace(mVcdFile, out_img_V_1_payload_A, "out_img_V_1_payload_A");
    sc_trace(mVcdFile, out_img_V_1_payload_B, "out_img_V_1_payload_B");
    sc_trace(mVcdFile, out_img_V_1_sel_rd, "out_img_V_1_sel_rd");
    sc_trace(mVcdFile, out_img_V_1_sel_wr, "out_img_V_1_sel_wr");
    sc_trace(mVcdFile, out_img_V_1_sel, "out_img_V_1_sel");
    sc_trace(mVcdFile, out_img_V_1_load_A, "out_img_V_1_load_A");
    sc_trace(mVcdFile, out_img_V_1_load_B, "out_img_V_1_load_B");
    sc_trace(mVcdFile, out_img_V_1_state, "out_img_V_1_state");
    sc_trace(mVcdFile, out_img_V_1_state_cmp_full, "out_img_V_1_state_cmp_full");
    sc_trace(mVcdFile, kernel_h_V_0, "kernel_h_V_0");
    sc_trace(mVcdFile, kernel_v_V_0, "kernel_v_V_0");
    sc_trace(mVcdFile, kernel_sum_V, "kernel_sum_V");
    sc_trace(mVcdFile, kernel_off_V, "kernel_off_V");
    sc_trace(mVcdFile, line_buffer_V_0_address0, "line_buffer_V_0_address0");
    sc_trace(mVcdFile, line_buffer_V_0_ce0, "line_buffer_V_0_ce0");
    sc_trace(mVcdFile, line_buffer_V_0_q0, "line_buffer_V_0_q0");
    sc_trace(mVcdFile, line_buffer_V_0_ce1, "line_buffer_V_0_ce1");
    sc_trace(mVcdFile, line_buffer_V_0_we1, "line_buffer_V_0_we1");
    sc_trace(mVcdFile, window_V_0, "window_V_0");
    sc_trace(mVcdFile, line_buffer_V_1_address0, "line_buffer_V_1_address0");
    sc_trace(mVcdFile, line_buffer_V_1_ce0, "line_buffer_V_1_ce0");
    sc_trace(mVcdFile, line_buffer_V_1_q0, "line_buffer_V_1_q0");
    sc_trace(mVcdFile, line_buffer_V_1_ce1, "line_buffer_V_1_ce1");
    sc_trace(mVcdFile, line_buffer_V_1_we1, "line_buffer_V_1_we1");
    sc_trace(mVcdFile, window_V_1, "window_V_1");
    sc_trace(mVcdFile, line_buffer_V_2_address0, "line_buffer_V_2_address0");
    sc_trace(mVcdFile, line_buffer_V_2_ce0, "line_buffer_V_2_ce0");
    sc_trace(mVcdFile, line_buffer_V_2_q0, "line_buffer_V_2_q0");
    sc_trace(mVcdFile, line_buffer_V_2_ce1, "line_buffer_V_2_ce1");
    sc_trace(mVcdFile, line_buffer_V_2_we1, "line_buffer_V_2_we1");
    sc_trace(mVcdFile, window_V_2, "window_V_2");
    sc_trace(mVcdFile, line_buffer_V_3_address0, "line_buffer_V_3_address0");
    sc_trace(mVcdFile, line_buffer_V_3_ce0, "line_buffer_V_3_ce0");
    sc_trace(mVcdFile, line_buffer_V_3_q0, "line_buffer_V_3_q0");
    sc_trace(mVcdFile, line_buffer_V_3_ce1, "line_buffer_V_3_ce1");
    sc_trace(mVcdFile, line_buffer_V_3_we1, "line_buffer_V_3_we1");
    sc_trace(mVcdFile, window_V_3, "window_V_3");
    sc_trace(mVcdFile, line_buffer_V_4_address0, "line_buffer_V_4_address0");
    sc_trace(mVcdFile, line_buffer_V_4_ce0, "line_buffer_V_4_ce0");
    sc_trace(mVcdFile, line_buffer_V_4_q0, "line_buffer_V_4_q0");
    sc_trace(mVcdFile, line_buffer_V_4_ce1, "line_buffer_V_4_ce1");
    sc_trace(mVcdFile, line_buffer_V_4_we1, "line_buffer_V_4_we1");
    sc_trace(mVcdFile, window_V_4, "window_V_4");
    sc_trace(mVcdFile, line_buffer_V_5_address0, "line_buffer_V_5_address0");
    sc_trace(mVcdFile, line_buffer_V_5_ce0, "line_buffer_V_5_ce0");
    sc_trace(mVcdFile, line_buffer_V_5_q0, "line_buffer_V_5_q0");
    sc_trace(mVcdFile, line_buffer_V_5_address1, "line_buffer_V_5_address1");
    sc_trace(mVcdFile, line_buffer_V_5_ce1, "line_buffer_V_5_ce1");
    sc_trace(mVcdFile, line_buffer_V_5_we1, "line_buffer_V_5_we1");
    sc_trace(mVcdFile, window_V_5, "window_V_5");
    sc_trace(mVcdFile, window_V_6, "window_V_6");
    sc_trace(mVcdFile, kernel_v_V_1, "kernel_v_V_1");
    sc_trace(mVcdFile, kernel_v_V_2, "kernel_v_V_2");
    sc_trace(mVcdFile, kernel_v_V_3, "kernel_v_V_3");
    sc_trace(mVcdFile, kernel_v_V_4, "kernel_v_V_4");
    sc_trace(mVcdFile, kernel_v_V_5, "kernel_v_V_5");
    sc_trace(mVcdFile, kernel_v_V_6, "kernel_v_V_6");
    sc_trace(mVcdFile, convolution_buffer_V_1, "convolution_buffer_V_1");
    sc_trace(mVcdFile, convolution_buffer_V_2, "convolution_buffer_V_2");
    sc_trace(mVcdFile, kernel_h_V_1, "kernel_h_V_1");
    sc_trace(mVcdFile, convolution_buffer_V_3, "convolution_buffer_V_3");
    sc_trace(mVcdFile, kernel_h_V_2, "kernel_h_V_2");
    sc_trace(mVcdFile, convolution_buffer_V_4, "convolution_buffer_V_4");
    sc_trace(mVcdFile, kernel_h_V_3, "kernel_h_V_3");
    sc_trace(mVcdFile, convolution_buffer_V_5, "convolution_buffer_V_5");
    sc_trace(mVcdFile, kernel_h_V_4, "kernel_h_V_4");
    sc_trace(mVcdFile, convolution_buffer_V_6, "convolution_buffer_V_6");
    sc_trace(mVcdFile, kernel_h_V_5, "kernel_h_V_5");
    sc_trace(mVcdFile, kernel_h_V_6, "kernel_h_V_6");
    sc_trace(mVcdFile, in_img_V_TDATA_blk_n, "in_img_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, or_cond_reg_1368, "or_cond_reg_1368");
    sc_trace(mVcdFile, out_img_V_TDATA_blk_n, "out_img_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter36, "ap_enable_reg_pp0_iter36");
    sc_trace(mVcdFile, or_cond1_reg_1372, "or_cond1_reg_1372");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter35_reg, "or_cond1_reg_1372_pp0_iter35_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter37, "ap_enable_reg_pp0_iter37");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter36_reg, "or_cond1_reg_1372_pp0_iter36_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_326, "indvar_flatten_reg_326");
    sc_trace(mVcdFile, iteration_reg_337, "iteration_reg_337");
    sc_trace(mVcdFile, row_reg_348, "row_reg_348");
    sc_trace(mVcdFile, iteration_1_reg_359, "iteration_1_reg_359");
    sc_trace(mVcdFile, col_reg_370, "col_reg_370");
    sc_trace(mVcdFile, reg_386, "reg_386");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter22, "ap_block_state24_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter23, "ap_block_state25_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter24, "ap_block_state26_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter25, "ap_block_state27_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter26, "ap_block_state28_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter27, "ap_block_state29_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter28, "ap_block_state30_pp0_stage0_iter28");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage0_iter29, "ap_block_state31_pp0_stage0_iter29");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage0_iter30, "ap_block_state32_pp0_stage0_iter30");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage0_iter31, "ap_block_state33_pp0_stage0_iter31");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter32, "ap_block_state34_pp0_stage0_iter32");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage0_iter33, "ap_block_state35_pp0_stage0_iter33");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage0_iter34, "ap_block_state36_pp0_stage0_iter34");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage0_iter35, "ap_block_state37_pp0_stage0_iter35");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage0_iter36, "ap_block_state38_pp0_stage0_iter36");
    sc_trace(mVcdFile, ap_block_state38_io, "ap_block_state38_io");
    sc_trace(mVcdFile, ap_block_state39_pp0_stage0_iter37, "ap_block_state39_pp0_stage0_iter37");
    sc_trace(mVcdFile, ap_block_state39_io, "ap_block_state39_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_9_reg_1322, "tmp_9_reg_1322");
    sc_trace(mVcdFile, tmp_3_reg_1334, "tmp_3_reg_1334");
    sc_trace(mVcdFile, tmp_11_reg_1338, "tmp_11_reg_1338");
    sc_trace(mVcdFile, exitcond_flatten_fu_409_p2, "exitcond_flatten_fu_409_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_415_p2, "indvar_flatten_next_fu_415_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, col_mid2_fu_441_p3, "col_mid2_fu_441_p3");
    sc_trace(mVcdFile, col_mid2_reg_1306, "col_mid2_reg_1306");
    sc_trace(mVcdFile, col_mid2_reg_1306_pp0_iter1_reg, "col_mid2_reg_1306_pp0_iter1_reg");
    sc_trace(mVcdFile, iteration_mid2_fu_495_p3, "iteration_mid2_fu_495_p3");
    sc_trace(mVcdFile, row_mid2_fu_503_p3, "row_mid2_fu_503_p3");
    sc_trace(mVcdFile, tmp_9_fu_511_p2, "tmp_9_fu_511_p2");
    sc_trace(mVcdFile, tmp_9_reg_1322_pp0_iter1_reg, "tmp_9_reg_1322_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_8_fu_517_p2, "tmp_8_fu_517_p2");
    sc_trace(mVcdFile, tmp_8_reg_1326, "tmp_8_reg_1326");
    sc_trace(mVcdFile, tmp_4_fu_523_p2, "tmp_4_fu_523_p2");
    sc_trace(mVcdFile, tmp_4_reg_1330, "tmp_4_reg_1330");
    sc_trace(mVcdFile, tmp_3_fu_564_p2, "tmp_3_fu_564_p2");
    sc_trace(mVcdFile, tmp_3_reg_1334_pp0_iter1_reg, "tmp_3_reg_1334_pp0_iter1_reg");
    sc_trace(mVcdFile, grp_fu_381_p2, "grp_fu_381_p2");
    sc_trace(mVcdFile, tmp_11_reg_1338_pp0_iter1_reg, "tmp_11_reg_1338_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_22_fu_575_p1, "tmp_22_fu_575_p1");
    sc_trace(mVcdFile, tmp_22_reg_1347, "tmp_22_reg_1347");
    sc_trace(mVcdFile, tmp_22_reg_1347_pp0_iter1_reg, "tmp_22_reg_1347_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_21_fu_584_p1, "tmp_21_fu_584_p1");
    sc_trace(mVcdFile, tmp_21_reg_1356, "tmp_21_reg_1356");
    sc_trace(mVcdFile, tmp_21_reg_1356_pp0_iter1_reg, "tmp_21_reg_1356_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_13_reg_1360, "tmp_13_reg_1360");
    sc_trace(mVcdFile, tmp_13_reg_1360_pp0_iter1_reg, "tmp_13_reg_1360_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_15_fu_604_p2, "tmp_15_fu_604_p2");
    sc_trace(mVcdFile, tmp_15_reg_1364, "tmp_15_reg_1364");
    sc_trace(mVcdFile, tmp_15_reg_1364_pp0_iter1_reg, "tmp_15_reg_1364_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond_fu_610_p2, "or_cond_fu_610_p2");
    sc_trace(mVcdFile, or_cond_reg_1368_pp0_iter1_reg, "or_cond_reg_1368_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond1_fu_622_p2, "or_cond1_fu_622_p2");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter1_reg, "or_cond1_reg_1372_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter2_reg, "or_cond1_reg_1372_pp0_iter2_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter3_reg, "or_cond1_reg_1372_pp0_iter3_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter4_reg, "or_cond1_reg_1372_pp0_iter4_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter5_reg, "or_cond1_reg_1372_pp0_iter5_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter6_reg, "or_cond1_reg_1372_pp0_iter6_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter7_reg, "or_cond1_reg_1372_pp0_iter7_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter8_reg, "or_cond1_reg_1372_pp0_iter8_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter9_reg, "or_cond1_reg_1372_pp0_iter9_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter10_reg, "or_cond1_reg_1372_pp0_iter10_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter11_reg, "or_cond1_reg_1372_pp0_iter11_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter12_reg, "or_cond1_reg_1372_pp0_iter12_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter13_reg, "or_cond1_reg_1372_pp0_iter13_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter14_reg, "or_cond1_reg_1372_pp0_iter14_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter15_reg, "or_cond1_reg_1372_pp0_iter15_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter16_reg, "or_cond1_reg_1372_pp0_iter16_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter17_reg, "or_cond1_reg_1372_pp0_iter17_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter18_reg, "or_cond1_reg_1372_pp0_iter18_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter19_reg, "or_cond1_reg_1372_pp0_iter19_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter20_reg, "or_cond1_reg_1372_pp0_iter20_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter21_reg, "or_cond1_reg_1372_pp0_iter21_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter22_reg, "or_cond1_reg_1372_pp0_iter22_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter23_reg, "or_cond1_reg_1372_pp0_iter23_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter24_reg, "or_cond1_reg_1372_pp0_iter24_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter25_reg, "or_cond1_reg_1372_pp0_iter25_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter26_reg, "or_cond1_reg_1372_pp0_iter26_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter27_reg, "or_cond1_reg_1372_pp0_iter27_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter28_reg, "or_cond1_reg_1372_pp0_iter28_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter29_reg, "or_cond1_reg_1372_pp0_iter29_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter30_reg, "or_cond1_reg_1372_pp0_iter30_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter31_reg, "or_cond1_reg_1372_pp0_iter31_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter32_reg, "or_cond1_reg_1372_pp0_iter32_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter33_reg, "or_cond1_reg_1372_pp0_iter33_reg");
    sc_trace(mVcdFile, or_cond1_reg_1372_pp0_iter34_reg, "or_cond1_reg_1372_pp0_iter34_reg");
    sc_trace(mVcdFile, tmp_20_fu_628_p2, "tmp_20_fu_628_p2");
    sc_trace(mVcdFile, col_1_fu_634_p2, "col_1_fu_634_p2");
    sc_trace(mVcdFile, line_buffer_V_0_addr_reg_1386, "line_buffer_V_0_addr_reg_1386");
    sc_trace(mVcdFile, line_buffer_V_1_addr_reg_1392, "line_buffer_V_1_addr_reg_1392");
    sc_trace(mVcdFile, line_buffer_V_2_addr_reg_1398, "line_buffer_V_2_addr_reg_1398");
    sc_trace(mVcdFile, line_buffer_V_3_addr_reg_1404, "line_buffer_V_3_addr_reg_1404");
    sc_trace(mVcdFile, line_buffer_V_4_addr_reg_1410, "line_buffer_V_4_addr_reg_1410");
    sc_trace(mVcdFile, in_temp_V_reg_1421, "in_temp_V_reg_1421");
    sc_trace(mVcdFile, kernel_h_V_0_loc_1_l_1_reg_1427, "kernel_h_V_0_loc_1_l_1_reg_1427");
    sc_trace(mVcdFile, kernel_sum_V_load_reg_1432, "kernel_sum_V_load_reg_1432");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437, "kernel_off_V_load_reg_1437");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter3_reg, "kernel_off_V_load_reg_1437_pp0_iter3_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter4_reg, "kernel_off_V_load_reg_1437_pp0_iter4_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter5_reg, "kernel_off_V_load_reg_1437_pp0_iter5_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter6_reg, "kernel_off_V_load_reg_1437_pp0_iter6_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter7_reg, "kernel_off_V_load_reg_1437_pp0_iter7_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter8_reg, "kernel_off_V_load_reg_1437_pp0_iter8_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter9_reg, "kernel_off_V_load_reg_1437_pp0_iter9_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter10_reg, "kernel_off_V_load_reg_1437_pp0_iter10_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter11_reg, "kernel_off_V_load_reg_1437_pp0_iter11_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter12_reg, "kernel_off_V_load_reg_1437_pp0_iter12_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter13_reg, "kernel_off_V_load_reg_1437_pp0_iter13_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter14_reg, "kernel_off_V_load_reg_1437_pp0_iter14_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter15_reg, "kernel_off_V_load_reg_1437_pp0_iter15_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter16_reg, "kernel_off_V_load_reg_1437_pp0_iter16_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter17_reg, "kernel_off_V_load_reg_1437_pp0_iter17_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter18_reg, "kernel_off_V_load_reg_1437_pp0_iter18_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter19_reg, "kernel_off_V_load_reg_1437_pp0_iter19_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter20_reg, "kernel_off_V_load_reg_1437_pp0_iter20_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter21_reg, "kernel_off_V_load_reg_1437_pp0_iter21_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter22_reg, "kernel_off_V_load_reg_1437_pp0_iter22_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter23_reg, "kernel_off_V_load_reg_1437_pp0_iter23_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter24_reg, "kernel_off_V_load_reg_1437_pp0_iter24_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter25_reg, "kernel_off_V_load_reg_1437_pp0_iter25_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter26_reg, "kernel_off_V_load_reg_1437_pp0_iter26_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter27_reg, "kernel_off_V_load_reg_1437_pp0_iter27_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter28_reg, "kernel_off_V_load_reg_1437_pp0_iter28_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter29_reg, "kernel_off_V_load_reg_1437_pp0_iter29_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter30_reg, "kernel_off_V_load_reg_1437_pp0_iter30_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter31_reg, "kernel_off_V_load_reg_1437_pp0_iter31_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter32_reg, "kernel_off_V_load_reg_1437_pp0_iter32_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter33_reg, "kernel_off_V_load_reg_1437_pp0_iter33_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter34_reg, "kernel_off_V_load_reg_1437_pp0_iter34_reg");
    sc_trace(mVcdFile, kernel_off_V_load_reg_1437_pp0_iter35_reg, "kernel_off_V_load_reg_1437_pp0_iter35_reg");
    sc_trace(mVcdFile, r_V_9_fu_1168_p2, "r_V_9_fu_1168_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter28, "ap_enable_reg_pp0_iter28");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter29, "ap_enable_reg_pp0_iter29");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter30, "ap_enable_reg_pp0_iter30");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter31, "ap_enable_reg_pp0_iter31");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter32, "ap_enable_reg_pp0_iter32");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter33, "ap_enable_reg_pp0_iter33");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter34, "ap_enable_reg_pp0_iter34");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter35, "ap_enable_reg_pp0_iter35");
    sc_trace(mVcdFile, tmp_12_fu_570_p1, "tmp_12_fu_570_p1");
    sc_trace(mVcdFile, tmp_10_fu_579_p1, "tmp_10_fu_579_p1");
    sc_trace(mVcdFile, tmp_16_fu_663_p1, "tmp_16_fu_663_p1");
    sc_trace(mVcdFile, tmp_17_fu_800_p1, "tmp_17_fu_800_p1");
    sc_trace(mVcdFile, temp_v_V_6_fu_979_p2, "temp_v_V_6_fu_979_p2");
    sc_trace(mVcdFile, kernel_h_V_0_loc_1_fu_162, "kernel_h_V_0_loc_1_fu_162");
    sc_trace(mVcdFile, i_1_fu_166, "i_1_fu_166");
    sc_trace(mVcdFile, tmp_2_i_1_fu_556_p3, "tmp_2_i_1_fu_556_p3");
    sc_trace(mVcdFile, j_1_fu_170, "j_1_fu_170");
    sc_trace(mVcdFile, tmp_14_fu_588_p2, "tmp_14_fu_588_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, p_j_1_fu_547_p3, "p_j_1_fu_547_p3");
    sc_trace(mVcdFile, exitcond_fu_427_p2, "exitcond_fu_427_p2");
    sc_trace(mVcdFile, tmp_5_fu_421_p2, "tmp_5_fu_421_p2");
    sc_trace(mVcdFile, row_s_fu_449_p2, "row_s_fu_449_p2");
    sc_trace(mVcdFile, tmp_5_mid1_fu_455_p2, "tmp_5_mid1_fu_455_p2");
    sc_trace(mVcdFile, tmp_6_fu_461_p2, "tmp_6_fu_461_p2");
    sc_trace(mVcdFile, tmp_7_mid1_fu_475_p2, "tmp_7_mid1_fu_475_p2");
    sc_trace(mVcdFile, tmp_7_fu_481_p2, "tmp_7_fu_481_p2");
    sc_trace(mVcdFile, iteration_1_mid2_fu_433_p3, "iteration_1_mid2_fu_433_p3");
    sc_trace(mVcdFile, tmp_s_fu_535_p2, "tmp_s_fu_535_p2");
    sc_trace(mVcdFile, tmp_2_fu_541_p2, "tmp_2_fu_541_p2");
    sc_trace(mVcdFile, tmp_5_mid2_fu_467_p3, "tmp_5_mid2_fu_467_p3");
    sc_trace(mVcdFile, tmp_7_mid2_fu_487_p3, "tmp_7_mid2_fu_487_p3");
    sc_trace(mVcdFile, tmp_18_fu_616_p2, "tmp_18_fu_616_p2");
    sc_trace(mVcdFile, r_V_fu_831_p0, "r_V_fu_831_p0");
    sc_trace(mVcdFile, r_V_fu_831_p1, "r_V_fu_831_p1");
    sc_trace(mVcdFile, r_V_fu_831_p2, "r_V_fu_831_p2");
    sc_trace(mVcdFile, r_V_s_fu_857_p0, "r_V_s_fu_857_p0");
    sc_trace(mVcdFile, r_V_s_fu_857_p1, "r_V_s_fu_857_p1");
    sc_trace(mVcdFile, r_V_s_fu_857_p2, "r_V_s_fu_857_p2");
    sc_trace(mVcdFile, r_V_7_fu_931_p0, "r_V_7_fu_931_p0");
    sc_trace(mVcdFile, r_V_7_fu_931_p1, "r_V_7_fu_931_p1");
    sc_trace(mVcdFile, r_V_7_fu_931_p2, "r_V_7_fu_931_p2");
    sc_trace(mVcdFile, grp_fu_1183_p3, "grp_fu_1183_p3");
    sc_trace(mVcdFile, grp_fu_1192_p3, "grp_fu_1192_p3");
    sc_trace(mVcdFile, grp_fu_1174_p3, "grp_fu_1174_p3");
    sc_trace(mVcdFile, grp_fu_1201_p3, "grp_fu_1201_p3");
    sc_trace(mVcdFile, tmp9_cast_fu_966_p1, "tmp9_cast_fu_966_p1");
    sc_trace(mVcdFile, tmp8_cast_fu_963_p1, "tmp8_cast_fu_963_p1");
    sc_trace(mVcdFile, tmp7_fu_969_p2, "tmp7_fu_969_p2");
    sc_trace(mVcdFile, tmp7_cast_fu_975_p1, "tmp7_cast_fu_975_p1");
    sc_trace(mVcdFile, tmp5_cast_fu_960_p1, "tmp5_cast_fu_960_p1");
    sc_trace(mVcdFile, r_V_4_1_fu_1218_p2, "r_V_4_1_fu_1218_p2");
    sc_trace(mVcdFile, r_V_4_3_fu_1234_p2, "r_V_4_3_fu_1234_p2");
    sc_trace(mVcdFile, grp_fu_1210_p3, "grp_fu_1210_p3");
    sc_trace(mVcdFile, grp_fu_1256_p3, "grp_fu_1256_p3");
    sc_trace(mVcdFile, tmp14_cast_fu_1127_p1, "tmp14_cast_fu_1127_p1");
    sc_trace(mVcdFile, grp_fu_1241_p3, "grp_fu_1241_p3");
    sc_trace(mVcdFile, tmp_fu_1130_p2, "tmp_fu_1130_p2");
    sc_trace(mVcdFile, tmp12_cast_fu_1135_p1, "tmp12_cast_fu_1135_p1");
    sc_trace(mVcdFile, tmp10_cast_fu_1124_p1, "tmp10_cast_fu_1124_p1");
    sc_trace(mVcdFile, temp_h_V_fu_1139_p2, "temp_h_V_fu_1139_p2");
    sc_trace(mVcdFile, grp_fu_1158_p0, "grp_fu_1158_p0");
    sc_trace(mVcdFile, grp_fu_1158_p2, "grp_fu_1158_p2");
    sc_trace(mVcdFile, tmp_23_fu_1164_p1, "tmp_23_fu_1164_p1");
    sc_trace(mVcdFile, grp_fu_1174_p1, "grp_fu_1174_p1");
    sc_trace(mVcdFile, grp_fu_1183_p1, "grp_fu_1183_p1");
    sc_trace(mVcdFile, grp_fu_1192_p1, "grp_fu_1192_p1");
    sc_trace(mVcdFile, grp_fu_1201_p1, "grp_fu_1201_p1");
    sc_trace(mVcdFile, grp_fu_1225_p3, "grp_fu_1225_p3");
    sc_trace(mVcdFile, r_V_4_5_fu_1250_p2, "r_V_4_5_fu_1250_p2");
    sc_trace(mVcdFile, grp_fu_1158_ce, "grp_fu_1158_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_1174_p10, "grp_fu_1174_p10");
    sc_trace(mVcdFile, grp_fu_1183_p10, "grp_fu_1183_p10");
    sc_trace(mVcdFile, grp_fu_1192_p10, "grp_fu_1192_p10");
    sc_trace(mVcdFile, grp_fu_1201_p10, "grp_fu_1201_p10");
    sc_trace(mVcdFile, r_V_7_fu_931_p10, "r_V_7_fu_931_p10");
    sc_trace(mVcdFile, r_V_fu_831_p10, "r_V_fu_831_p10");
    sc_trace(mVcdFile, r_V_s_fu_857_p10, "r_V_s_fu_857_p10");
    sc_trace(mVcdFile, ap_condition_1478, "ap_condition_1478");
    sc_trace(mVcdFile, ap_condition_1483, "ap_condition_1483");
    sc_trace(mVcdFile, ap_condition_1476, "ap_condition_1476");
    sc_trace(mVcdFile, ap_condition_1491, "ap_condition_1491");
    sc_trace(mVcdFile, ap_condition_1489, "ap_condition_1489");
#endif

    }
    mHdltvinHandle.open("sep_convolution_filter.hdltvin.dat");
    mHdltvoutHandle.open("sep_convolution_filter.hdltvout.dat");
}

sep_convolution_filter::~sep_convolution_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete line_buffer_V_0_U;
    delete line_buffer_V_1_U;
    delete line_buffer_V_2_U;
    delete line_buffer_V_3_U;
    delete line_buffer_V_4_U;
    delete line_buffer_V_5_U;
    delete sep_convolution_fhbi_U1;
    delete sep_convolution_fibs_U2;
    delete sep_convolution_fibs_U3;
    delete sep_convolution_fjbC_U4;
    delete sep_convolution_fibs_U5;
    delete sep_convolution_fkbM_U6;
    delete sep_convolution_flbW_U7;
    delete sep_convolution_fmb6_U8;
    delete sep_convolution_flbW_U9;
    delete sep_convolution_fmb6_U10;
    delete sep_convolution_flbW_U11;
    delete sep_convolution_fncg_U12;
}

void sep_convolution_filter::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter28 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter28 = ap_enable_reg_pp0_iter27.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter29 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter29 = ap_enable_reg_pp0_iter28.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter30 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter30 = ap_enable_reg_pp0_iter29.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter31 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter31 = ap_enable_reg_pp0_iter30.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter32 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter32 = ap_enable_reg_pp0_iter31.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter33 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter33 = ap_enable_reg_pp0_iter32.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter34 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter34 = ap_enable_reg_pp0_iter33.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter35 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter35 = ap_enable_reg_pp0_iter34.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter36 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter36 = ap_enable_reg_pp0_iter35.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter37 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter37 = ap_enable_reg_pp0_iter36.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter37 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()))) {
        col_reg_370 = col_1_fu_634_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        col_reg_370 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()))) {
        i_1_fu_166 = tmp_2_i_1_fu_556_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_1_fu_166 = ap_const_lv32_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_img_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_vld_out.read()))) {
            in_img_V_0_sel_rd =  (sc_logic) (~in_img_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_img_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_ack_in.read()))) {
            in_img_V_0_sel_wr =  (sc_logic) (~in_img_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_img_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_2)))) {
            in_img_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_1)))) {
            in_img_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_img_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_ack_out.read()))))) {
            in_img_V_0_state = ap_const_lv2_3;
        } else {
            in_img_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()))) {
        indvar_flatten_reg_326 = indvar_flatten_next_fu_415_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_326 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()))) {
        iteration_1_reg_359 = tmp_20_fu_628_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        iteration_1_reg_359 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()))) {
        iteration_reg_337 = iteration_mid2_fu_495_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        iteration_reg_337 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()))) {
        j_1_fu_170 = tmp_14_fu_588_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_1_fu_170 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334.read()) && 
         esl_seteq<1,3,3>(tmp_21_reg_1356.read(), ap_const_lv3_0))) {
        kernel_h_V_0_loc_1_fu_162 = kernel_config_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        kernel_h_V_0_loc_1_fu_162 = kernel_h_V_0.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_1489.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_13_reg_1360_pp0_iter1_reg.read()))) {
            kernel_v_V_0 = kernel_h_V_0_loc_1_fu_162.read();
        } else if (esl_seteq<1,1,1>(ap_condition_1491.read(), ap_const_boolean_1)) {
            kernel_v_V_0 = reg_386.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_img_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_vld_out.read()))) {
            out_img_V_1_sel_rd =  (sc_logic) (~out_img_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_img_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_ack_in.read()))) {
            out_img_V_1_sel_wr =  (sc_logic) (~out_img_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_img_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_img_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_img_V_1_state.read())))) {
            out_img_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_img_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_img_V_1_state.read())))) {
            out_img_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_img_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_img_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_img_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_ack_out.read()))))) {
            out_img_V_1_state = ap_const_lv2_3;
        } else {
            out_img_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()))) {
        row_reg_348 = row_mid2_fu_503_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_reg_348 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()))) {
        col_mid2_reg_1306 = col_mid2_fu_441_p3.read();
        or_cond1_reg_1372 = or_cond1_fu_622_p2.read();
        or_cond_reg_1368 = or_cond_fu_610_p2.read();
        tmp_15_reg_1364 = tmp_15_fu_604_p2.read();
        tmp_9_reg_1322 = tmp_9_fu_511_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        col_mid2_reg_1306_pp0_iter1_reg = col_mid2_reg_1306.read();
        or_cond1_reg_1372_pp0_iter1_reg = or_cond1_reg_1372.read();
        or_cond_reg_1368_pp0_iter1_reg = or_cond_reg_1368.read();
        tmp_11_reg_1338_pp0_iter1_reg = tmp_11_reg_1338.read();
        tmp_13_reg_1360_pp0_iter1_reg = tmp_13_reg_1360.read();
        tmp_15_reg_1364_pp0_iter1_reg = tmp_15_reg_1364.read();
        tmp_21_reg_1356_pp0_iter1_reg = tmp_21_reg_1356.read();
        tmp_22_reg_1347_pp0_iter1_reg = tmp_22_reg_1347.read();
        tmp_3_reg_1334_pp0_iter1_reg = tmp_3_reg_1334.read();
        tmp_9_reg_1322_pp0_iter1_reg = tmp_9_reg_1322.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        convolution_buffer_V_1 = convolution_buffer_V_2.read();
        convolution_buffer_V_2 = convolution_buffer_V_3.read();
        convolution_buffer_V_3 = convolution_buffer_V_4.read();
        convolution_buffer_V_4 = convolution_buffer_V_5.read();
        convolution_buffer_V_5 = convolution_buffer_V_6.read();
        convolution_buffer_V_6 = temp_v_V_6_fu_979_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_load_A.read())) {
        in_img_V_0_payload_A = in_img_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_load_B.read())) {
        in_img_V_0_payload_B = in_img_V_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_temp_V_reg_1421 = in_img_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334.read()) && esl_seteq<1,3,3>(tmp_21_reg_1356.read(), ap_const_lv3_0))) {
        kernel_h_V_0 = kernel_config_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter1_reg.read()))) {
        kernel_h_V_0_loc_1_l_1_reg_1427 = kernel_h_V_0_loc_1_fu_162.read();
        kernel_off_V_load_reg_1437 = kernel_off_V.read();
        kernel_sum_V_load_reg_1432 = kernel_sum_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_1))) {
        kernel_h_V_1 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_2))) {
        kernel_h_V_2 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_3))) {
        kernel_h_V_3 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_4))) {
        kernel_h_V_4 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_5))) {
        kernel_h_V_5 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && 
   esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_6)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334_pp0_iter1_reg.read()) && 
   esl_seteq<1,3,3>(tmp_21_reg_1356_pp0_iter1_reg.read(), ap_const_lv3_7))))) {
        kernel_h_V_6 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_1322.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_1326.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_1330.read()))) {
        kernel_off_V = kernel_config_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        kernel_off_V_load_reg_1437_pp0_iter10_reg = kernel_off_V_load_reg_1437_pp0_iter9_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter11_reg = kernel_off_V_load_reg_1437_pp0_iter10_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter12_reg = kernel_off_V_load_reg_1437_pp0_iter11_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter13_reg = kernel_off_V_load_reg_1437_pp0_iter12_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter14_reg = kernel_off_V_load_reg_1437_pp0_iter13_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter15_reg = kernel_off_V_load_reg_1437_pp0_iter14_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter16_reg = kernel_off_V_load_reg_1437_pp0_iter15_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter17_reg = kernel_off_V_load_reg_1437_pp0_iter16_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter18_reg = kernel_off_V_load_reg_1437_pp0_iter17_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter19_reg = kernel_off_V_load_reg_1437_pp0_iter18_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter20_reg = kernel_off_V_load_reg_1437_pp0_iter19_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter21_reg = kernel_off_V_load_reg_1437_pp0_iter20_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter22_reg = kernel_off_V_load_reg_1437_pp0_iter21_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter23_reg = kernel_off_V_load_reg_1437_pp0_iter22_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter24_reg = kernel_off_V_load_reg_1437_pp0_iter23_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter25_reg = kernel_off_V_load_reg_1437_pp0_iter24_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter26_reg = kernel_off_V_load_reg_1437_pp0_iter25_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter27_reg = kernel_off_V_load_reg_1437_pp0_iter26_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter28_reg = kernel_off_V_load_reg_1437_pp0_iter27_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter29_reg = kernel_off_V_load_reg_1437_pp0_iter28_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter30_reg = kernel_off_V_load_reg_1437_pp0_iter29_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter31_reg = kernel_off_V_load_reg_1437_pp0_iter30_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter32_reg = kernel_off_V_load_reg_1437_pp0_iter31_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter33_reg = kernel_off_V_load_reg_1437_pp0_iter32_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter34_reg = kernel_off_V_load_reg_1437_pp0_iter33_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter35_reg = kernel_off_V_load_reg_1437_pp0_iter34_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter3_reg = kernel_off_V_load_reg_1437.read();
        kernel_off_V_load_reg_1437_pp0_iter4_reg = kernel_off_V_load_reg_1437_pp0_iter3_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter5_reg = kernel_off_V_load_reg_1437_pp0_iter4_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter6_reg = kernel_off_V_load_reg_1437_pp0_iter5_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter7_reg = kernel_off_V_load_reg_1437_pp0_iter6_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter8_reg = kernel_off_V_load_reg_1437_pp0_iter7_reg.read();
        kernel_off_V_load_reg_1437_pp0_iter9_reg = kernel_off_V_load_reg_1437_pp0_iter8_reg.read();
        or_cond1_reg_1372_pp0_iter10_reg = or_cond1_reg_1372_pp0_iter9_reg.read();
        or_cond1_reg_1372_pp0_iter11_reg = or_cond1_reg_1372_pp0_iter10_reg.read();
        or_cond1_reg_1372_pp0_iter12_reg = or_cond1_reg_1372_pp0_iter11_reg.read();
        or_cond1_reg_1372_pp0_iter13_reg = or_cond1_reg_1372_pp0_iter12_reg.read();
        or_cond1_reg_1372_pp0_iter14_reg = or_cond1_reg_1372_pp0_iter13_reg.read();
        or_cond1_reg_1372_pp0_iter15_reg = or_cond1_reg_1372_pp0_iter14_reg.read();
        or_cond1_reg_1372_pp0_iter16_reg = or_cond1_reg_1372_pp0_iter15_reg.read();
        or_cond1_reg_1372_pp0_iter17_reg = or_cond1_reg_1372_pp0_iter16_reg.read();
        or_cond1_reg_1372_pp0_iter18_reg = or_cond1_reg_1372_pp0_iter17_reg.read();
        or_cond1_reg_1372_pp0_iter19_reg = or_cond1_reg_1372_pp0_iter18_reg.read();
        or_cond1_reg_1372_pp0_iter20_reg = or_cond1_reg_1372_pp0_iter19_reg.read();
        or_cond1_reg_1372_pp0_iter21_reg = or_cond1_reg_1372_pp0_iter20_reg.read();
        or_cond1_reg_1372_pp0_iter22_reg = or_cond1_reg_1372_pp0_iter21_reg.read();
        or_cond1_reg_1372_pp0_iter23_reg = or_cond1_reg_1372_pp0_iter22_reg.read();
        or_cond1_reg_1372_pp0_iter24_reg = or_cond1_reg_1372_pp0_iter23_reg.read();
        or_cond1_reg_1372_pp0_iter25_reg = or_cond1_reg_1372_pp0_iter24_reg.read();
        or_cond1_reg_1372_pp0_iter26_reg = or_cond1_reg_1372_pp0_iter25_reg.read();
        or_cond1_reg_1372_pp0_iter27_reg = or_cond1_reg_1372_pp0_iter26_reg.read();
        or_cond1_reg_1372_pp0_iter28_reg = or_cond1_reg_1372_pp0_iter27_reg.read();
        or_cond1_reg_1372_pp0_iter29_reg = or_cond1_reg_1372_pp0_iter28_reg.read();
        or_cond1_reg_1372_pp0_iter2_reg = or_cond1_reg_1372_pp0_iter1_reg.read();
        or_cond1_reg_1372_pp0_iter30_reg = or_cond1_reg_1372_pp0_iter29_reg.read();
        or_cond1_reg_1372_pp0_iter31_reg = or_cond1_reg_1372_pp0_iter30_reg.read();
        or_cond1_reg_1372_pp0_iter32_reg = or_cond1_reg_1372_pp0_iter31_reg.read();
        or_cond1_reg_1372_pp0_iter33_reg = or_cond1_reg_1372_pp0_iter32_reg.read();
        or_cond1_reg_1372_pp0_iter34_reg = or_cond1_reg_1372_pp0_iter33_reg.read();
        or_cond1_reg_1372_pp0_iter35_reg = or_cond1_reg_1372_pp0_iter34_reg.read();
        or_cond1_reg_1372_pp0_iter36_reg = or_cond1_reg_1372_pp0_iter35_reg.read();
        or_cond1_reg_1372_pp0_iter3_reg = or_cond1_reg_1372_pp0_iter2_reg.read();
        or_cond1_reg_1372_pp0_iter4_reg = or_cond1_reg_1372_pp0_iter3_reg.read();
        or_cond1_reg_1372_pp0_iter5_reg = or_cond1_reg_1372_pp0_iter4_reg.read();
        or_cond1_reg_1372_pp0_iter6_reg = or_cond1_reg_1372_pp0_iter5_reg.read();
        or_cond1_reg_1372_pp0_iter7_reg = or_cond1_reg_1372_pp0_iter6_reg.read();
        or_cond1_reg_1372_pp0_iter8_reg = or_cond1_reg_1372_pp0_iter7_reg.read();
        or_cond1_reg_1372_pp0_iter9_reg = or_cond1_reg_1372_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_1322.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_1326.read()))) {
        kernel_sum_V = kernel_config_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_1))) {
        kernel_v_V_1 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_2))) {
        kernel_v_V_2 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_3))) {
        kernel_v_V_3 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_4))) {
        kernel_v_V_4 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_5))) {
        kernel_v_V_5 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && 
   esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_6)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && 
   esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_7))))) {
        kernel_v_V_6 = reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364.read()))) {
        line_buffer_V_0_addr_reg_1386 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
        line_buffer_V_1_addr_reg_1392 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
        line_buffer_V_2_addr_reg_1398 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
        line_buffer_V_3_addr_reg_1404 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
        line_buffer_V_4_addr_reg_1410 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_load_A.read())) {
        out_img_V_1_payload_A = r_V_9_fu_1168_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_load_B.read())) {
        out_img_V_1_payload_B = r_V_9_fu_1168_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1334.read())))) {
        reg_386 = kernel_config_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_564_p2.read()))) {
        tmp_11_reg_1338 = grp_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_564_p2.read()))) {
        tmp_13_reg_1360 = grp_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_564_p2.read()))) {
        tmp_21_reg_1356 = tmp_21_fu_584_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_564_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_381_p2.read()))) {
        tmp_22_reg_1347 = tmp_22_fu_575_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()))) {
        tmp_3_reg_1334 = tmp_3_fu_564_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_517_p2.read()))) {
        tmp_4_reg_1330 = tmp_4_fu_523_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_511_p2.read()))) {
        tmp_8_reg_1326 = tmp_8_fu_517_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364_pp0_iter1_reg.read()))) {
        window_V_0 = line_buffer_V_0_q0.read();
        window_V_1 = line_buffer_V_1_q0.read();
        window_V_2 = line_buffer_V_2_q0.read();
        window_V_3 = line_buffer_V_3_q0.read();
        window_V_4 = line_buffer_V_4_q0.read();
        window_V_5 = line_buffer_V_5_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368_pp0_iter1_reg.read()))) {
        window_V_6 = in_temp_V_reg_1421.read();
    }
}

void sep_convolution_filter::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void sep_convolution_filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sep_convolution_filter::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[2];
}

void sep_convolution_filter::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_out.read()));
}

void sep_convolution_filter::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter36.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state38_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter37.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state39_io.read())));
}

void sep_convolution_filter::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter36.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state38_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter37.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state39_io.read())));
}

void sep_convolution_filter::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state24_pp0_stage0_iter22() {
    ap_block_state24_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state25_pp0_stage0_iter23() {
    ap_block_state25_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state26_pp0_stage0_iter24() {
    ap_block_state26_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state27_pp0_stage0_iter25() {
    ap_block_state27_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state28_pp0_stage0_iter26() {
    ap_block_state28_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state29_pp0_stage0_iter27() {
    ap_block_state29_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state30_pp0_stage0_iter28() {
    ap_block_state30_pp0_stage0_iter28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state31_pp0_stage0_iter29() {
    ap_block_state31_pp0_stage0_iter29 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state32_pp0_stage0_iter30() {
    ap_block_state32_pp0_stage0_iter30 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state33_pp0_stage0_iter31() {
    ap_block_state33_pp0_stage0_iter31 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state34_pp0_stage0_iter32() {
    ap_block_state34_pp0_stage0_iter32 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state35_pp0_stage0_iter33() {
    ap_block_state35_pp0_stage0_iter33 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state36_pp0_stage0_iter34() {
    ap_block_state36_pp0_stage0_iter34 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state37_pp0_stage0_iter35() {
    ap_block_state37_pp0_stage0_iter35 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state38_io() {
    ap_block_state38_io = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter35_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_ack_in.read()));
}

void sep_convolution_filter::thread_ap_block_state38_pp0_stage0_iter36() {
    ap_block_state38_pp0_stage0_iter36 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state39_io() {
    ap_block_state39_io = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter36_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_img_V_1_ack_in.read()));
}

void sep_convolution_filter::thread_ap_block_state39_pp0_stage0_iter37() {
    ap_block_state39_pp0_stage0_iter37 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_img_V_0_vld_out.read()));
}

void sep_convolution_filter::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sep_convolution_filter::thread_ap_condition_1476() {
    ap_condition_1476 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()));
}

void sep_convolution_filter::thread_ap_condition_1478() {
    ap_condition_1478 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_517_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_523_p2.read()));
}

void sep_convolution_filter::thread_ap_condition_1483() {
    ap_condition_1483 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_564_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_381_p2.read()));
}

void sep_convolution_filter::thread_ap_condition_1489() {
    ap_condition_1489 = (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_1322_pp0_iter1_reg.read()));
}

void sep_convolution_filter::thread_ap_condition_1491() {
    ap_condition_1491 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1334_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_reg_1338_pp0_iter1_reg.read()) && esl_seteq<1,3,3>(tmp_22_reg_1347_pp0_iter1_reg.read(), ap_const_lv3_0));
}

void sep_convolution_filter::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_409_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(out_img_V_1_ack_in.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void sep_convolution_filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter33.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter34.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter35.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter36.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter37.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
         esl_seteq<1,1,1>(out_img_V_1_ack_in.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void sep_convolution_filter::thread_col_1_fu_634_p2() {
    col_1_fu_634_p2 = (!col_mid2_fu_441_p3.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(col_mid2_fu_441_p3.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sep_convolution_filter::thread_col_mid2_fu_441_p3() {
    col_mid2_fu_441_p3 = (!exitcond_fu_427_p2.read()[0].is_01())? sc_lv<10>(): ((exitcond_fu_427_p2.read()[0].to_bool())? ap_const_lv10_0: col_reg_370.read());
}

void sep_convolution_filter::thread_exitcond_flatten_fu_409_p2() {
    exitcond_flatten_fu_409_p2 = (!indvar_flatten_reg_326.read().is_01() || !ap_const_lv19_4BD29.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_326.read() == ap_const_lv19_4BD29);
}

void sep_convolution_filter::thread_exitcond_fu_427_p2() {
    exitcond_fu_427_p2 = (!col_reg_370.read().is_01() || !ap_const_lv10_283.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_370.read() == ap_const_lv10_283);
}

void sep_convolution_filter::thread_grp_fu_1158_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_1158_ce = ap_const_logic_1;
    } else {
        grp_fu_1158_ce = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_grp_fu_1158_p0() {
    grp_fu_1158_p0 = esl_sext<30,29>(temp_h_V_fu_1139_p2.read());
}

void sep_convolution_filter::thread_grp_fu_1174_p1() {
    grp_fu_1174_p1 =  (sc_lv<8>) (grp_fu_1174_p10.read());
}

void sep_convolution_filter::thread_grp_fu_1174_p10() {
    grp_fu_1174_p10 = esl_zext<16,8>(window_V_2.read());
}

void sep_convolution_filter::thread_grp_fu_1183_p1() {
    grp_fu_1183_p1 =  (sc_lv<8>) (grp_fu_1183_p10.read());
}

void sep_convolution_filter::thread_grp_fu_1183_p10() {
    grp_fu_1183_p10 = esl_zext<16,8>(window_V_3.read());
}

void sep_convolution_filter::thread_grp_fu_1192_p1() {
    grp_fu_1192_p1 =  (sc_lv<8>) (grp_fu_1192_p10.read());
}

void sep_convolution_filter::thread_grp_fu_1192_p10() {
    grp_fu_1192_p10 = esl_zext<16,8>(window_V_4.read());
}

void sep_convolution_filter::thread_grp_fu_1201_p1() {
    grp_fu_1201_p1 =  (sc_lv<8>) (grp_fu_1201_p10.read());
}

void sep_convolution_filter::thread_grp_fu_1201_p10() {
    grp_fu_1201_p10 = esl_zext<16,8>(window_V_6.read());
}

void sep_convolution_filter::thread_grp_fu_381_p2() {
    grp_fu_381_p2 = (!p_j_1_fu_547_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(p_j_1_fu_547_p3.read() == ap_const_lv32_0);
}

void sep_convolution_filter::thread_in_img_V_0_ack_in() {
    in_img_V_0_ack_in = in_img_V_0_state.read()[1];
}

void sep_convolution_filter::thread_in_img_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_img_V_0_ack_out = ap_const_logic_1;
    } else {
        in_img_V_0_ack_out = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_in_img_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_img_V_0_sel.read())) {
        in_img_V_0_data_out = in_img_V_0_payload_B.read();
    } else {
        in_img_V_0_data_out = in_img_V_0_payload_A.read();
    }
}

void sep_convolution_filter::thread_in_img_V_0_load_A() {
    in_img_V_0_load_A = (in_img_V_0_state_cmp_full.read() & ~in_img_V_0_sel_wr.read());
}

void sep_convolution_filter::thread_in_img_V_0_load_B() {
    in_img_V_0_load_B = (in_img_V_0_sel_wr.read() & in_img_V_0_state_cmp_full.read());
}

void sep_convolution_filter::thread_in_img_V_0_sel() {
    in_img_V_0_sel = in_img_V_0_sel_rd.read();
}

void sep_convolution_filter::thread_in_img_V_0_state_cmp_full() {
    in_img_V_0_state_cmp_full =  (sc_logic) ((!in_img_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_img_V_0_state.read() != ap_const_lv2_1))[0];
}

void sep_convolution_filter::thread_in_img_V_0_vld_in() {
    in_img_V_0_vld_in = in_img_V_TVALID.read();
}

void sep_convolution_filter::thread_in_img_V_0_vld_out() {
    in_img_V_0_vld_out = in_img_V_0_state.read()[0];
}

void sep_convolution_filter::thread_in_img_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368.read()))) {
        in_img_V_TDATA_blk_n = in_img_V_0_state.read()[0];
    } else {
        in_img_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void sep_convolution_filter::thread_in_img_V_TREADY() {
    in_img_V_TREADY = in_img_V_0_state.read()[1];
}

void sep_convolution_filter::thread_indvar_flatten_next_fu_415_p2() {
    indvar_flatten_next_fu_415_p2 = (!indvar_flatten_reg_326.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten_reg_326.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void sep_convolution_filter::thread_iteration_1_mid2_fu_433_p3() {
    iteration_1_mid2_fu_433_p3 = (!exitcond_fu_427_p2.read()[0].is_01())? sc_lv<19>(): ((exitcond_fu_427_p2.read()[0].to_bool())? tmp_5_fu_421_p2.read(): iteration_1_reg_359.read());
}

void sep_convolution_filter::thread_iteration_mid2_fu_495_p3() {
    iteration_mid2_fu_495_p3 = (!exitcond_fu_427_p2.read()[0].is_01())? sc_lv<19>(): ((exitcond_fu_427_p2.read()[0].to_bool())? tmp_5_fu_421_p2.read(): iteration_reg_337.read());
}

void sep_convolution_filter::thread_kernel_config_V_address0() {
    if (esl_seteq<1,1,1>(ap_condition_1476.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_564_p2.read()))) {
            kernel_config_V_address0 =  (sc_lv<6>) (tmp_10_fu_579_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_1483.read(), ap_const_boolean_1)) {
            kernel_config_V_address0 =  (sc_lv<6>) (tmp_12_fu_570_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_511_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_517_p2.read()))) {
            kernel_config_V_address0 =  (sc_lv<6>) (ap_const_lv64_31);
        } else if (esl_seteq<1,1,1>(ap_condition_1478.read(), ap_const_boolean_1)) {
            kernel_config_V_address0 =  (sc_lv<6>) (ap_const_lv64_32);
        } else {
            kernel_config_V_address0 = "XXXXXX";
        }
    } else {
        kernel_config_V_address0 = "XXXXXX";
    }
}

void sep_convolution_filter::thread_kernel_config_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_564_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_511_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_517_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_523_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_511_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_517_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_409_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_511_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_564_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_381_p2.read())))) {
        kernel_config_V_ce0 = ap_const_logic_1;
    } else {
        kernel_config_V_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_0_address0() {
    line_buffer_V_0_address0 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_V_0_ce0 = ap_const_logic_1;
    } else {
        line_buffer_V_0_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        line_buffer_V_0_ce1 = ap_const_logic_1;
    } else {
        line_buffer_V_0_ce1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_0_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364_pp0_iter1_reg.read()))) {
        line_buffer_V_0_we1 = ap_const_logic_1;
    } else {
        line_buffer_V_0_we1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_1_address0() {
    line_buffer_V_1_address0 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_V_1_ce0 = ap_const_logic_1;
    } else {
        line_buffer_V_1_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        line_buffer_V_1_ce1 = ap_const_logic_1;
    } else {
        line_buffer_V_1_ce1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_1_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364_pp0_iter1_reg.read()))) {
        line_buffer_V_1_we1 = ap_const_logic_1;
    } else {
        line_buffer_V_1_we1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_2_address0() {
    line_buffer_V_2_address0 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_V_2_ce0 = ap_const_logic_1;
    } else {
        line_buffer_V_2_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        line_buffer_V_2_ce1 = ap_const_logic_1;
    } else {
        line_buffer_V_2_ce1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_2_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364_pp0_iter1_reg.read()))) {
        line_buffer_V_2_we1 = ap_const_logic_1;
    } else {
        line_buffer_V_2_we1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_3_address0() {
    line_buffer_V_3_address0 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_V_3_ce0 = ap_const_logic_1;
    } else {
        line_buffer_V_3_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        line_buffer_V_3_ce1 = ap_const_logic_1;
    } else {
        line_buffer_V_3_ce1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_3_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364_pp0_iter1_reg.read()))) {
        line_buffer_V_3_we1 = ap_const_logic_1;
    } else {
        line_buffer_V_3_we1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_4_address0() {
    line_buffer_V_4_address0 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_V_4_ce0 = ap_const_logic_1;
    } else {
        line_buffer_V_4_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_4_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        line_buffer_V_4_ce1 = ap_const_logic_1;
    } else {
        line_buffer_V_4_ce1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_4_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_reg_1364_pp0_iter1_reg.read()))) {
        line_buffer_V_4_we1 = ap_const_logic_1;
    } else {
        line_buffer_V_4_we1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_5_address0() {
    line_buffer_V_5_address0 =  (sc_lv<10>) (tmp_16_fu_663_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_5_address1() {
    line_buffer_V_5_address1 =  (sc_lv<10>) (tmp_17_fu_800_p1.read());
}

void sep_convolution_filter::thread_line_buffer_V_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        line_buffer_V_5_ce0 = ap_const_logic_1;
    } else {
        line_buffer_V_5_ce0 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_5_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        line_buffer_V_5_ce1 = ap_const_logic_1;
    } else {
        line_buffer_V_5_ce1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_line_buffer_V_5_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_1368_pp0_iter1_reg.read()))) {
        line_buffer_V_5_we1 = ap_const_logic_1;
    } else {
        line_buffer_V_5_we1 = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_or_cond1_fu_622_p2() {
    or_cond1_fu_622_p2 = (tmp_7_mid2_fu_487_p3.read() & tmp_18_fu_616_p2.read());
}

void sep_convolution_filter::thread_or_cond_fu_610_p2() {
    or_cond_fu_610_p2 = (tmp_15_fu_604_p2.read() & tmp_5_mid2_fu_467_p3.read());
}

void sep_convolution_filter::thread_out_img_V_1_ack_in() {
    out_img_V_1_ack_in = out_img_V_1_state.read()[1];
}

void sep_convolution_filter::thread_out_img_V_1_ack_out() {
    out_img_V_1_ack_out = out_img_V_TREADY.read();
}

void sep_convolution_filter::thread_out_img_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_img_V_1_sel.read())) {
        out_img_V_1_data_out = out_img_V_1_payload_B.read();
    } else {
        out_img_V_1_data_out = out_img_V_1_payload_A.read();
    }
}

void sep_convolution_filter::thread_out_img_V_1_load_A() {
    out_img_V_1_load_A = (out_img_V_1_state_cmp_full.read() & ~out_img_V_1_sel_wr.read());
}

void sep_convolution_filter::thread_out_img_V_1_load_B() {
    out_img_V_1_load_B = (out_img_V_1_sel_wr.read() & out_img_V_1_state_cmp_full.read());
}

void sep_convolution_filter::thread_out_img_V_1_sel() {
    out_img_V_1_sel = out_img_V_1_sel_rd.read();
}

void sep_convolution_filter::thread_out_img_V_1_state_cmp_full() {
    out_img_V_1_state_cmp_full =  (sc_logic) ((!out_img_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_img_V_1_state.read() != ap_const_lv2_1))[0];
}

void sep_convolution_filter::thread_out_img_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter36.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter35_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_img_V_1_vld_in = ap_const_logic_1;
    } else {
        out_img_V_1_vld_in = ap_const_logic_0;
    }
}

void sep_convolution_filter::thread_out_img_V_1_vld_out() {
    out_img_V_1_vld_out = out_img_V_1_state.read()[0];
}

void sep_convolution_filter::thread_out_img_V_TDATA() {
    out_img_V_TDATA = out_img_V_1_data_out.read();
}

void sep_convolution_filter::thread_out_img_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter36.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter35_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter37.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_reg_1372_pp0_iter36_reg.read())))) {
        out_img_V_TDATA_blk_n = out_img_V_1_state.read()[1];
    } else {
        out_img_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void sep_convolution_filter::thread_out_img_V_TVALID() {
    out_img_V_TVALID = out_img_V_1_state.read()[0];
}

void sep_convolution_filter::thread_p_j_1_fu_547_p3() {
    p_j_1_fu_547_p3 = (!tmp_s_fu_535_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_535_p2.read()[0].to_bool())? ap_const_lv32_0: j_1_fu_170.read());
}

void sep_convolution_filter::thread_r_V_7_fu_931_p0() {
    r_V_7_fu_931_p0 = kernel_v_V_5.read();
}

void sep_convolution_filter::thread_r_V_7_fu_931_p1() {
    r_V_7_fu_931_p1 =  (sc_lv<8>) (r_V_7_fu_931_p10.read());
}

void sep_convolution_filter::thread_r_V_7_fu_931_p10() {
    r_V_7_fu_931_p10 = esl_zext<16,8>(window_V_5.read());
}

void sep_convolution_filter::thread_r_V_7_fu_931_p2() {
    r_V_7_fu_931_p2 = (!r_V_7_fu_931_p0.read().is_01() || !r_V_7_fu_931_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(r_V_7_fu_931_p0.read()) * sc_biguint<8>(r_V_7_fu_931_p1.read());
}

void sep_convolution_filter::thread_r_V_9_fu_1168_p2() {
    r_V_9_fu_1168_p2 = (!tmp_23_fu_1164_p1.read().is_01() || !kernel_off_V_load_reg_1437_pp0_iter35_reg.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_23_fu_1164_p1.read()) + sc_biguint<8>(kernel_off_V_load_reg_1437_pp0_iter35_reg.read()));
}

void sep_convolution_filter::thread_r_V_fu_831_p0() {
    r_V_fu_831_p0 = kernel_v_V_0.read();
}

void sep_convolution_filter::thread_r_V_fu_831_p1() {
    r_V_fu_831_p1 =  (sc_lv<8>) (r_V_fu_831_p10.read());
}

void sep_convolution_filter::thread_r_V_fu_831_p10() {
    r_V_fu_831_p10 = esl_zext<16,8>(window_V_0.read());
}

void sep_convolution_filter::thread_r_V_fu_831_p2() {
    r_V_fu_831_p2 = (!r_V_fu_831_p0.read().is_01() || !r_V_fu_831_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(r_V_fu_831_p0.read()) * sc_biguint<8>(r_V_fu_831_p1.read());
}

void sep_convolution_filter::thread_r_V_s_fu_857_p0() {
    r_V_s_fu_857_p0 = kernel_v_V_1.read();
}

void sep_convolution_filter::thread_r_V_s_fu_857_p1() {
    r_V_s_fu_857_p1 =  (sc_lv<8>) (r_V_s_fu_857_p10.read());
}

void sep_convolution_filter::thread_r_V_s_fu_857_p10() {
    r_V_s_fu_857_p10 = esl_zext<16,8>(window_V_1.read());
}

void sep_convolution_filter::thread_r_V_s_fu_857_p2() {
    r_V_s_fu_857_p2 = (!r_V_s_fu_857_p0.read().is_01() || !r_V_s_fu_857_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(r_V_s_fu_857_p0.read()) * sc_biguint<8>(r_V_s_fu_857_p1.read());
}

void sep_convolution_filter::thread_row_mid2_fu_503_p3() {
    row_mid2_fu_503_p3 = (!exitcond_fu_427_p2.read()[0].is_01())? sc_lv<9>(): ((exitcond_fu_427_p2.read()[0].to_bool())? row_s_fu_449_p2.read(): row_reg_348.read());
}

void sep_convolution_filter::thread_row_s_fu_449_p2() {
    row_s_fu_449_p2 = (!row_reg_348.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(row_reg_348.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void sep_convolution_filter::thread_temp_h_V_fu_1139_p2() {
    temp_h_V_fu_1139_p2 = (!tmp12_cast_fu_1135_p1.read().is_01() || !tmp10_cast_fu_1124_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(tmp12_cast_fu_1135_p1.read()) + sc_bigint<29>(tmp10_cast_fu_1124_p1.read()));
}

void sep_convolution_filter::thread_temp_v_V_6_fu_979_p2() {
    temp_v_V_6_fu_979_p2 = (!tmp7_cast_fu_975_p1.read().is_01() || !tmp5_cast_fu_960_p1.read().is_01())? sc_lv<19>(): (sc_bigint<19>(tmp7_cast_fu_975_p1.read()) + sc_bigint<19>(tmp5_cast_fu_960_p1.read()));
}

void sep_convolution_filter::thread_tmp10_cast_fu_1124_p1() {
    tmp10_cast_fu_1124_p1 = esl_sext<29,28>(grp_fu_1210_p3.read());
}

void sep_convolution_filter::thread_tmp12_cast_fu_1135_p1() {
    tmp12_cast_fu_1135_p1 = esl_sext<29,28>(tmp_fu_1130_p2.read());
}

void sep_convolution_filter::thread_tmp14_cast_fu_1127_p1() {
    tmp14_cast_fu_1127_p1 = esl_sext<28,27>(grp_fu_1256_p3.read());
}

void sep_convolution_filter::thread_tmp5_cast_fu_960_p1() {
    tmp5_cast_fu_960_p1 = esl_sext<19,18>(grp_fu_1192_p3.read());
}

void sep_convolution_filter::thread_tmp7_cast_fu_975_p1() {
    tmp7_cast_fu_975_p1 = esl_sext<19,18>(tmp7_fu_969_p2.read());
}

void sep_convolution_filter::thread_tmp7_fu_969_p2() {
    tmp7_fu_969_p2 = (!tmp9_cast_fu_966_p1.read().is_01() || !tmp8_cast_fu_963_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp9_cast_fu_966_p1.read()) + sc_bigint<18>(tmp8_cast_fu_963_p1.read()));
}

void sep_convolution_filter::thread_tmp8_cast_fu_963_p1() {
    tmp8_cast_fu_963_p1 = esl_sext<18,17>(grp_fu_1174_p3.read());
}

void sep_convolution_filter::thread_tmp9_cast_fu_966_p1() {
    tmp9_cast_fu_966_p1 = esl_sext<18,17>(grp_fu_1201_p3.read());
}

void sep_convolution_filter::thread_tmp_10_fu_579_p1() {
    tmp_10_fu_579_p1 = esl_zext<64,19>(iteration_1_mid2_fu_433_p3.read());
}

void sep_convolution_filter::thread_tmp_12_fu_570_p1() {
    tmp_12_fu_570_p1 = esl_zext<64,19>(iteration_1_mid2_fu_433_p3.read());
}

void sep_convolution_filter::thread_tmp_14_fu_588_p2() {
    tmp_14_fu_588_p2 = (!p_j_1_fu_547_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(p_j_1_fu_547_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sep_convolution_filter::thread_tmp_15_fu_604_p2() {
    tmp_15_fu_604_p2 = (!col_mid2_fu_441_p3.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): (sc_biguint<10>(col_mid2_fu_441_p3.read()) < sc_biguint<10>(ap_const_lv10_280));
}

void sep_convolution_filter::thread_tmp_16_fu_663_p1() {
    tmp_16_fu_663_p1 = esl_zext<64,10>(col_mid2_reg_1306.read());
}

void sep_convolution_filter::thread_tmp_17_fu_800_p1() {
    tmp_17_fu_800_p1 = esl_zext<64,10>(col_mid2_reg_1306_pp0_iter1_reg.read());
}

void sep_convolution_filter::thread_tmp_18_fu_616_p2() {
    tmp_18_fu_616_p2 = (!col_mid2_fu_441_p3.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<1>(): (sc_biguint<10>(col_mid2_fu_441_p3.read()) > sc_biguint<10>(ap_const_lv10_2));
}

void sep_convolution_filter::thread_tmp_20_fu_628_p2() {
    tmp_20_fu_628_p2 = (!iteration_1_mid2_fu_433_p3.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(iteration_1_mid2_fu_433_p3.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void sep_convolution_filter::thread_tmp_21_fu_584_p1() {
    tmp_21_fu_584_p1 = p_j_1_fu_547_p3.read().range(3-1, 0);
}

void sep_convolution_filter::thread_tmp_22_fu_575_p1() {
    tmp_22_fu_575_p1 = tmp_2_i_1_fu_556_p3.read().range(3-1, 0);
}

void sep_convolution_filter::thread_tmp_23_fu_1164_p1() {
    tmp_23_fu_1164_p1 = grp_fu_1158_p2.read().range(8-1, 0);
}

void sep_convolution_filter::thread_tmp_2_fu_541_p2() {
    tmp_2_fu_541_p2 = (!i_1_fu_166.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_fu_166.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sep_convolution_filter::thread_tmp_2_i_1_fu_556_p3() {
    tmp_2_i_1_fu_556_p3 = (!tmp_s_fu_535_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_535_p2.read()[0].to_bool())? tmp_2_fu_541_p2.read(): i_1_fu_166.read());
}

void sep_convolution_filter::thread_tmp_3_fu_564_p2() {
    tmp_3_fu_564_p2 = (!tmp_2_i_1_fu_556_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_i_1_fu_556_p3.read() == ap_const_lv32_0);
}

void sep_convolution_filter::thread_tmp_4_fu_523_p2() {
    tmp_4_fu_523_p2 = (!iteration_1_mid2_fu_433_p3.read().is_01() || !ap_const_lv19_32.is_01())? sc_lv<1>(): sc_lv<1>(iteration_1_mid2_fu_433_p3.read() == ap_const_lv19_32);
}

void sep_convolution_filter::thread_tmp_5_fu_421_p2() {
    tmp_5_fu_421_p2 = (!iteration_reg_337.read().is_01() || !ap_const_lv19_283.is_01())? sc_lv<19>(): (sc_biguint<19>(iteration_reg_337.read()) + sc_biguint<19>(ap_const_lv19_283));
}

void sep_convolution_filter::thread_tmp_5_mid1_fu_455_p2() {
    tmp_5_mid1_fu_455_p2 = (!row_s_fu_449_p2.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): (sc_biguint<9>(row_s_fu_449_p2.read()) < sc_biguint<9>(ap_const_lv9_1E0));
}

void sep_convolution_filter::thread_tmp_5_mid2_fu_467_p3() {
    tmp_5_mid2_fu_467_p3 = (!exitcond_fu_427_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_427_p2.read()[0].to_bool())? tmp_5_mid1_fu_455_p2.read(): tmp_6_fu_461_p2.read());
}

void sep_convolution_filter::thread_tmp_6_fu_461_p2() {
    tmp_6_fu_461_p2 = (!row_reg_348.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): (sc_biguint<9>(row_reg_348.read()) < sc_biguint<9>(ap_const_lv9_1E0));
}

void sep_convolution_filter::thread_tmp_7_fu_481_p2() {
    tmp_7_fu_481_p2 = (!row_reg_348.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<1>(): (sc_biguint<9>(row_reg_348.read()) > sc_biguint<9>(ap_const_lv9_2));
}

void sep_convolution_filter::thread_tmp_7_mid1_fu_475_p2() {
    tmp_7_mid1_fu_475_p2 = (!row_s_fu_449_p2.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<1>(): (sc_biguint<9>(row_s_fu_449_p2.read()) > sc_biguint<9>(ap_const_lv9_2));
}

void sep_convolution_filter::thread_tmp_7_mid2_fu_487_p3() {
    tmp_7_mid2_fu_487_p3 = (!exitcond_fu_427_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_427_p2.read()[0].to_bool())? tmp_7_mid1_fu_475_p2.read(): tmp_7_fu_481_p2.read());
}

void sep_convolution_filter::thread_tmp_8_fu_517_p2() {
    tmp_8_fu_517_p2 = (!iteration_1_mid2_fu_433_p3.read().is_01() || !ap_const_lv19_31.is_01())? sc_lv<1>(): sc_lv<1>(iteration_1_mid2_fu_433_p3.read() == ap_const_lv19_31);
}

void sep_convolution_filter::thread_tmp_9_fu_511_p2() {
    tmp_9_fu_511_p2 = (!iteration_1_mid2_fu_433_p3.read().is_01() || !ap_const_lv19_31.is_01())? sc_lv<1>(): (sc_biguint<19>(iteration_1_mid2_fu_433_p3.read()) < sc_biguint<19>(ap_const_lv19_31));
}

void sep_convolution_filter::thread_tmp_fu_1130_p2() {
    tmp_fu_1130_p2 = (!tmp14_cast_fu_1127_p1.read().is_01() || !grp_fu_1241_p3.read().is_01())? sc_lv<28>(): (sc_bigint<28>(tmp14_cast_fu_1127_p1.read()) + sc_bigint<28>(grp_fu_1241_p3.read()));
}

void sep_convolution_filter::thread_tmp_s_fu_535_p2() {
    tmp_s_fu_535_p2 = (!j_1_fu_170.read().is_01() || !ap_const_lv32_6.is_01())? sc_lv<1>(): (sc_bigint<32>(j_1_fu_170.read()) > sc_bigint<32>(ap_const_lv32_6));
}

void sep_convolution_filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_409_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) && !(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter36.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter37.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter36.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter37.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_409_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(out_img_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

void sep_convolution_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_config_V_address0\" :  \"" << kernel_config_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_config_V_ce0\" :  \"" << kernel_config_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_config_V_q0\" :  \"" << kernel_config_V_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_img_V_TDATA\" :  \"" << in_img_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_img_V_TVALID\" :  \"" << in_img_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_img_V_TREADY\" :  \"" << in_img_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_img_V_TDATA\" :  \"" << out_img_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_img_V_TVALID\" :  \"" << out_img_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_img_V_TREADY\" :  \"" << out_img_V_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

