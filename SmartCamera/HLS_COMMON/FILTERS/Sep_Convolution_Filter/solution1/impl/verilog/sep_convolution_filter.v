// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sep_convolution_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=41.666668,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.485625,HLS_SYN_LAT=310607,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=11,HLS_SYN_FF=2869,HLS_SYN_LUT=2748}" *)

module sep_convolution_filter (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        kernel_config_V_address0,
        kernel_config_V_ce0,
        kernel_config_V_q0,
        in_img_V_TDATA,
        in_img_V_TVALID,
        in_img_V_TREADY,
        out_img_V_TDATA,
        out_img_V_TVALID,
        out_img_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state40 = 3'd4;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] kernel_config_V_address0;
output   kernel_config_V_ce0;
input  [7:0] kernel_config_V_q0;
input  [7:0] in_img_V_TDATA;
input   in_img_V_TVALID;
output   in_img_V_TREADY;
output  [7:0] out_img_V_TDATA;
output   out_img_V_TVALID;
input   out_img_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] kernel_config_V_address0;
reg kernel_config_V_ce0;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] in_img_V_0_data_out;
wire    in_img_V_0_vld_in;
wire    in_img_V_0_vld_out;
wire    in_img_V_0_ack_in;
reg    in_img_V_0_ack_out;
reg   [7:0] in_img_V_0_payload_A;
reg   [7:0] in_img_V_0_payload_B;
reg    in_img_V_0_sel_rd;
reg    in_img_V_0_sel_wr;
wire    in_img_V_0_sel;
wire    in_img_V_0_load_A;
wire    in_img_V_0_load_B;
reg   [1:0] in_img_V_0_state;
wire    in_img_V_0_state_cmp_full;
reg   [7:0] out_img_V_1_data_out;
reg    out_img_V_1_vld_in;
wire    out_img_V_1_vld_out;
wire    out_img_V_1_ack_in;
wire    out_img_V_1_ack_out;
reg   [7:0] out_img_V_1_payload_A;
reg   [7:0] out_img_V_1_payload_B;
reg    out_img_V_1_sel_rd;
reg    out_img_V_1_sel_wr;
wire    out_img_V_1_sel;
wire    out_img_V_1_load_A;
wire    out_img_V_1_load_B;
reg   [1:0] out_img_V_1_state;
wire    out_img_V_1_state_cmp_full;
reg   [7:0] kernel_h_V_0;
reg   [7:0] kernel_v_V_0;
reg   [7:0] kernel_sum_V;
reg   [7:0] kernel_off_V;
wire   [9:0] line_buffer_V_0_address0;
reg    line_buffer_V_0_ce0;
wire   [7:0] line_buffer_V_0_q0;
reg    line_buffer_V_0_ce1;
reg    line_buffer_V_0_we1;
reg   [7:0] window_V_0;
wire   [9:0] line_buffer_V_1_address0;
reg    line_buffer_V_1_ce0;
wire   [7:0] line_buffer_V_1_q0;
reg    line_buffer_V_1_ce1;
reg    line_buffer_V_1_we1;
reg   [7:0] window_V_1;
wire   [9:0] line_buffer_V_2_address0;
reg    line_buffer_V_2_ce0;
wire   [7:0] line_buffer_V_2_q0;
reg    line_buffer_V_2_ce1;
reg    line_buffer_V_2_we1;
reg   [7:0] window_V_2;
wire   [9:0] line_buffer_V_3_address0;
reg    line_buffer_V_3_ce0;
wire   [7:0] line_buffer_V_3_q0;
reg    line_buffer_V_3_ce1;
reg    line_buffer_V_3_we1;
reg   [7:0] window_V_3;
wire   [9:0] line_buffer_V_4_address0;
reg    line_buffer_V_4_ce0;
wire   [7:0] line_buffer_V_4_q0;
reg    line_buffer_V_4_ce1;
reg    line_buffer_V_4_we1;
reg   [7:0] window_V_4;
wire   [9:0] line_buffer_V_5_address0;
reg    line_buffer_V_5_ce0;
wire   [7:0] line_buffer_V_5_q0;
wire   [9:0] line_buffer_V_5_address1;
reg    line_buffer_V_5_ce1;
reg    line_buffer_V_5_we1;
reg   [7:0] window_V_5;
reg   [7:0] window_V_6;
reg   [7:0] kernel_v_V_1;
reg  signed [7:0] kernel_v_V_2;
reg  signed [7:0] kernel_v_V_3;
reg  signed [7:0] kernel_v_V_4;
reg   [7:0] kernel_v_V_5;
reg  signed [7:0] kernel_v_V_6;
reg  signed [18:0] convolution_buffer_V_1;
reg  signed [18:0] convolution_buffer_V_2;
reg  signed [7:0] kernel_h_V_1;
reg  signed [18:0] convolution_buffer_V_3;
reg  signed [7:0] kernel_h_V_2;
reg  signed [18:0] convolution_buffer_V_4;
reg  signed [7:0] kernel_h_V_3;
reg  signed [18:0] convolution_buffer_V_5;
reg  signed [7:0] kernel_h_V_4;
reg  signed [18:0] convolution_buffer_V_6;
reg  signed [7:0] kernel_h_V_5;
reg  signed [7:0] kernel_h_V_6;
reg    in_img_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_reg_1368;
reg    out_img_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter36;
reg   [0:0] or_cond1_reg_1372;
reg   [0:0] or_cond1_reg_1372_pp0_iter35_reg;
reg    ap_enable_reg_pp0_iter37;
reg   [0:0] or_cond1_reg_1372_pp0_iter36_reg;
reg   [18:0] indvar_flatten_reg_326;
reg   [18:0] iteration_reg_337;
reg   [8:0] row_reg_348;
reg   [18:0] iteration_1_reg_359;
reg   [9:0] col_reg_370;
reg   [7:0] reg_386;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
reg    ap_block_state38_io;
wire    ap_block_state39_pp0_stage0_iter37;
reg    ap_block_state39_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_9_reg_1322;
reg   [0:0] tmp_3_reg_1334;
reg   [0:0] tmp_11_reg_1338;
wire   [0:0] exitcond_flatten_fu_409_p2;
wire   [18:0] indvar_flatten_next_fu_415_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [9:0] col_mid2_fu_441_p3;
reg   [9:0] col_mid2_reg_1306;
reg   [9:0] col_mid2_reg_1306_pp0_iter1_reg;
wire   [18:0] iteration_mid2_fu_495_p3;
wire   [8:0] row_mid2_fu_503_p3;
wire   [0:0] tmp_9_fu_511_p2;
reg   [0:0] tmp_9_reg_1322_pp0_iter1_reg;
wire   [0:0] tmp_8_fu_517_p2;
reg   [0:0] tmp_8_reg_1326;
wire   [0:0] tmp_4_fu_523_p2;
reg   [0:0] tmp_4_reg_1330;
wire   [0:0] tmp_3_fu_564_p2;
reg   [0:0] tmp_3_reg_1334_pp0_iter1_reg;
wire   [0:0] grp_fu_381_p2;
reg   [0:0] tmp_11_reg_1338_pp0_iter1_reg;
wire   [2:0] tmp_22_fu_575_p1;
reg   [2:0] tmp_22_reg_1347;
reg   [2:0] tmp_22_reg_1347_pp0_iter1_reg;
wire   [2:0] tmp_21_fu_584_p1;
reg   [2:0] tmp_21_reg_1356;
reg   [2:0] tmp_21_reg_1356_pp0_iter1_reg;
reg   [0:0] tmp_13_reg_1360;
reg   [0:0] tmp_13_reg_1360_pp0_iter1_reg;
wire   [0:0] tmp_15_fu_604_p2;
reg   [0:0] tmp_15_reg_1364;
reg   [0:0] tmp_15_reg_1364_pp0_iter1_reg;
wire   [0:0] or_cond_fu_610_p2;
reg   [0:0] or_cond_reg_1368_pp0_iter1_reg;
wire   [0:0] or_cond1_fu_622_p2;
reg   [0:0] or_cond1_reg_1372_pp0_iter1_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter2_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter3_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter4_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter5_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter6_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter7_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter8_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter9_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter10_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter11_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter12_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter13_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter14_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter15_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter16_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter17_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter18_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter19_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter20_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter21_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter22_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter23_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter24_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter25_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter26_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter27_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter28_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter29_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter30_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter31_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter32_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter33_reg;
reg   [0:0] or_cond1_reg_1372_pp0_iter34_reg;
wire   [18:0] tmp_20_fu_628_p2;
wire   [9:0] col_1_fu_634_p2;
reg   [9:0] line_buffer_V_0_addr_reg_1386;
reg   [9:0] line_buffer_V_1_addr_reg_1392;
reg   [9:0] line_buffer_V_2_addr_reg_1398;
reg   [9:0] line_buffer_V_3_addr_reg_1404;
reg   [9:0] line_buffer_V_4_addr_reg_1410;
reg   [7:0] in_temp_V_reg_1421;
reg  signed [7:0] kernel_h_V_0_loc_1_l_1_reg_1427;
reg  signed [7:0] kernel_sum_V_load_reg_1432;
reg   [7:0] kernel_off_V_load_reg_1437;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter3_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter4_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter5_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter6_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter7_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter8_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter9_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter10_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter11_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter12_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter13_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter14_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter15_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter16_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter17_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter18_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter19_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter20_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter21_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter22_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter23_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter24_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter25_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter26_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter27_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter28_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter29_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter30_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter31_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter32_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter33_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter34_reg;
reg   [7:0] kernel_off_V_load_reg_1437_pp0_iter35_reg;
wire   [7:0] r_V_9_fu_1168_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
wire   [63:0] tmp_12_fu_570_p1;
wire   [63:0] tmp_10_fu_579_p1;
wire   [63:0] tmp_16_fu_663_p1;
wire   [63:0] tmp_17_fu_800_p1;
wire  signed [18:0] temp_v_V_6_fu_979_p2;
reg   [7:0] kernel_h_V_0_loc_1_fu_162;
reg   [31:0] i_1_fu_166;
wire   [31:0] tmp_2_i_1_fu_556_p3;
reg   [31:0] j_1_fu_170;
wire   [31:0] tmp_14_fu_588_p2;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] p_j_1_fu_547_p3;
wire   [0:0] exitcond_fu_427_p2;
wire   [18:0] tmp_5_fu_421_p2;
wire   [8:0] row_s_fu_449_p2;
wire   [0:0] tmp_5_mid1_fu_455_p2;
wire   [0:0] tmp_6_fu_461_p2;
wire   [0:0] tmp_7_mid1_fu_475_p2;
wire   [0:0] tmp_7_fu_481_p2;
wire   [18:0] iteration_1_mid2_fu_433_p3;
wire   [0:0] tmp_s_fu_535_p2;
wire   [31:0] tmp_2_fu_541_p2;
wire   [0:0] tmp_5_mid2_fu_467_p3;
wire   [0:0] tmp_7_mid2_fu_487_p3;
wire   [0:0] tmp_18_fu_616_p2;
wire  signed [7:0] r_V_fu_831_p0;
wire   [7:0] r_V_fu_831_p1;
wire  signed [15:0] r_V_fu_831_p2;
wire  signed [7:0] r_V_s_fu_857_p0;
wire   [7:0] r_V_s_fu_857_p1;
wire  signed [15:0] r_V_s_fu_857_p2;
wire  signed [7:0] r_V_7_fu_931_p0;
wire   [7:0] r_V_7_fu_931_p1;
wire  signed [15:0] r_V_7_fu_931_p2;
wire  signed [16:0] grp_fu_1183_p3;
wire  signed [17:0] grp_fu_1192_p3;
wire  signed [16:0] grp_fu_1174_p3;
wire  signed [16:0] grp_fu_1201_p3;
wire  signed [17:0] tmp9_cast_fu_966_p1;
wire  signed [17:0] tmp8_cast_fu_963_p1;
wire   [17:0] tmp7_fu_969_p2;
wire  signed [18:0] tmp7_cast_fu_975_p1;
wire  signed [18:0] tmp5_cast_fu_960_p1;
wire  signed [26:0] r_V_4_1_fu_1218_p2;
wire  signed [26:0] r_V_4_3_fu_1234_p2;
wire  signed [27:0] grp_fu_1210_p3;
wire  signed [26:0] grp_fu_1256_p3;
wire  signed [27:0] tmp14_cast_fu_1127_p1;
wire  signed [27:0] grp_fu_1241_p3;
(* use_dsp48 = "no" *) wire   [27:0] tmp_fu_1130_p2;
wire  signed [28:0] tmp12_cast_fu_1135_p1;
wire  signed [28:0] tmp10_cast_fu_1124_p1;
wire   [28:0] temp_h_V_fu_1139_p2;
wire  signed [29:0] grp_fu_1158_p0;
wire   [7:0] grp_fu_1158_p2;
wire   [7:0] tmp_23_fu_1164_p1;
wire   [7:0] grp_fu_1174_p1;
wire   [7:0] grp_fu_1183_p1;
wire   [7:0] grp_fu_1192_p1;
wire   [7:0] grp_fu_1201_p1;
wire  signed [27:0] grp_fu_1225_p3;
wire  signed [26:0] r_V_4_5_fu_1250_p2;
reg    grp_fu_1158_ce;
wire    ap_CS_fsm_state40;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_1174_p10;
wire   [15:0] grp_fu_1183_p10;
wire   [15:0] grp_fu_1192_p10;
wire   [15:0] grp_fu_1201_p10;
wire   [15:0] r_V_7_fu_931_p10;
wire   [15:0] r_V_fu_831_p10;
wire   [15:0] r_V_s_fu_857_p10;
reg    ap_condition_1478;
reg    ap_condition_1483;
reg    ap_condition_1476;
reg    ap_condition_1491;
reg    ap_condition_1489;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 in_img_V_0_sel_rd = 1'b0;
#0 in_img_V_0_sel_wr = 1'b0;
#0 in_img_V_0_state = 2'd0;
#0 out_img_V_1_sel_rd = 1'b0;
#0 out_img_V_1_sel_wr = 1'b0;
#0 out_img_V_1_state = 2'd0;
#0 kernel_h_V_0 = 8'd0;
#0 kernel_v_V_0 = 8'd0;
#0 kernel_sum_V = 8'd1;
#0 kernel_off_V = 8'd0;
#0 window_V_0 = 8'd0;
#0 window_V_1 = 8'd0;
#0 window_V_2 = 8'd0;
#0 window_V_3 = 8'd0;
#0 window_V_4 = 8'd0;
#0 window_V_5 = 8'd0;
#0 window_V_6 = 8'd0;
#0 kernel_v_V_1 = 8'd0;
#0 kernel_v_V_2 = 8'd0;
#0 kernel_v_V_3 = 8'd0;
#0 kernel_v_V_4 = 8'd0;
#0 kernel_v_V_5 = 8'd0;
#0 kernel_v_V_6 = 8'd0;
#0 convolution_buffer_V_1 = 19'd0;
#0 convolution_buffer_V_2 = 19'd0;
#0 kernel_h_V_1 = 8'd0;
#0 convolution_buffer_V_3 = 19'd0;
#0 kernel_h_V_2 = 8'd0;
#0 convolution_buffer_V_4 = 19'd0;
#0 kernel_h_V_3 = 8'd0;
#0 convolution_buffer_V_5 = 19'd0;
#0 kernel_h_V_4 = 8'd0;
#0 convolution_buffer_V_6 = 19'd0;
#0 kernel_h_V_5 = 8'd0;
#0 kernel_h_V_6 = 8'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
end

sep_convolution_fbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_0_address0),
    .ce0(line_buffer_V_0_ce0),
    .q0(line_buffer_V_0_q0),
    .address1(line_buffer_V_0_addr_reg_1386),
    .ce1(line_buffer_V_0_ce1),
    .we1(line_buffer_V_0_we1),
    .d1(line_buffer_V_1_q0)
);

sep_convolution_fbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_1_address0),
    .ce0(line_buffer_V_1_ce0),
    .q0(line_buffer_V_1_q0),
    .address1(line_buffer_V_1_addr_reg_1392),
    .ce1(line_buffer_V_1_ce1),
    .we1(line_buffer_V_1_we1),
    .d1(line_buffer_V_2_q0)
);

sep_convolution_fbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_2_address0),
    .ce0(line_buffer_V_2_ce0),
    .q0(line_buffer_V_2_q0),
    .address1(line_buffer_V_2_addr_reg_1398),
    .ce1(line_buffer_V_2_ce1),
    .we1(line_buffer_V_2_we1),
    .d1(line_buffer_V_3_q0)
);

sep_convolution_fbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_3_address0),
    .ce0(line_buffer_V_3_ce0),
    .q0(line_buffer_V_3_q0),
    .address1(line_buffer_V_3_addr_reg_1404),
    .ce1(line_buffer_V_3_ce1),
    .we1(line_buffer_V_3_we1),
    .d1(line_buffer_V_4_q0)
);

sep_convolution_fbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_4_address0),
    .ce0(line_buffer_V_4_ce0),
    .q0(line_buffer_V_4_q0),
    .address1(line_buffer_V_4_addr_reg_1410),
    .ce1(line_buffer_V_4_ce1),
    .we1(line_buffer_V_4_we1),
    .d1(line_buffer_V_5_q0)
);

sep_convolution_fbkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
line_buffer_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_V_5_address0),
    .ce0(line_buffer_V_5_ce0),
    .q0(line_buffer_V_5_q0),
    .address1(line_buffer_V_5_address1),
    .ce1(line_buffer_V_5_ce1),
    .we1(line_buffer_V_5_we1),
    .d1(in_temp_V_reg_1421)
);

sep_convolution_fhbi #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
sep_convolution_fhbi_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1158_p0),
    .din1(kernel_sum_V_load_reg_1432),
    .ce(grp_fu_1158_ce),
    .dout(grp_fu_1158_p2)
);

sep_convolution_fibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
sep_convolution_fibs_U2(
    .din0(kernel_v_V_2),
    .din1(grp_fu_1174_p1),
    .din2(r_V_fu_831_p2),
    .dout(grp_fu_1174_p3)
);

sep_convolution_fibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
sep_convolution_fibs_U3(
    .din0(kernel_v_V_3),
    .din1(grp_fu_1183_p1),
    .din2(r_V_7_fu_931_p2),
    .dout(grp_fu_1183_p3)
);

sep_convolution_fjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
sep_convolution_fjbC_U4(
    .din0(kernel_v_V_4),
    .din1(grp_fu_1192_p1),
    .din2(grp_fu_1183_p3),
    .dout(grp_fu_1192_p3)
);

sep_convolution_fibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
sep_convolution_fibs_U5(
    .din0(kernel_v_V_6),
    .din1(grp_fu_1201_p1),
    .din2(r_V_s_fu_857_p2),
    .dout(grp_fu_1201_p3)
);

sep_convolution_fkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
sep_convolution_fkbM_U6(
    .din0(convolution_buffer_V_1),
    .din1(kernel_h_V_0_loc_1_l_1_reg_1427),
    .din2(grp_fu_1225_p3),
    .dout(grp_fu_1210_p3)
);

sep_convolution_flbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 27 ))
sep_convolution_flbW_U7(
    .din0(convolution_buffer_V_2),
    .din1(kernel_h_V_1),
    .dout(r_V_4_1_fu_1218_p2)
);

sep_convolution_fmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 28 ))
sep_convolution_fmb6_U8(
    .din0(convolution_buffer_V_3),
    .din1(kernel_h_V_2),
    .din2(r_V_4_1_fu_1218_p2),
    .dout(grp_fu_1225_p3)
);

sep_convolution_flbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 27 ))
sep_convolution_flbW_U9(
    .din0(convolution_buffer_V_4),
    .din1(kernel_h_V_3),
    .dout(r_V_4_3_fu_1234_p2)
);

sep_convolution_fmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 28 ))
sep_convolution_fmb6_U10(
    .din0(convolution_buffer_V_5),
    .din1(kernel_h_V_4),
    .din2(r_V_4_3_fu_1234_p2),
    .dout(grp_fu_1241_p3)
);

sep_convolution_flbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 27 ))
sep_convolution_flbW_U11(
    .din0(convolution_buffer_V_6),
    .din1(kernel_h_V_5),
    .dout(r_V_4_5_fu_1250_p2)
);

sep_convolution_fncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
sep_convolution_fncg_U12(
    .din0(temp_v_V_6_fu_979_p2),
    .din1(kernel_h_V_6),
    .din2(r_V_4_5_fu_1250_p2),
    .dout(grp_fu_1256_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_img_V_0_sel_rd <= 1'b0;
    end else begin
        if (((in_img_V_0_ack_out == 1'b1) & (in_img_V_0_vld_out == 1'b1))) begin
            in_img_V_0_sel_rd <= ~in_img_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_img_V_0_sel_wr <= 1'b0;
    end else begin
        if (((in_img_V_0_ack_in == 1'b1) & (in_img_V_0_vld_in == 1'b1))) begin
            in_img_V_0_sel_wr <= ~in_img_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_img_V_0_state <= 2'd0;
    end else begin
        if ((((in_img_V_0_state == 2'd2) & (in_img_V_0_vld_in == 1'b0)) | ((in_img_V_0_state == 2'd3) & (in_img_V_0_vld_in == 1'b0) & (in_img_V_0_ack_out == 1'b1)))) begin
            in_img_V_0_state <= 2'd2;
        end else if ((((in_img_V_0_state == 2'd1) & (in_img_V_0_ack_out == 1'b0)) | ((in_img_V_0_state == 2'd3) & (in_img_V_0_ack_out == 1'b0) & (in_img_V_0_vld_in == 1'b1)))) begin
            in_img_V_0_state <= 2'd1;
        end else if (((~((in_img_V_0_vld_in == 1'b0) & (in_img_V_0_ack_out == 1'b1)) & ~((in_img_V_0_ack_out == 1'b0) & (in_img_V_0_vld_in == 1'b1)) & (in_img_V_0_state == 2'd3)) | ((in_img_V_0_state == 2'd1) & (in_img_V_0_ack_out == 1'b1)) | ((in_img_V_0_state == 2'd2) & (in_img_V_0_vld_in == 1'b1)))) begin
            in_img_V_0_state <= 2'd3;
        end else begin
            in_img_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_img_V_1_sel_rd <= 1'b0;
    end else begin
        if (((out_img_V_1_ack_out == 1'b1) & (out_img_V_1_vld_out == 1'b1))) begin
            out_img_V_1_sel_rd <= ~out_img_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_img_V_1_sel_wr <= 1'b0;
    end else begin
        if (((out_img_V_1_ack_in == 1'b1) & (out_img_V_1_vld_in == 1'b1))) begin
            out_img_V_1_sel_wr <= ~out_img_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_img_V_1_state <= 2'd0;
    end else begin
        if ((((out_img_V_1_state == 2'd2) & (out_img_V_1_vld_in == 1'b0)) | ((out_img_V_1_state == 2'd3) & (out_img_V_1_vld_in == 1'b0) & (out_img_V_1_ack_out == 1'b1)))) begin
            out_img_V_1_state <= 2'd2;
        end else if ((((out_img_V_1_state == 2'd1) & (out_img_V_1_ack_out == 1'b0)) | ((out_img_V_1_state == 2'd3) & (out_img_V_1_ack_out == 1'b0) & (out_img_V_1_vld_in == 1'b1)))) begin
            out_img_V_1_state <= 2'd1;
        end else if (((~((out_img_V_1_vld_in == 1'b0) & (out_img_V_1_ack_out == 1'b1)) & ~((out_img_V_1_ack_out == 1'b0) & (out_img_V_1_vld_in == 1'b1)) & (out_img_V_1_state == 2'd3)) | ((out_img_V_1_state == 2'd1) & (out_img_V_1_ack_out == 1'b1)) | ((out_img_V_1_state == 2'd2) & (out_img_V_1_vld_in == 1'b1)))) begin
            out_img_V_1_state <= 2'd3;
        end else begin
            out_img_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_reg_370 <= col_1_fu_634_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_reg_370 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_511_p2 == 1'd1) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_fu_166 <= tmp_2_i_1_fu_556_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_1_fu_166 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_326 <= indvar_flatten_next_fu_415_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_326 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iteration_1_reg_359 <= tmp_20_fu_628_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        iteration_1_reg_359 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iteration_reg_337 <= iteration_mid2_fu_495_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        iteration_reg_337 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_511_p2 == 1'd1) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_1_fu_170 <= tmp_14_fu_588_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_1_fu_170 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334 == 1'd1) & (tmp_9_reg_1322 == 1'd1) & (tmp_21_reg_1356 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_h_V_0_loc_1_fu_162 <= kernel_config_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_h_V_0_loc_1_fu_162 <= kernel_h_V_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1489)) begin
        if (((tmp_13_reg_1360_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd1))) begin
            kernel_v_V_0 <= kernel_h_V_0_loc_1_fu_162;
        end else if ((1'b1 == ap_condition_1491)) begin
            kernel_v_V_0 <= reg_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_reg_348 <= row_mid2_fu_503_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_reg_348 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_mid2_reg_1306 <= col_mid2_fu_441_p3;
        or_cond1_reg_1372 <= or_cond1_fu_622_p2;
        or_cond_reg_1368 <= or_cond_fu_610_p2;
        tmp_15_reg_1364 <= tmp_15_fu_604_p2;
        tmp_9_reg_1322 <= tmp_9_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_mid2_reg_1306_pp0_iter1_reg <= col_mid2_reg_1306;
        or_cond1_reg_1372_pp0_iter1_reg <= or_cond1_reg_1372;
        or_cond_reg_1368_pp0_iter1_reg <= or_cond_reg_1368;
        tmp_11_reg_1338_pp0_iter1_reg <= tmp_11_reg_1338;
        tmp_13_reg_1360_pp0_iter1_reg <= tmp_13_reg_1360;
        tmp_15_reg_1364_pp0_iter1_reg <= tmp_15_reg_1364;
        tmp_21_reg_1356_pp0_iter1_reg <= tmp_21_reg_1356;
        tmp_22_reg_1347_pp0_iter1_reg <= tmp_22_reg_1347;
        tmp_3_reg_1334_pp0_iter1_reg <= tmp_3_reg_1334;
        tmp_9_reg_1322_pp0_iter1_reg <= tmp_9_reg_1322;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_reg_1372_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        convolution_buffer_V_1 <= convolution_buffer_V_2;
        convolution_buffer_V_2 <= convolution_buffer_V_3;
        convolution_buffer_V_3 <= convolution_buffer_V_4;
        convolution_buffer_V_4 <= convolution_buffer_V_5;
        convolution_buffer_V_5 <= convolution_buffer_V_6;
        convolution_buffer_V_6 <= temp_v_V_6_fu_979_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((in_img_V_0_load_A == 1'b1)) begin
        in_img_V_0_payload_A <= in_img_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((in_img_V_0_load_B == 1'b1)) begin
        in_img_V_0_payload_B <= in_img_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1368 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_temp_V_reg_1421 <= in_img_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334 == 1'd1) & (tmp_9_reg_1322 == 1'd1) & (tmp_21_reg_1356 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_h_V_0 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_reg_1372_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_h_V_0_loc_1_l_1_reg_1427 <= kernel_h_V_0_loc_1_fu_162;
        kernel_off_V_load_reg_1437 <= kernel_off_V;
        kernel_sum_V_load_reg_1432 <= kernel_sum_V;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_h_V_1 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_h_V_2 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_h_V_3 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_h_V_4 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_h_V_5 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd7)) | ((tmp_3_reg_1334_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_21_reg_1356_pp0_iter1_reg == 3'd6))))) begin
        kernel_h_V_6 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1330 == 1'd1) & (tmp_8_reg_1326 == 1'd0) & (tmp_9_reg_1322 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_off_V <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        kernel_off_V_load_reg_1437_pp0_iter10_reg <= kernel_off_V_load_reg_1437_pp0_iter9_reg;
        kernel_off_V_load_reg_1437_pp0_iter11_reg <= kernel_off_V_load_reg_1437_pp0_iter10_reg;
        kernel_off_V_load_reg_1437_pp0_iter12_reg <= kernel_off_V_load_reg_1437_pp0_iter11_reg;
        kernel_off_V_load_reg_1437_pp0_iter13_reg <= kernel_off_V_load_reg_1437_pp0_iter12_reg;
        kernel_off_V_load_reg_1437_pp0_iter14_reg <= kernel_off_V_load_reg_1437_pp0_iter13_reg;
        kernel_off_V_load_reg_1437_pp0_iter15_reg <= kernel_off_V_load_reg_1437_pp0_iter14_reg;
        kernel_off_V_load_reg_1437_pp0_iter16_reg <= kernel_off_V_load_reg_1437_pp0_iter15_reg;
        kernel_off_V_load_reg_1437_pp0_iter17_reg <= kernel_off_V_load_reg_1437_pp0_iter16_reg;
        kernel_off_V_load_reg_1437_pp0_iter18_reg <= kernel_off_V_load_reg_1437_pp0_iter17_reg;
        kernel_off_V_load_reg_1437_pp0_iter19_reg <= kernel_off_V_load_reg_1437_pp0_iter18_reg;
        kernel_off_V_load_reg_1437_pp0_iter20_reg <= kernel_off_V_load_reg_1437_pp0_iter19_reg;
        kernel_off_V_load_reg_1437_pp0_iter21_reg <= kernel_off_V_load_reg_1437_pp0_iter20_reg;
        kernel_off_V_load_reg_1437_pp0_iter22_reg <= kernel_off_V_load_reg_1437_pp0_iter21_reg;
        kernel_off_V_load_reg_1437_pp0_iter23_reg <= kernel_off_V_load_reg_1437_pp0_iter22_reg;
        kernel_off_V_load_reg_1437_pp0_iter24_reg <= kernel_off_V_load_reg_1437_pp0_iter23_reg;
        kernel_off_V_load_reg_1437_pp0_iter25_reg <= kernel_off_V_load_reg_1437_pp0_iter24_reg;
        kernel_off_V_load_reg_1437_pp0_iter26_reg <= kernel_off_V_load_reg_1437_pp0_iter25_reg;
        kernel_off_V_load_reg_1437_pp0_iter27_reg <= kernel_off_V_load_reg_1437_pp0_iter26_reg;
        kernel_off_V_load_reg_1437_pp0_iter28_reg <= kernel_off_V_load_reg_1437_pp0_iter27_reg;
        kernel_off_V_load_reg_1437_pp0_iter29_reg <= kernel_off_V_load_reg_1437_pp0_iter28_reg;
        kernel_off_V_load_reg_1437_pp0_iter30_reg <= kernel_off_V_load_reg_1437_pp0_iter29_reg;
        kernel_off_V_load_reg_1437_pp0_iter31_reg <= kernel_off_V_load_reg_1437_pp0_iter30_reg;
        kernel_off_V_load_reg_1437_pp0_iter32_reg <= kernel_off_V_load_reg_1437_pp0_iter31_reg;
        kernel_off_V_load_reg_1437_pp0_iter33_reg <= kernel_off_V_load_reg_1437_pp0_iter32_reg;
        kernel_off_V_load_reg_1437_pp0_iter34_reg <= kernel_off_V_load_reg_1437_pp0_iter33_reg;
        kernel_off_V_load_reg_1437_pp0_iter35_reg <= kernel_off_V_load_reg_1437_pp0_iter34_reg;
        kernel_off_V_load_reg_1437_pp0_iter3_reg <= kernel_off_V_load_reg_1437;
        kernel_off_V_load_reg_1437_pp0_iter4_reg <= kernel_off_V_load_reg_1437_pp0_iter3_reg;
        kernel_off_V_load_reg_1437_pp0_iter5_reg <= kernel_off_V_load_reg_1437_pp0_iter4_reg;
        kernel_off_V_load_reg_1437_pp0_iter6_reg <= kernel_off_V_load_reg_1437_pp0_iter5_reg;
        kernel_off_V_load_reg_1437_pp0_iter7_reg <= kernel_off_V_load_reg_1437_pp0_iter6_reg;
        kernel_off_V_load_reg_1437_pp0_iter8_reg <= kernel_off_V_load_reg_1437_pp0_iter7_reg;
        kernel_off_V_load_reg_1437_pp0_iter9_reg <= kernel_off_V_load_reg_1437_pp0_iter8_reg;
        or_cond1_reg_1372_pp0_iter10_reg <= or_cond1_reg_1372_pp0_iter9_reg;
        or_cond1_reg_1372_pp0_iter11_reg <= or_cond1_reg_1372_pp0_iter10_reg;
        or_cond1_reg_1372_pp0_iter12_reg <= or_cond1_reg_1372_pp0_iter11_reg;
        or_cond1_reg_1372_pp0_iter13_reg <= or_cond1_reg_1372_pp0_iter12_reg;
        or_cond1_reg_1372_pp0_iter14_reg <= or_cond1_reg_1372_pp0_iter13_reg;
        or_cond1_reg_1372_pp0_iter15_reg <= or_cond1_reg_1372_pp0_iter14_reg;
        or_cond1_reg_1372_pp0_iter16_reg <= or_cond1_reg_1372_pp0_iter15_reg;
        or_cond1_reg_1372_pp0_iter17_reg <= or_cond1_reg_1372_pp0_iter16_reg;
        or_cond1_reg_1372_pp0_iter18_reg <= or_cond1_reg_1372_pp0_iter17_reg;
        or_cond1_reg_1372_pp0_iter19_reg <= or_cond1_reg_1372_pp0_iter18_reg;
        or_cond1_reg_1372_pp0_iter20_reg <= or_cond1_reg_1372_pp0_iter19_reg;
        or_cond1_reg_1372_pp0_iter21_reg <= or_cond1_reg_1372_pp0_iter20_reg;
        or_cond1_reg_1372_pp0_iter22_reg <= or_cond1_reg_1372_pp0_iter21_reg;
        or_cond1_reg_1372_pp0_iter23_reg <= or_cond1_reg_1372_pp0_iter22_reg;
        or_cond1_reg_1372_pp0_iter24_reg <= or_cond1_reg_1372_pp0_iter23_reg;
        or_cond1_reg_1372_pp0_iter25_reg <= or_cond1_reg_1372_pp0_iter24_reg;
        or_cond1_reg_1372_pp0_iter26_reg <= or_cond1_reg_1372_pp0_iter25_reg;
        or_cond1_reg_1372_pp0_iter27_reg <= or_cond1_reg_1372_pp0_iter26_reg;
        or_cond1_reg_1372_pp0_iter28_reg <= or_cond1_reg_1372_pp0_iter27_reg;
        or_cond1_reg_1372_pp0_iter29_reg <= or_cond1_reg_1372_pp0_iter28_reg;
        or_cond1_reg_1372_pp0_iter2_reg <= or_cond1_reg_1372_pp0_iter1_reg;
        or_cond1_reg_1372_pp0_iter30_reg <= or_cond1_reg_1372_pp0_iter29_reg;
        or_cond1_reg_1372_pp0_iter31_reg <= or_cond1_reg_1372_pp0_iter30_reg;
        or_cond1_reg_1372_pp0_iter32_reg <= or_cond1_reg_1372_pp0_iter31_reg;
        or_cond1_reg_1372_pp0_iter33_reg <= or_cond1_reg_1372_pp0_iter32_reg;
        or_cond1_reg_1372_pp0_iter34_reg <= or_cond1_reg_1372_pp0_iter33_reg;
        or_cond1_reg_1372_pp0_iter35_reg <= or_cond1_reg_1372_pp0_iter34_reg;
        or_cond1_reg_1372_pp0_iter36_reg <= or_cond1_reg_1372_pp0_iter35_reg;
        or_cond1_reg_1372_pp0_iter3_reg <= or_cond1_reg_1372_pp0_iter2_reg;
        or_cond1_reg_1372_pp0_iter4_reg <= or_cond1_reg_1372_pp0_iter3_reg;
        or_cond1_reg_1372_pp0_iter5_reg <= or_cond1_reg_1372_pp0_iter4_reg;
        or_cond1_reg_1372_pp0_iter6_reg <= or_cond1_reg_1372_pp0_iter5_reg;
        or_cond1_reg_1372_pp0_iter7_reg <= or_cond1_reg_1372_pp0_iter6_reg;
        or_cond1_reg_1372_pp0_iter8_reg <= or_cond1_reg_1372_pp0_iter7_reg;
        or_cond1_reg_1372_pp0_iter9_reg <= or_cond1_reg_1372_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1326 == 1'd1) & (tmp_9_reg_1322 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_sum_V <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_v_V_1 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_v_V_2 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_v_V_3 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_v_V_4 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_v_V_5 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd7)) | ((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd6))))) begin
        kernel_v_V_6 <= reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_15_reg_1364 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_addr_reg_1386 <= tmp_16_fu_663_p1;
        line_buffer_V_1_addr_reg_1392 <= tmp_16_fu_663_p1;
        line_buffer_V_2_addr_reg_1398 <= tmp_16_fu_663_p1;
        line_buffer_V_3_addr_reg_1404 <= tmp_16_fu_663_p1;
        line_buffer_V_4_addr_reg_1410 <= tmp_16_fu_663_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((out_img_V_1_load_A == 1'b1)) begin
        out_img_V_1_payload_A <= r_V_9_fu_1168_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((out_img_V_1_load_B == 1'b1)) begin
        out_img_V_1_payload_B <= r_V_9_fu_1168_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_3_reg_1334 == 1'd1) & (tmp_9_reg_1322 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_11_reg_1338 == 1'd1) & (tmp_9_reg_1322 == 1'd1) & (tmp_3_reg_1334 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_386 <= kernel_config_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_511_p2 == 1'd1) & (tmp_3_fu_564_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_11_reg_1338 <= grp_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_564_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_13_reg_1360 <= grp_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_564_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_21_reg_1356 <= tmp_21_fu_584_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_381_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1) & (tmp_3_fu_564_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_22_reg_1347 <= tmp_22_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_511_p2 == 1'd1) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_1334 <= tmp_3_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_517_p2 == 1'd0) & (tmp_9_fu_511_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_reg_1330 <= tmp_4_fu_523_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_511_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_8_reg_1326 <= tmp_8_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_15_reg_1364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        window_V_0 <= line_buffer_V_0_q0;
        window_V_1 <= line_buffer_V_1_q0;
        window_V_2 <= line_buffer_V_2_q0;
        window_V_3 <= line_buffer_V_3_q0;
        window_V_4 <= line_buffer_V_4_q0;
        window_V_5 <= line_buffer_V_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1368_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        window_V_6 <= in_temp_V_reg_1421;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_409_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (out_img_V_1_ack_in == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (out_img_V_1_ack_in == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1158_ce = 1'b1;
    end else begin
        grp_fu_1158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_reg_1368 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_img_V_0_ack_out = 1'b1;
    end else begin
        in_img_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((in_img_V_0_sel == 1'b1)) begin
        in_img_V_0_data_out = in_img_V_0_payload_B;
    end else begin
        in_img_V_0_data_out = in_img_V_0_payload_A;
    end
end

always @ (*) begin
    if (((or_cond_reg_1368 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_img_V_TDATA_blk_n = in_img_V_0_state[1'd0];
    end else begin
        in_img_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1476)) begin
        if (((tmp_3_fu_564_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1))) begin
            kernel_config_V_address0 = tmp_10_fu_579_p1;
        end else if ((1'b1 == ap_condition_1483)) begin
            kernel_config_V_address0 = tmp_12_fu_570_p1;
        end else if (((tmp_8_fu_517_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd0))) begin
            kernel_config_V_address0 = 64'd49;
        end else if ((1'b1 == ap_condition_1478)) begin
            kernel_config_V_address0 = 64'd50;
        end else begin
            kernel_config_V_address0 = 'bx;
        end
    end else begin
        kernel_config_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_3_fu_564_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((grp_fu_381_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1) & (tmp_3_fu_564_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_fu_517_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_4_fu_523_p2 == 1'd1) & (tmp_8_fu_517_p2 == 1'd0) & (tmp_9_fu_511_p2 == 1'd0) & (exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_config_V_ce0 = 1'b1;
    end else begin
        kernel_config_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_ce0 = 1'b1;
    end else begin
        line_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_0_ce1 = 1'b1;
    end else begin
        line_buffer_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_15_reg_1364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_0_we1 = 1'b1;
    end else begin
        line_buffer_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_1_ce0 = 1'b1;
    end else begin
        line_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_1_ce1 = 1'b1;
    end else begin
        line_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_15_reg_1364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_1_we1 = 1'b1;
    end else begin
        line_buffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_2_ce0 = 1'b1;
    end else begin
        line_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_2_ce1 = 1'b1;
    end else begin
        line_buffer_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_15_reg_1364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_2_we1 = 1'b1;
    end else begin
        line_buffer_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_3_ce0 = 1'b1;
    end else begin
        line_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_3_ce1 = 1'b1;
    end else begin
        line_buffer_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_15_reg_1364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_3_we1 = 1'b1;
    end else begin
        line_buffer_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_4_ce0 = 1'b1;
    end else begin
        line_buffer_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_4_ce1 = 1'b1;
    end else begin
        line_buffer_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_15_reg_1364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_4_we1 = 1'b1;
    end else begin
        line_buffer_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_5_ce0 = 1'b1;
    end else begin
        line_buffer_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_5_ce1 = 1'b1;
    end else begin
        line_buffer_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_reg_1368_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_V_5_we1 = 1'b1;
    end else begin
        line_buffer_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((out_img_V_1_sel == 1'b1)) begin
        out_img_V_1_data_out = out_img_V_1_payload_B;
    end else begin
        out_img_V_1_data_out = out_img_V_1_payload_A;
    end
end

always @ (*) begin
    if (((or_cond1_reg_1372_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        out_img_V_1_vld_in = 1'b1;
    end else begin
        out_img_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond1_reg_1372_pp0_iter36_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((or_cond1_reg_1372_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1)))) begin
        out_img_V_TDATA_blk_n = out_img_V_1_state[1'd1];
    end else begin
        out_img_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_409_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_409_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (out_img_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((or_cond_reg_1368 == 1'd1) & (in_img_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((or_cond_reg_1368 == 1'd1) & (in_img_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((or_cond_reg_1368 == 1'd1) & (in_img_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((or_cond1_reg_1372_pp0_iter35_reg == 1'd1) & (out_img_V_1_ack_in == 1'b0));
end

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_io = ((or_cond1_reg_1372_pp0_iter36_reg == 1'd1) & (out_img_V_1_ack_in == 1'b0));
end

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((or_cond_reg_1368 == 1'd1) & (in_img_V_0_vld_out == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1476 = ((exitcond_flatten_fu_409_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1478 = ((tmp_4_fu_523_p2 == 1'd1) & (tmp_8_fu_517_p2 == 1'd0) & (tmp_9_fu_511_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1483 = ((grp_fu_381_p2 == 1'd1) & (tmp_9_fu_511_p2 == 1'd1) & (tmp_3_fu_564_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1489 = ((tmp_9_reg_1322_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_1491 = ((tmp_11_reg_1338_pp0_iter1_reg == 1'd1) & (tmp_3_reg_1334_pp0_iter1_reg == 1'd0) & (tmp_22_reg_1347_pp0_iter1_reg == 3'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign col_1_fu_634_p2 = (col_mid2_fu_441_p3 + 10'd1);

assign col_mid2_fu_441_p3 = ((exitcond_fu_427_p2[0:0] === 1'b1) ? 10'd0 : col_reg_370);

assign exitcond_flatten_fu_409_p2 = ((indvar_flatten_reg_326 == 19'd310569) ? 1'b1 : 1'b0);

assign exitcond_fu_427_p2 = ((col_reg_370 == 10'd643) ? 1'b1 : 1'b0);

assign grp_fu_1158_p0 = $signed(temp_h_V_fu_1139_p2);

assign grp_fu_1174_p1 = grp_fu_1174_p10;

assign grp_fu_1174_p10 = window_V_2;

assign grp_fu_1183_p1 = grp_fu_1183_p10;

assign grp_fu_1183_p10 = window_V_3;

assign grp_fu_1192_p1 = grp_fu_1192_p10;

assign grp_fu_1192_p10 = window_V_4;

assign grp_fu_1201_p1 = grp_fu_1201_p10;

assign grp_fu_1201_p10 = window_V_6;

assign grp_fu_381_p2 = ((p_j_1_fu_547_p3 == 32'd0) ? 1'b1 : 1'b0);

assign in_img_V_0_ack_in = in_img_V_0_state[1'd1];

assign in_img_V_0_load_A = (in_img_V_0_state_cmp_full & ~in_img_V_0_sel_wr);

assign in_img_V_0_load_B = (in_img_V_0_state_cmp_full & in_img_V_0_sel_wr);

assign in_img_V_0_sel = in_img_V_0_sel_rd;

assign in_img_V_0_state_cmp_full = ((in_img_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign in_img_V_0_vld_in = in_img_V_TVALID;

assign in_img_V_0_vld_out = in_img_V_0_state[1'd0];

assign in_img_V_TREADY = in_img_V_0_state[1'd1];

assign indvar_flatten_next_fu_415_p2 = (indvar_flatten_reg_326 + 19'd1);

assign iteration_1_mid2_fu_433_p3 = ((exitcond_fu_427_p2[0:0] === 1'b1) ? tmp_5_fu_421_p2 : iteration_1_reg_359);

assign iteration_mid2_fu_495_p3 = ((exitcond_fu_427_p2[0:0] === 1'b1) ? tmp_5_fu_421_p2 : iteration_reg_337);

assign line_buffer_V_0_address0 = tmp_16_fu_663_p1;

assign line_buffer_V_1_address0 = tmp_16_fu_663_p1;

assign line_buffer_V_2_address0 = tmp_16_fu_663_p1;

assign line_buffer_V_3_address0 = tmp_16_fu_663_p1;

assign line_buffer_V_4_address0 = tmp_16_fu_663_p1;

assign line_buffer_V_5_address0 = tmp_16_fu_663_p1;

assign line_buffer_V_5_address1 = tmp_17_fu_800_p1;

assign or_cond1_fu_622_p2 = (tmp_7_mid2_fu_487_p3 & tmp_18_fu_616_p2);

assign or_cond_fu_610_p2 = (tmp_5_mid2_fu_467_p3 & tmp_15_fu_604_p2);

assign out_img_V_1_ack_in = out_img_V_1_state[1'd1];

assign out_img_V_1_ack_out = out_img_V_TREADY;

assign out_img_V_1_load_A = (out_img_V_1_state_cmp_full & ~out_img_V_1_sel_wr);

assign out_img_V_1_load_B = (out_img_V_1_state_cmp_full & out_img_V_1_sel_wr);

assign out_img_V_1_sel = out_img_V_1_sel_rd;

assign out_img_V_1_state_cmp_full = ((out_img_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_img_V_1_vld_out = out_img_V_1_state[1'd0];

assign out_img_V_TDATA = out_img_V_1_data_out;

assign out_img_V_TVALID = out_img_V_1_state[1'd0];

assign p_j_1_fu_547_p3 = ((tmp_s_fu_535_p2[0:0] === 1'b1) ? 32'd0 : j_1_fu_170);

assign r_V_7_fu_931_p0 = kernel_v_V_5;

assign r_V_7_fu_931_p1 = r_V_7_fu_931_p10;

assign r_V_7_fu_931_p10 = window_V_5;

assign r_V_7_fu_931_p2 = ($signed(r_V_7_fu_931_p0) * $signed({{1'b0}, {r_V_7_fu_931_p1}}));

assign r_V_9_fu_1168_p2 = (tmp_23_fu_1164_p1 + kernel_off_V_load_reg_1437_pp0_iter35_reg);

assign r_V_fu_831_p0 = kernel_v_V_0;

assign r_V_fu_831_p1 = r_V_fu_831_p10;

assign r_V_fu_831_p10 = window_V_0;

assign r_V_fu_831_p2 = ($signed(r_V_fu_831_p0) * $signed({{1'b0}, {r_V_fu_831_p1}}));

assign r_V_s_fu_857_p0 = kernel_v_V_1;

assign r_V_s_fu_857_p1 = r_V_s_fu_857_p10;

assign r_V_s_fu_857_p10 = window_V_1;

assign r_V_s_fu_857_p2 = ($signed(r_V_s_fu_857_p0) * $signed({{1'b0}, {r_V_s_fu_857_p1}}));

assign row_mid2_fu_503_p3 = ((exitcond_fu_427_p2[0:0] === 1'b1) ? row_s_fu_449_p2 : row_reg_348);

assign row_s_fu_449_p2 = (row_reg_348 + 9'd1);

assign temp_h_V_fu_1139_p2 = ($signed(tmp12_cast_fu_1135_p1) + $signed(tmp10_cast_fu_1124_p1));

assign temp_v_V_6_fu_979_p2 = ($signed(tmp7_cast_fu_975_p1) + $signed(tmp5_cast_fu_960_p1));

assign tmp10_cast_fu_1124_p1 = grp_fu_1210_p3;

assign tmp12_cast_fu_1135_p1 = $signed(tmp_fu_1130_p2);

assign tmp14_cast_fu_1127_p1 = grp_fu_1256_p3;

assign tmp5_cast_fu_960_p1 = grp_fu_1192_p3;

assign tmp7_cast_fu_975_p1 = $signed(tmp7_fu_969_p2);

assign tmp7_fu_969_p2 = ($signed(tmp9_cast_fu_966_p1) + $signed(tmp8_cast_fu_963_p1));

assign tmp8_cast_fu_963_p1 = grp_fu_1174_p3;

assign tmp9_cast_fu_966_p1 = grp_fu_1201_p3;

assign tmp_10_fu_579_p1 = iteration_1_mid2_fu_433_p3;

assign tmp_12_fu_570_p1 = iteration_1_mid2_fu_433_p3;

assign tmp_14_fu_588_p2 = (p_j_1_fu_547_p3 + 32'd1);

assign tmp_15_fu_604_p2 = ((col_mid2_fu_441_p3 < 10'd640) ? 1'b1 : 1'b0);

assign tmp_16_fu_663_p1 = col_mid2_reg_1306;

assign tmp_17_fu_800_p1 = col_mid2_reg_1306_pp0_iter1_reg;

assign tmp_18_fu_616_p2 = ((col_mid2_fu_441_p3 > 10'd2) ? 1'b1 : 1'b0);

assign tmp_20_fu_628_p2 = (iteration_1_mid2_fu_433_p3 + 19'd1);

assign tmp_21_fu_584_p1 = p_j_1_fu_547_p3[2:0];

assign tmp_22_fu_575_p1 = tmp_2_i_1_fu_556_p3[2:0];

assign tmp_23_fu_1164_p1 = grp_fu_1158_p2[7:0];

assign tmp_2_fu_541_p2 = (i_1_fu_166 + 32'd1);

assign tmp_2_i_1_fu_556_p3 = ((tmp_s_fu_535_p2[0:0] === 1'b1) ? tmp_2_fu_541_p2 : i_1_fu_166);

assign tmp_3_fu_564_p2 = ((tmp_2_i_1_fu_556_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_523_p2 = ((iteration_1_mid2_fu_433_p3 == 19'd50) ? 1'b1 : 1'b0);

assign tmp_5_fu_421_p2 = (iteration_reg_337 + 19'd643);

assign tmp_5_mid1_fu_455_p2 = ((row_s_fu_449_p2 < 9'd480) ? 1'b1 : 1'b0);

assign tmp_5_mid2_fu_467_p3 = ((exitcond_fu_427_p2[0:0] === 1'b1) ? tmp_5_mid1_fu_455_p2 : tmp_6_fu_461_p2);

assign tmp_6_fu_461_p2 = ((row_reg_348 < 9'd480) ? 1'b1 : 1'b0);

assign tmp_7_fu_481_p2 = ((row_reg_348 > 9'd2) ? 1'b1 : 1'b0);

assign tmp_7_mid1_fu_475_p2 = ((row_s_fu_449_p2 > 9'd2) ? 1'b1 : 1'b0);

assign tmp_7_mid2_fu_487_p3 = ((exitcond_fu_427_p2[0:0] === 1'b1) ? tmp_7_mid1_fu_475_p2 : tmp_7_fu_481_p2);

assign tmp_8_fu_517_p2 = ((iteration_1_mid2_fu_433_p3 == 19'd49) ? 1'b1 : 1'b0);

assign tmp_9_fu_511_p2 = ((iteration_1_mid2_fu_433_p3 < 19'd49) ? 1'b1 : 1'b0);

assign tmp_fu_1130_p2 = ($signed(tmp14_cast_fu_1127_p1) + $signed(grp_fu_1241_p3));

assign tmp_s_fu_535_p2 = (($signed(j_1_fu_170) > $signed(32'd6)) ? 1'b1 : 1'b0);

endmodule //sep_convolution_filter
