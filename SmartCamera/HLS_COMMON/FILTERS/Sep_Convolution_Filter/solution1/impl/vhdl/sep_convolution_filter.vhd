-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sep_convolution_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    kernel_config_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kernel_config_V_ce0 : OUT STD_LOGIC;
    kernel_config_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_img_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in_img_V_TVALID : IN STD_LOGIC;
    in_img_V_TREADY : OUT STD_LOGIC;
    out_img_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_img_V_TVALID : OUT STD_LOGIC;
    out_img_V_TREADY : IN STD_LOGIC );
end;


architecture behav of sep_convolution_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sep_convolution_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=41.666668,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.485625,HLS_SYN_LAT=310607,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=11,HLS_SYN_FF=2869,HLS_SYN_LUT=2748}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv19_4BD29 : STD_LOGIC_VECTOR (18 downto 0) := "1001011110100101001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv19_283 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001010000011";
    constant ap_const_lv10_283 : STD_LOGIC_VECTOR (9 downto 0) := "1010000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv19_31 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000110001";
    constant ap_const_lv19_32 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000110010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_img_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_vld_in : STD_LOGIC;
    signal in_img_V_0_vld_out : STD_LOGIC;
    signal in_img_V_0_ack_in : STD_LOGIC;
    signal in_img_V_0_ack_out : STD_LOGIC;
    signal in_img_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_sel_rd : STD_LOGIC := '0';
    signal in_img_V_0_sel_wr : STD_LOGIC := '0';
    signal in_img_V_0_sel : STD_LOGIC;
    signal in_img_V_0_load_A : STD_LOGIC;
    signal in_img_V_0_load_B : STD_LOGIC;
    signal in_img_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_img_V_0_state_cmp_full : STD_LOGIC;
    signal out_img_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal out_img_V_1_vld_in : STD_LOGIC;
    signal out_img_V_1_vld_out : STD_LOGIC;
    signal out_img_V_1_ack_in : STD_LOGIC;
    signal out_img_V_1_ack_out : STD_LOGIC;
    signal out_img_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal out_img_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal out_img_V_1_sel_rd : STD_LOGIC := '0';
    signal out_img_V_1_sel_wr : STD_LOGIC := '0';
    signal out_img_V_1_sel : STD_LOGIC;
    signal out_img_V_1_load_A : STD_LOGIC;
    signal out_img_V_1_load_B : STD_LOGIC;
    signal out_img_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_img_V_1_state_cmp_full : STD_LOGIC;
    signal kernel_h_V_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_sum_V : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    signal kernel_off_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_0_ce0 : STD_LOGIC;
    signal line_buffer_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_0_ce1 : STD_LOGIC;
    signal line_buffer_V_0_we1 : STD_LOGIC;
    signal window_V_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce0 : STD_LOGIC;
    signal line_buffer_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_1_ce1 : STD_LOGIC;
    signal line_buffer_V_1_we1 : STD_LOGIC;
    signal window_V_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_ce0 : STD_LOGIC;
    signal line_buffer_V_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_2_ce1 : STD_LOGIC;
    signal line_buffer_V_2_we1 : STD_LOGIC;
    signal window_V_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_3_ce0 : STD_LOGIC;
    signal line_buffer_V_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_3_ce1 : STD_LOGIC;
    signal line_buffer_V_3_we1 : STD_LOGIC;
    signal window_V_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_4_ce0 : STD_LOGIC;
    signal line_buffer_V_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_4_ce1 : STD_LOGIC;
    signal line_buffer_V_4_we1 : STD_LOGIC;
    signal window_V_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_5_ce0 : STD_LOGIC;
    signal line_buffer_V_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_5_ce1 : STD_LOGIC;
    signal line_buffer_V_5_we1 : STD_LOGIC;
    signal window_V_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_v_V_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal convolution_buffer_V_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal convolution_buffer_V_2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal kernel_h_V_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal convolution_buffer_V_3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal kernel_h_V_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal convolution_buffer_V_4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal kernel_h_V_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal convolution_buffer_V_5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal kernel_h_V_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal convolution_buffer_V_6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal kernel_h_V_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_h_V_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal in_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond_reg_1368 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal or_cond1_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal or_cond1_reg_1372_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_326 : STD_LOGIC_VECTOR (18 downto 0);
    signal iteration_reg_337 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_reg_348 : STD_LOGIC_VECTOR (8 downto 0);
    signal iteration_1_reg_359 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_reg_370 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_386 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state38_io : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state39_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_9_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1334 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_415_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal col_mid2_fu_441_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_mid2_reg_1306 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_mid2_reg_1306_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal iteration_mid2_fu_495_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_mid2_fu_503_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1322_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1326 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1334_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1338_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_575_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_reg_1347 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_reg_1347_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_584_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_reg_1356 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_reg_1356_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1360_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1364_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1368_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1372_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_628_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_1_fu_634_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_0_addr_reg_1386 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_addr_reg_1392 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_addr_reg_1398 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_3_addr_reg_1404 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_4_addr_reg_1410 : STD_LOGIC_VECTOR (9 downto 0);
    signal in_temp_V_reg_1421 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_h_V_0_loc_1_l_1_reg_1427 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_sum_V_load_reg_1432 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter27_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter28_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter29_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter30_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter31_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter32_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter33_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter34_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_1437_pp0_iter35_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_fu_1168_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal tmp_12_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_v_V_6_fu_979_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal kernel_h_V_0_loc_1_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_1_fu_556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_j_1_fu_547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_421_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_s_fu_449_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_mid1_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_mid1_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal iteration_1_mid2_fu_433_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_s_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_541_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_mid2_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_mid2_fu_487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_831_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_831_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_831_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_s_fu_857_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_s_fu_857_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_s_fu_857_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_931_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_fu_931_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_fu_931_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1183_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1192_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1174_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1201_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_cast_fu_966_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp8_cast_fu_963_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp7_fu_969_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp7_cast_fu_975_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp5_cast_fu_960_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_4_1_fu_1218_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_4_3_fu_1234_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1210_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1256_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp14_cast_fu_1127_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1241_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_fu_1130_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_fu_1130_p2 : signal is "no";
    signal tmp12_cast_fu_1135_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp10_cast_fu_1124_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal temp_h_V_fu_1139_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1158_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1158_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_1164_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1174_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1183_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1192_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1225_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_4_5_fu_1250_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1158_ce : STD_LOGIC;
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1174_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1183_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1192_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1201_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_931_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_831_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_s_fu_857_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_1478 : BOOLEAN;
    signal ap_condition_1483 : BOOLEAN;
    signal ap_condition_1476 : BOOLEAN;
    signal ap_condition_1491 : BOOLEAN;
    signal ap_condition_1489 : BOOLEAN;

    component sep_convolution_fhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sep_convolution_fibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component sep_convolution_fjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component sep_convolution_fkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component sep_convolution_flbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component sep_convolution_fmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component sep_convolution_fncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component sep_convolution_fbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    line_buffer_V_0_U : component sep_convolution_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_0_address0,
        ce0 => line_buffer_V_0_ce0,
        q0 => line_buffer_V_0_q0,
        address1 => line_buffer_V_0_addr_reg_1386,
        ce1 => line_buffer_V_0_ce1,
        we1 => line_buffer_V_0_we1,
        d1 => line_buffer_V_1_q0);

    line_buffer_V_1_U : component sep_convolution_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_1_address0,
        ce0 => line_buffer_V_1_ce0,
        q0 => line_buffer_V_1_q0,
        address1 => line_buffer_V_1_addr_reg_1392,
        ce1 => line_buffer_V_1_ce1,
        we1 => line_buffer_V_1_we1,
        d1 => line_buffer_V_2_q0);

    line_buffer_V_2_U : component sep_convolution_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_2_address0,
        ce0 => line_buffer_V_2_ce0,
        q0 => line_buffer_V_2_q0,
        address1 => line_buffer_V_2_addr_reg_1398,
        ce1 => line_buffer_V_2_ce1,
        we1 => line_buffer_V_2_we1,
        d1 => line_buffer_V_3_q0);

    line_buffer_V_3_U : component sep_convolution_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_3_address0,
        ce0 => line_buffer_V_3_ce0,
        q0 => line_buffer_V_3_q0,
        address1 => line_buffer_V_3_addr_reg_1404,
        ce1 => line_buffer_V_3_ce1,
        we1 => line_buffer_V_3_we1,
        d1 => line_buffer_V_4_q0);

    line_buffer_V_4_U : component sep_convolution_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_4_address0,
        ce0 => line_buffer_V_4_ce0,
        q0 => line_buffer_V_4_q0,
        address1 => line_buffer_V_4_addr_reg_1410,
        ce1 => line_buffer_V_4_ce1,
        we1 => line_buffer_V_4_we1,
        d1 => line_buffer_V_5_q0);

    line_buffer_V_5_U : component sep_convolution_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_5_address0,
        ce0 => line_buffer_V_5_ce0,
        q0 => line_buffer_V_5_q0,
        address1 => line_buffer_V_5_address1,
        ce1 => line_buffer_V_5_ce1,
        we1 => line_buffer_V_5_we1,
        d1 => in_temp_V_reg_1421);

    sep_convolution_fhbi_U1 : component sep_convolution_fhbi
    generic map (
        ID => 1,
        NUM_STAGE => 34,
        din0_WIDTH => 30,
        din1_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1158_p0,
        din1 => kernel_sum_V_load_reg_1432,
        ce => grp_fu_1158_ce,
        dout => grp_fu_1158_p2);

    sep_convolution_fibs_U2 : component sep_convolution_fibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_v_V_2,
        din1 => grp_fu_1174_p1,
        din2 => r_V_fu_831_p2,
        dout => grp_fu_1174_p3);

    sep_convolution_fibs_U3 : component sep_convolution_fibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_v_V_3,
        din1 => grp_fu_1183_p1,
        din2 => r_V_7_fu_931_p2,
        dout => grp_fu_1183_p3);

    sep_convolution_fjbC_U4 : component sep_convolution_fjbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_v_V_4,
        din1 => grp_fu_1192_p1,
        din2 => grp_fu_1183_p3,
        dout => grp_fu_1192_p3);

    sep_convolution_fibs_U5 : component sep_convolution_fibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_v_V_6,
        din1 => grp_fu_1201_p1,
        din2 => r_V_s_fu_857_p2,
        dout => grp_fu_1201_p3);

    sep_convolution_fkbM_U6 : component sep_convolution_fkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => convolution_buffer_V_1,
        din1 => kernel_h_V_0_loc_1_l_1_reg_1427,
        din2 => grp_fu_1225_p3,
        dout => grp_fu_1210_p3);

    sep_convolution_flbW_U7 : component sep_convolution_flbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        dout_WIDTH => 27)
    port map (
        din0 => convolution_buffer_V_2,
        din1 => kernel_h_V_1,
        dout => r_V_4_1_fu_1218_p2);

    sep_convolution_fmb6_U8 : component sep_convolution_fmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        din2_WIDTH => 27,
        dout_WIDTH => 28)
    port map (
        din0 => convolution_buffer_V_3,
        din1 => kernel_h_V_2,
        din2 => r_V_4_1_fu_1218_p2,
        dout => grp_fu_1225_p3);

    sep_convolution_flbW_U9 : component sep_convolution_flbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        dout_WIDTH => 27)
    port map (
        din0 => convolution_buffer_V_4,
        din1 => kernel_h_V_3,
        dout => r_V_4_3_fu_1234_p2);

    sep_convolution_fmb6_U10 : component sep_convolution_fmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        din2_WIDTH => 27,
        dout_WIDTH => 28)
    port map (
        din0 => convolution_buffer_V_5,
        din1 => kernel_h_V_4,
        din2 => r_V_4_3_fu_1234_p2,
        dout => grp_fu_1241_p3);

    sep_convolution_flbW_U11 : component sep_convolution_flbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        dout_WIDTH => 27)
    port map (
        din0 => convolution_buffer_V_6,
        din1 => kernel_h_V_5,
        dout => r_V_4_5_fu_1250_p2);

    sep_convolution_fncg_U12 : component sep_convolution_fncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        din2_WIDTH => 27,
        dout_WIDTH => 27)
    port map (
        din0 => temp_v_V_6_fu_979_p2,
        din1 => kernel_h_V_6,
        din2 => r_V_4_5_fu_1250_p2,
        dout => grp_fu_1256_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    in_img_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_img_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_img_V_0_ack_out = ap_const_logic_1) and (in_img_V_0_vld_out = ap_const_logic_1))) then 
                                        in_img_V_0_sel_rd <= not(in_img_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_img_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_img_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_img_V_0_ack_in = ap_const_logic_1) and (in_img_V_0_vld_in = ap_const_logic_1))) then 
                                        in_img_V_0_sel_wr <= not(in_img_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_img_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_img_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_img_V_0_state = ap_const_lv2_2) and (in_img_V_0_vld_in = ap_const_logic_0)) or ((in_img_V_0_state = ap_const_lv2_3) and (in_img_V_0_vld_in = ap_const_logic_0) and (in_img_V_0_ack_out = ap_const_logic_1)))) then 
                    in_img_V_0_state <= ap_const_lv2_2;
                elsif ((((in_img_V_0_state = ap_const_lv2_1) and (in_img_V_0_ack_out = ap_const_logic_0)) or ((in_img_V_0_state = ap_const_lv2_3) and (in_img_V_0_ack_out = ap_const_logic_0) and (in_img_V_0_vld_in = ap_const_logic_1)))) then 
                    in_img_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_img_V_0_vld_in = ap_const_logic_0) and (in_img_V_0_ack_out = ap_const_logic_1))) and not(((in_img_V_0_ack_out = ap_const_logic_0) and (in_img_V_0_vld_in = ap_const_logic_1))) and (in_img_V_0_state = ap_const_lv2_3)) or ((in_img_V_0_state = ap_const_lv2_1) and (in_img_V_0_ack_out = ap_const_logic_1)) or ((in_img_V_0_state = ap_const_lv2_2) and (in_img_V_0_vld_in = ap_const_logic_1)))) then 
                    in_img_V_0_state <= ap_const_lv2_3;
                else 
                    in_img_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_img_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_img_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_img_V_1_ack_out = ap_const_logic_1) and (out_img_V_1_vld_out = ap_const_logic_1))) then 
                                        out_img_V_1_sel_rd <= not(out_img_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_img_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_img_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_img_V_1_ack_in = ap_const_logic_1) and (out_img_V_1_vld_in = ap_const_logic_1))) then 
                                        out_img_V_1_sel_wr <= not(out_img_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_img_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_img_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_img_V_1_state = ap_const_lv2_2) and (out_img_V_1_vld_in = ap_const_logic_0)) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_1_vld_in = ap_const_logic_0) and (out_img_V_1_ack_out = ap_const_logic_1)))) then 
                    out_img_V_1_state <= ap_const_lv2_2;
                elsif ((((out_img_V_1_state = ap_const_lv2_1) and (out_img_V_1_ack_out = ap_const_logic_0)) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_1_ack_out = ap_const_logic_0) and (out_img_V_1_vld_in = ap_const_logic_1)))) then 
                    out_img_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_img_V_1_vld_in = ap_const_logic_0) and (out_img_V_1_ack_out = ap_const_logic_1))) and not(((out_img_V_1_ack_out = ap_const_logic_0) and (out_img_V_1_vld_in = ap_const_logic_1))) and (out_img_V_1_state = ap_const_lv2_3)) or ((out_img_V_1_state = ap_const_lv2_1) and (out_img_V_1_ack_out = ap_const_logic_1)) or ((out_img_V_1_state = ap_const_lv2_2) and (out_img_V_1_vld_in = ap_const_logic_1)))) then 
                    out_img_V_1_state <= ap_const_lv2_3;
                else 
                    out_img_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    col_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                col_reg_370 <= col_1_fu_634_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                col_reg_370 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    i_1_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_511_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_1_fu_166 <= tmp_2_i_1_fu_556_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_fu_166 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_326 <= indvar_flatten_next_fu_415_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_326 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    iteration_1_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iteration_1_reg_359 <= tmp_20_fu_628_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                iteration_1_reg_359 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    iteration_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iteration_reg_337 <= iteration_mid2_fu_495_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                iteration_reg_337 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    j_1_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_511_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_1_fu_170 <= tmp_14_fu_588_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_1_fu_170 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    kernel_h_V_0_loc_1_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334 = ap_const_lv1_1) and (tmp_9_reg_1322 = ap_const_lv1_1) and (tmp_21_reg_1356 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_h_V_0_loc_1_fu_162 <= kernel_config_V_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_h_V_0_loc_1_fu_162 <= kernel_h_V_0;
            end if; 
        end if;
    end process;

    kernel_v_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1489)) then
                if (((tmp_13_reg_1360_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1))) then 
                    kernel_v_V_0 <= kernel_h_V_0_loc_1_fu_162;
                elsif ((ap_const_boolean_1 = ap_condition_1491)) then 
                    kernel_v_V_0 <= reg_386;
                end if;
            end if; 
        end if;
    end process;

    row_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                row_reg_348 <= row_mid2_fu_503_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_reg_348 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                col_mid2_reg_1306 <= col_mid2_fu_441_p3;
                or_cond1_reg_1372 <= or_cond1_fu_622_p2;
                or_cond_reg_1368 <= or_cond_fu_610_p2;
                tmp_15_reg_1364 <= tmp_15_fu_604_p2;
                tmp_9_reg_1322 <= tmp_9_fu_511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                col_mid2_reg_1306_pp0_iter1_reg <= col_mid2_reg_1306;
                or_cond1_reg_1372_pp0_iter1_reg <= or_cond1_reg_1372;
                or_cond_reg_1368_pp0_iter1_reg <= or_cond_reg_1368;
                tmp_11_reg_1338_pp0_iter1_reg <= tmp_11_reg_1338;
                tmp_13_reg_1360_pp0_iter1_reg <= tmp_13_reg_1360;
                tmp_15_reg_1364_pp0_iter1_reg <= tmp_15_reg_1364;
                tmp_21_reg_1356_pp0_iter1_reg <= tmp_21_reg_1356;
                tmp_22_reg_1347_pp0_iter1_reg <= tmp_22_reg_1347;
                tmp_3_reg_1334_pp0_iter1_reg <= tmp_3_reg_1334;
                tmp_9_reg_1322_pp0_iter1_reg <= tmp_9_reg_1322;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond1_reg_1372_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                convolution_buffer_V_1 <= convolution_buffer_V_2;
                convolution_buffer_V_2 <= convolution_buffer_V_3;
                convolution_buffer_V_3 <= convolution_buffer_V_4;
                convolution_buffer_V_4 <= convolution_buffer_V_5;
                convolution_buffer_V_5 <= convolution_buffer_V_6;
                convolution_buffer_V_6 <= temp_v_V_6_fu_979_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_img_V_0_load_A = ap_const_logic_1)) then
                in_img_V_0_payload_A <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_img_V_0_load_B = ap_const_logic_1)) then
                in_img_V_0_payload_B <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1368 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in_temp_V_reg_1421 <= in_img_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334 = ap_const_lv1_1) and (tmp_9_reg_1322 = ap_const_lv1_1) and (tmp_21_reg_1356 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_h_V_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond1_reg_1372_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                kernel_h_V_0_loc_1_l_1_reg_1427 <= kernel_h_V_0_loc_1_fu_162;
                kernel_off_V_load_reg_1437 <= kernel_off_V;
                kernel_sum_V_load_reg_1432 <= kernel_sum_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_h_V_1 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_h_V_2 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_h_V_3 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_h_V_4 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_h_V_5 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_7)) or ((tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_21_reg_1356_pp0_iter1_reg = ap_const_lv3_6))))) then
                kernel_h_V_6 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1330 = ap_const_lv1_1) and (tmp_8_reg_1326 = ap_const_lv1_0) and (tmp_9_reg_1322 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_off_V <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                kernel_off_V_load_reg_1437_pp0_iter10_reg <= kernel_off_V_load_reg_1437_pp0_iter9_reg;
                kernel_off_V_load_reg_1437_pp0_iter11_reg <= kernel_off_V_load_reg_1437_pp0_iter10_reg;
                kernel_off_V_load_reg_1437_pp0_iter12_reg <= kernel_off_V_load_reg_1437_pp0_iter11_reg;
                kernel_off_V_load_reg_1437_pp0_iter13_reg <= kernel_off_V_load_reg_1437_pp0_iter12_reg;
                kernel_off_V_load_reg_1437_pp0_iter14_reg <= kernel_off_V_load_reg_1437_pp0_iter13_reg;
                kernel_off_V_load_reg_1437_pp0_iter15_reg <= kernel_off_V_load_reg_1437_pp0_iter14_reg;
                kernel_off_V_load_reg_1437_pp0_iter16_reg <= kernel_off_V_load_reg_1437_pp0_iter15_reg;
                kernel_off_V_load_reg_1437_pp0_iter17_reg <= kernel_off_V_load_reg_1437_pp0_iter16_reg;
                kernel_off_V_load_reg_1437_pp0_iter18_reg <= kernel_off_V_load_reg_1437_pp0_iter17_reg;
                kernel_off_V_load_reg_1437_pp0_iter19_reg <= kernel_off_V_load_reg_1437_pp0_iter18_reg;
                kernel_off_V_load_reg_1437_pp0_iter20_reg <= kernel_off_V_load_reg_1437_pp0_iter19_reg;
                kernel_off_V_load_reg_1437_pp0_iter21_reg <= kernel_off_V_load_reg_1437_pp0_iter20_reg;
                kernel_off_V_load_reg_1437_pp0_iter22_reg <= kernel_off_V_load_reg_1437_pp0_iter21_reg;
                kernel_off_V_load_reg_1437_pp0_iter23_reg <= kernel_off_V_load_reg_1437_pp0_iter22_reg;
                kernel_off_V_load_reg_1437_pp0_iter24_reg <= kernel_off_V_load_reg_1437_pp0_iter23_reg;
                kernel_off_V_load_reg_1437_pp0_iter25_reg <= kernel_off_V_load_reg_1437_pp0_iter24_reg;
                kernel_off_V_load_reg_1437_pp0_iter26_reg <= kernel_off_V_load_reg_1437_pp0_iter25_reg;
                kernel_off_V_load_reg_1437_pp0_iter27_reg <= kernel_off_V_load_reg_1437_pp0_iter26_reg;
                kernel_off_V_load_reg_1437_pp0_iter28_reg <= kernel_off_V_load_reg_1437_pp0_iter27_reg;
                kernel_off_V_load_reg_1437_pp0_iter29_reg <= kernel_off_V_load_reg_1437_pp0_iter28_reg;
                kernel_off_V_load_reg_1437_pp0_iter30_reg <= kernel_off_V_load_reg_1437_pp0_iter29_reg;
                kernel_off_V_load_reg_1437_pp0_iter31_reg <= kernel_off_V_load_reg_1437_pp0_iter30_reg;
                kernel_off_V_load_reg_1437_pp0_iter32_reg <= kernel_off_V_load_reg_1437_pp0_iter31_reg;
                kernel_off_V_load_reg_1437_pp0_iter33_reg <= kernel_off_V_load_reg_1437_pp0_iter32_reg;
                kernel_off_V_load_reg_1437_pp0_iter34_reg <= kernel_off_V_load_reg_1437_pp0_iter33_reg;
                kernel_off_V_load_reg_1437_pp0_iter35_reg <= kernel_off_V_load_reg_1437_pp0_iter34_reg;
                kernel_off_V_load_reg_1437_pp0_iter3_reg <= kernel_off_V_load_reg_1437;
                kernel_off_V_load_reg_1437_pp0_iter4_reg <= kernel_off_V_load_reg_1437_pp0_iter3_reg;
                kernel_off_V_load_reg_1437_pp0_iter5_reg <= kernel_off_V_load_reg_1437_pp0_iter4_reg;
                kernel_off_V_load_reg_1437_pp0_iter6_reg <= kernel_off_V_load_reg_1437_pp0_iter5_reg;
                kernel_off_V_load_reg_1437_pp0_iter7_reg <= kernel_off_V_load_reg_1437_pp0_iter6_reg;
                kernel_off_V_load_reg_1437_pp0_iter8_reg <= kernel_off_V_load_reg_1437_pp0_iter7_reg;
                kernel_off_V_load_reg_1437_pp0_iter9_reg <= kernel_off_V_load_reg_1437_pp0_iter8_reg;
                or_cond1_reg_1372_pp0_iter10_reg <= or_cond1_reg_1372_pp0_iter9_reg;
                or_cond1_reg_1372_pp0_iter11_reg <= or_cond1_reg_1372_pp0_iter10_reg;
                or_cond1_reg_1372_pp0_iter12_reg <= or_cond1_reg_1372_pp0_iter11_reg;
                or_cond1_reg_1372_pp0_iter13_reg <= or_cond1_reg_1372_pp0_iter12_reg;
                or_cond1_reg_1372_pp0_iter14_reg <= or_cond1_reg_1372_pp0_iter13_reg;
                or_cond1_reg_1372_pp0_iter15_reg <= or_cond1_reg_1372_pp0_iter14_reg;
                or_cond1_reg_1372_pp0_iter16_reg <= or_cond1_reg_1372_pp0_iter15_reg;
                or_cond1_reg_1372_pp0_iter17_reg <= or_cond1_reg_1372_pp0_iter16_reg;
                or_cond1_reg_1372_pp0_iter18_reg <= or_cond1_reg_1372_pp0_iter17_reg;
                or_cond1_reg_1372_pp0_iter19_reg <= or_cond1_reg_1372_pp0_iter18_reg;
                or_cond1_reg_1372_pp0_iter20_reg <= or_cond1_reg_1372_pp0_iter19_reg;
                or_cond1_reg_1372_pp0_iter21_reg <= or_cond1_reg_1372_pp0_iter20_reg;
                or_cond1_reg_1372_pp0_iter22_reg <= or_cond1_reg_1372_pp0_iter21_reg;
                or_cond1_reg_1372_pp0_iter23_reg <= or_cond1_reg_1372_pp0_iter22_reg;
                or_cond1_reg_1372_pp0_iter24_reg <= or_cond1_reg_1372_pp0_iter23_reg;
                or_cond1_reg_1372_pp0_iter25_reg <= or_cond1_reg_1372_pp0_iter24_reg;
                or_cond1_reg_1372_pp0_iter26_reg <= or_cond1_reg_1372_pp0_iter25_reg;
                or_cond1_reg_1372_pp0_iter27_reg <= or_cond1_reg_1372_pp0_iter26_reg;
                or_cond1_reg_1372_pp0_iter28_reg <= or_cond1_reg_1372_pp0_iter27_reg;
                or_cond1_reg_1372_pp0_iter29_reg <= or_cond1_reg_1372_pp0_iter28_reg;
                or_cond1_reg_1372_pp0_iter2_reg <= or_cond1_reg_1372_pp0_iter1_reg;
                or_cond1_reg_1372_pp0_iter30_reg <= or_cond1_reg_1372_pp0_iter29_reg;
                or_cond1_reg_1372_pp0_iter31_reg <= or_cond1_reg_1372_pp0_iter30_reg;
                or_cond1_reg_1372_pp0_iter32_reg <= or_cond1_reg_1372_pp0_iter31_reg;
                or_cond1_reg_1372_pp0_iter33_reg <= or_cond1_reg_1372_pp0_iter32_reg;
                or_cond1_reg_1372_pp0_iter34_reg <= or_cond1_reg_1372_pp0_iter33_reg;
                or_cond1_reg_1372_pp0_iter35_reg <= or_cond1_reg_1372_pp0_iter34_reg;
                or_cond1_reg_1372_pp0_iter36_reg <= or_cond1_reg_1372_pp0_iter35_reg;
                or_cond1_reg_1372_pp0_iter3_reg <= or_cond1_reg_1372_pp0_iter2_reg;
                or_cond1_reg_1372_pp0_iter4_reg <= or_cond1_reg_1372_pp0_iter3_reg;
                or_cond1_reg_1372_pp0_iter5_reg <= or_cond1_reg_1372_pp0_iter4_reg;
                or_cond1_reg_1372_pp0_iter6_reg <= or_cond1_reg_1372_pp0_iter5_reg;
                or_cond1_reg_1372_pp0_iter7_reg <= or_cond1_reg_1372_pp0_iter6_reg;
                or_cond1_reg_1372_pp0_iter8_reg <= or_cond1_reg_1372_pp0_iter7_reg;
                or_cond1_reg_1372_pp0_iter9_reg <= or_cond1_reg_1372_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1326 = ap_const_lv1_1) and (tmp_9_reg_1322 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_V <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_v_V_1 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_v_V_2 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_v_V_3 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_v_V_4 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_v_V_5 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_7)) or ((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_6))))) then
                kernel_v_V_6 <= reg_386;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_15_reg_1364 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                line_buffer_V_0_addr_reg_1386 <= tmp_16_fu_663_p1(10 - 1 downto 0);
                line_buffer_V_1_addr_reg_1392 <= tmp_16_fu_663_p1(10 - 1 downto 0);
                line_buffer_V_2_addr_reg_1398 <= tmp_16_fu_663_p1(10 - 1 downto 0);
                line_buffer_V_3_addr_reg_1404 <= tmp_16_fu_663_p1(10 - 1 downto 0);
                line_buffer_V_4_addr_reg_1410 <= tmp_16_fu_663_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_img_V_1_load_A = ap_const_logic_1)) then
                out_img_V_1_payload_A <= r_V_9_fu_1168_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_img_V_1_load_B = ap_const_logic_1)) then
                out_img_V_1_payload_B <= r_V_9_fu_1168_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_3_reg_1334 = ap_const_lv1_1) and (tmp_9_reg_1322 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_11_reg_1338 = ap_const_lv1_1) and (tmp_9_reg_1322 = ap_const_lv1_1) and (tmp_3_reg_1334 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_386 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_511_p2 = ap_const_lv1_1) and (tmp_3_fu_564_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_11_reg_1338 <= grp_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_564_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_13_reg_1360 <= grp_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_564_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_21_reg_1356 <= tmp_21_fu_584_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_381_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1) and (tmp_3_fu_564_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_22_reg_1347 <= tmp_22_fu_575_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_511_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_3_reg_1334 <= tmp_3_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_517_p2 = ap_const_lv1_0) and (tmp_9_fu_511_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_4_reg_1330 <= tmp_4_fu_523_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_511_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_8_reg_1326 <= tmp_8_fu_517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_15_reg_1364_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                window_V_0 <= line_buffer_V_0_q0;
                window_V_1 <= line_buffer_V_1_q0;
                window_V_2 <= line_buffer_V_2_q0;
                window_V_3 <= line_buffer_V_3_q0;
                window_V_4 <= line_buffer_V_4_q0;
                window_V_5 <= line_buffer_V_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_1368_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                window_V_6 <= in_temp_V_reg_1421;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, out_img_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, exitcond_flatten_fu_409_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_CS_fsm_state40)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (out_img_V_1_ack_in = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state40 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_img_V_0_vld_out, ap_enable_reg_pp0_iter1, or_cond_reg_1368)
    begin
                ap_block_pp0_stage0_01001 <= ((or_cond_reg_1368 = ap_const_lv1_1) and (in_img_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_img_V_0_vld_out, ap_enable_reg_pp0_iter1, or_cond_reg_1368, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_block_state38_io, ap_block_state39_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state39_io) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((or_cond_reg_1368 = ap_const_lv1_1) and (in_img_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_img_V_0_vld_out, ap_enable_reg_pp0_iter1, or_cond_reg_1368, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_block_state38_io, ap_block_state39_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state39_io) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((or_cond_reg_1368 = ap_const_lv1_1) and (in_img_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_io_assign_proc : process(out_img_V_1_ack_in, or_cond1_reg_1372_pp0_iter35_reg)
    begin
                ap_block_state38_io <= ((or_cond1_reg_1372_pp0_iter35_reg = ap_const_lv1_1) and (out_img_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state38_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state39_io_assign_proc : process(out_img_V_1_ack_in, or_cond1_reg_1372_pp0_iter36_reg)
    begin
                ap_block_state39_io <= ((or_cond1_reg_1372_pp0_iter36_reg = ap_const_lv1_1) and (out_img_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state39_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_img_V_0_vld_out, or_cond_reg_1368)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((or_cond_reg_1368 = ap_const_lv1_1) and (in_img_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1476_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, exitcond_flatten_fu_409_p2, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_1476 <= ((exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_1478_assign_proc : process(tmp_9_fu_511_p2, tmp_8_fu_517_p2, tmp_4_fu_523_p2)
    begin
                ap_condition_1478 <= ((tmp_4_fu_523_p2 = ap_const_lv1_1) and (tmp_8_fu_517_p2 = ap_const_lv1_0) and (tmp_9_fu_511_p2 = ap_const_lv1_0));
    end process;


    ap_condition_1483_assign_proc : process(tmp_9_fu_511_p2, tmp_3_fu_564_p2, grp_fu_381_p2)
    begin
                ap_condition_1483 <= ((grp_fu_381_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1) and (tmp_3_fu_564_p2 = ap_const_lv1_0));
    end process;


    ap_condition_1489_assign_proc : process(ap_block_pp0_stage0_11001, tmp_9_reg_1322_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1489 <= ((tmp_9_reg_1322_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_1491_assign_proc : process(tmp_3_reg_1334_pp0_iter1_reg, tmp_11_reg_1338_pp0_iter1_reg, tmp_22_reg_1347_pp0_iter1_reg)
    begin
                ap_condition_1491 <= ((tmp_11_reg_1338_pp0_iter1_reg = ap_const_lv1_1) and (tmp_3_reg_1334_pp0_iter1_reg = ap_const_lv1_0) and (tmp_22_reg_1347_pp0_iter1_reg = ap_const_lv3_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_409_p2)
    begin
        if ((exitcond_flatten_fu_409_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(out_img_V_1_ack_in, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (out_img_V_1_ack_in = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(out_img_V_1_ack_in, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (out_img_V_1_ack_in = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    col_1_fu_634_p2 <= std_logic_vector(unsigned(col_mid2_fu_441_p3) + unsigned(ap_const_lv10_1));
    col_mid2_fu_441_p3 <= 
        ap_const_lv10_0 when (exitcond_fu_427_p2(0) = '1') else 
        col_reg_370;
    exitcond_flatten_fu_409_p2 <= "1" when (indvar_flatten_reg_326 = ap_const_lv19_4BD29) else "0";
    exitcond_fu_427_p2 <= "1" when (col_reg_370 = ap_const_lv10_283) else "0";

    grp_fu_1158_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1158_ce <= ap_const_logic_1;
        else 
            grp_fu_1158_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_1158_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_h_V_fu_1139_p2),30));

    grp_fu_1174_p1 <= grp_fu_1174_p10(8 - 1 downto 0);
    grp_fu_1174_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2),16));
    grp_fu_1183_p1 <= grp_fu_1183_p10(8 - 1 downto 0);
    grp_fu_1183_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3),16));
    grp_fu_1192_p1 <= grp_fu_1192_p10(8 - 1 downto 0);
    grp_fu_1192_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4),16));
    grp_fu_1201_p1 <= grp_fu_1201_p10(8 - 1 downto 0);
    grp_fu_1201_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_6),16));
    grp_fu_381_p2 <= "1" when (p_j_1_fu_547_p3 = ap_const_lv32_0) else "0";
    in_img_V_0_ack_in <= in_img_V_0_state(1);

    in_img_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_reg_1368, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_reg_1368 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_img_V_0_ack_out <= ap_const_logic_1;
        else 
            in_img_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_img_V_0_data_out_assign_proc : process(in_img_V_0_payload_A, in_img_V_0_payload_B, in_img_V_0_sel)
    begin
        if ((in_img_V_0_sel = ap_const_logic_1)) then 
            in_img_V_0_data_out <= in_img_V_0_payload_B;
        else 
            in_img_V_0_data_out <= in_img_V_0_payload_A;
        end if; 
    end process;

    in_img_V_0_load_A <= (in_img_V_0_state_cmp_full and not(in_img_V_0_sel_wr));
    in_img_V_0_load_B <= (in_img_V_0_state_cmp_full and in_img_V_0_sel_wr);
    in_img_V_0_sel <= in_img_V_0_sel_rd;
    in_img_V_0_state_cmp_full <= '0' when (in_img_V_0_state = ap_const_lv2_1) else '1';
    in_img_V_0_vld_in <= in_img_V_TVALID;
    in_img_V_0_vld_out <= in_img_V_0_state(0);

    in_img_V_TDATA_blk_n_assign_proc : process(in_img_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, or_cond_reg_1368)
    begin
        if (((or_cond_reg_1368 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_img_V_TDATA_blk_n <= in_img_V_0_state(0);
        else 
            in_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_img_V_TREADY <= in_img_V_0_state(1);
    indvar_flatten_next_fu_415_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_326) + unsigned(ap_const_lv19_1));
    iteration_1_mid2_fu_433_p3 <= 
        tmp_5_fu_421_p2 when (exitcond_fu_427_p2(0) = '1') else 
        iteration_1_reg_359;
    iteration_mid2_fu_495_p3 <= 
        tmp_5_fu_421_p2 when (exitcond_fu_427_p2(0) = '1') else 
        iteration_reg_337;

    kernel_config_V_address0_assign_proc : process(tmp_9_fu_511_p2, tmp_8_fu_517_p2, tmp_3_fu_564_p2, tmp_12_fu_570_p1, tmp_10_fu_579_p1, ap_condition_1478, ap_condition_1483, ap_condition_1476)
    begin
        if ((ap_const_boolean_1 = ap_condition_1476)) then
            if (((tmp_3_fu_564_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1))) then 
                kernel_config_V_address0 <= tmp_10_fu_579_p1(6 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1483)) then 
                kernel_config_V_address0 <= tmp_12_fu_570_p1(6 - 1 downto 0);
            elsif (((tmp_8_fu_517_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_0))) then 
                kernel_config_V_address0 <= ap_const_lv64_31(6 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1478)) then 
                kernel_config_V_address0 <= ap_const_lv64_32(6 - 1 downto 0);
            else 
                kernel_config_V_address0 <= "XXXXXX";
            end if;
        else 
            kernel_config_V_address0 <= "XXXXXX";
        end if; 
    end process;


    kernel_config_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, exitcond_flatten_fu_409_p2, ap_enable_reg_pp0_iter0, tmp_9_fu_511_p2, tmp_8_fu_517_p2, tmp_4_fu_523_p2, tmp_3_fu_564_p2, grp_fu_381_p2)
    begin
        if ((((tmp_3_fu_564_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((grp_fu_381_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_1) and (tmp_3_fu_564_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_8_fu_517_p2 = ap_const_lv1_1) and (tmp_9_fu_511_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_4_fu_523_p2 = ap_const_lv1_1) and (tmp_8_fu_517_p2 = ap_const_lv1_0) and (tmp_9_fu_511_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_409_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            kernel_config_V_ce0 <= ap_const_logic_1;
        else 
            kernel_config_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_0_address0 <= tmp_16_fu_663_p1(10 - 1 downto 0);

    line_buffer_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_15_reg_1364_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_15_reg_1364_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_0_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_address0 <= tmp_16_fu_663_p1(10 - 1 downto 0);

    line_buffer_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_15_reg_1364_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_15_reg_1364_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_address0 <= tmp_16_fu_663_p1(10 - 1 downto 0);

    line_buffer_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_15_reg_1364_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_15_reg_1364_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_2_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_3_address0 <= tmp_16_fu_663_p1(10 - 1 downto 0);

    line_buffer_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_3_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_3_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_15_reg_1364_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_15_reg_1364_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_3_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_4_address0 <= tmp_16_fu_663_p1(10 - 1 downto 0);

    line_buffer_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_4_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_4_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_4_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_15_reg_1364_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_15_reg_1364_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_4_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_5_address0 <= tmp_16_fu_663_p1(10 - 1 downto 0);
    line_buffer_V_5_address1 <= tmp_17_fu_800_p1(10 - 1 downto 0);

    line_buffer_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_5_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_5_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_5_we1_assign_proc : process(ap_block_pp0_stage0_11001, or_cond_reg_1368_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((or_cond_reg_1368_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_5_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_fu_622_p2 <= (tmp_7_mid2_fu_487_p3 and tmp_18_fu_616_p2);
    or_cond_fu_610_p2 <= (tmp_5_mid2_fu_467_p3 and tmp_15_fu_604_p2);
    out_img_V_1_ack_in <= out_img_V_1_state(1);
    out_img_V_1_ack_out <= out_img_V_TREADY;

    out_img_V_1_data_out_assign_proc : process(out_img_V_1_payload_A, out_img_V_1_payload_B, out_img_V_1_sel)
    begin
        if ((out_img_V_1_sel = ap_const_logic_1)) then 
            out_img_V_1_data_out <= out_img_V_1_payload_B;
        else 
            out_img_V_1_data_out <= out_img_V_1_payload_A;
        end if; 
    end process;

    out_img_V_1_load_A <= (out_img_V_1_state_cmp_full and not(out_img_V_1_sel_wr));
    out_img_V_1_load_B <= (out_img_V_1_state_cmp_full and out_img_V_1_sel_wr);
    out_img_V_1_sel <= out_img_V_1_sel_rd;
    out_img_V_1_state_cmp_full <= '0' when (out_img_V_1_state = ap_const_lv2_1) else '1';

    out_img_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter36, or_cond1_reg_1372_pp0_iter35_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond1_reg_1372_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            out_img_V_1_vld_in <= ap_const_logic_1;
        else 
            out_img_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_img_V_1_vld_out <= out_img_V_1_state(0);
    out_img_V_TDATA <= out_img_V_1_data_out;

    out_img_V_TDATA_blk_n_assign_proc : process(out_img_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter36, or_cond1_reg_1372_pp0_iter35_reg, ap_enable_reg_pp0_iter37, or_cond1_reg_1372_pp0_iter36_reg)
    begin
        if ((((or_cond1_reg_1372_pp0_iter36_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1)) or ((or_cond1_reg_1372_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            out_img_V_TDATA_blk_n <= out_img_V_1_state(1);
        else 
            out_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_img_V_TVALID <= out_img_V_1_state(0);
    p_j_1_fu_547_p3 <= 
        ap_const_lv32_0 when (tmp_s_fu_535_p2(0) = '1') else 
        j_1_fu_170;
    r_V_7_fu_931_p0 <= kernel_v_V_5;
    r_V_7_fu_931_p1 <= r_V_7_fu_931_p10(8 - 1 downto 0);
    r_V_7_fu_931_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5),16));
    r_V_7_fu_931_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_7_fu_931_p0) * signed('0' &r_V_7_fu_931_p1))), 16));
    r_V_9_fu_1168_p2 <= std_logic_vector(unsigned(tmp_23_fu_1164_p1) + unsigned(kernel_off_V_load_reg_1437_pp0_iter35_reg));
    r_V_fu_831_p0 <= kernel_v_V_0;
    r_V_fu_831_p1 <= r_V_fu_831_p10(8 - 1 downto 0);
    r_V_fu_831_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0),16));
    r_V_fu_831_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_fu_831_p0) * signed('0' &r_V_fu_831_p1))), 16));
    r_V_s_fu_857_p0 <= kernel_v_V_1;
    r_V_s_fu_857_p1 <= r_V_s_fu_857_p10(8 - 1 downto 0);
    r_V_s_fu_857_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1),16));
    r_V_s_fu_857_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_s_fu_857_p0) * signed('0' &r_V_s_fu_857_p1))), 16));
    row_mid2_fu_503_p3 <= 
        row_s_fu_449_p2 when (exitcond_fu_427_p2(0) = '1') else 
        row_reg_348;
    row_s_fu_449_p2 <= std_logic_vector(unsigned(row_reg_348) + unsigned(ap_const_lv9_1));
    temp_h_V_fu_1139_p2 <= std_logic_vector(signed(tmp12_cast_fu_1135_p1) + signed(tmp10_cast_fu_1124_p1));
    temp_v_V_6_fu_979_p2 <= std_logic_vector(signed(tmp7_cast_fu_975_p1) + signed(tmp5_cast_fu_960_p1));
        tmp10_cast_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1210_p3),29));

        tmp12_cast_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1130_p2),29));

        tmp14_cast_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1256_p3),28));

        tmp5_cast_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1192_p3),19));

        tmp7_cast_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp7_fu_969_p2),19));

    tmp7_fu_969_p2 <= std_logic_vector(signed(tmp9_cast_fu_966_p1) + signed(tmp8_cast_fu_963_p1));
        tmp8_cast_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1174_p3),18));

        tmp9_cast_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1201_p3),18));

    tmp_10_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iteration_1_mid2_fu_433_p3),64));
    tmp_12_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iteration_1_mid2_fu_433_p3),64));
    tmp_14_fu_588_p2 <= std_logic_vector(unsigned(p_j_1_fu_547_p3) + unsigned(ap_const_lv32_1));
    tmp_15_fu_604_p2 <= "1" when (unsigned(col_mid2_fu_441_p3) < unsigned(ap_const_lv10_280)) else "0";
    tmp_16_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_mid2_reg_1306),64));
    tmp_17_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_mid2_reg_1306_pp0_iter1_reg),64));
    tmp_18_fu_616_p2 <= "1" when (unsigned(col_mid2_fu_441_p3) > unsigned(ap_const_lv10_2)) else "0";
    tmp_20_fu_628_p2 <= std_logic_vector(unsigned(iteration_1_mid2_fu_433_p3) + unsigned(ap_const_lv19_1));
    tmp_21_fu_584_p1 <= p_j_1_fu_547_p3(3 - 1 downto 0);
    tmp_22_fu_575_p1 <= tmp_2_i_1_fu_556_p3(3 - 1 downto 0);
    tmp_23_fu_1164_p1 <= grp_fu_1158_p2(8 - 1 downto 0);
    tmp_2_fu_541_p2 <= std_logic_vector(unsigned(i_1_fu_166) + unsigned(ap_const_lv32_1));
    tmp_2_i_1_fu_556_p3 <= 
        tmp_2_fu_541_p2 when (tmp_s_fu_535_p2(0) = '1') else 
        i_1_fu_166;
    tmp_3_fu_564_p2 <= "1" when (tmp_2_i_1_fu_556_p3 = ap_const_lv32_0) else "0";
    tmp_4_fu_523_p2 <= "1" when (iteration_1_mid2_fu_433_p3 = ap_const_lv19_32) else "0";
    tmp_5_fu_421_p2 <= std_logic_vector(unsigned(iteration_reg_337) + unsigned(ap_const_lv19_283));
    tmp_5_mid1_fu_455_p2 <= "1" when (unsigned(row_s_fu_449_p2) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_5_mid2_fu_467_p3 <= 
        tmp_5_mid1_fu_455_p2 when (exitcond_fu_427_p2(0) = '1') else 
        tmp_6_fu_461_p2;
    tmp_6_fu_461_p2 <= "1" when (unsigned(row_reg_348) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_7_fu_481_p2 <= "1" when (unsigned(row_reg_348) > unsigned(ap_const_lv9_2)) else "0";
    tmp_7_mid1_fu_475_p2 <= "1" when (unsigned(row_s_fu_449_p2) > unsigned(ap_const_lv9_2)) else "0";
    tmp_7_mid2_fu_487_p3 <= 
        tmp_7_mid1_fu_475_p2 when (exitcond_fu_427_p2(0) = '1') else 
        tmp_7_fu_481_p2;
    tmp_8_fu_517_p2 <= "1" when (iteration_1_mid2_fu_433_p3 = ap_const_lv19_31) else "0";
    tmp_9_fu_511_p2 <= "1" when (unsigned(iteration_1_mid2_fu_433_p3) < unsigned(ap_const_lv19_31)) else "0";
    tmp_fu_1130_p2 <= std_logic_vector(signed(tmp14_cast_fu_1127_p1) + signed(grp_fu_1241_p3));
    tmp_s_fu_535_p2 <= "1" when (signed(j_1_fu_170) > signed(ap_const_lv32_6)) else "0";
end behav;
