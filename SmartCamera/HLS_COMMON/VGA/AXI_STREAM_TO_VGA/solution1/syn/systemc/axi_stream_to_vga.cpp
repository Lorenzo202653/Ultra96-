// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "axi_stream_to_vga.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic axi_stream_to_vga::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic axi_stream_to_vga::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> axi_stream_to_vga::ap_ST_fsm_state1 = "1";
const sc_lv<5> axi_stream_to_vga::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> axi_stream_to_vga::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<5> axi_stream_to_vga::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<5> axi_stream_to_vga::ap_ST_fsm_state6 = "10000";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool axi_stream_to_vga::ap_const_boolean_1 = true;
const sc_lv<4> axi_stream_to_vga::ap_const_lv4_0 = "0000";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_1 = "1";
const bool axi_stream_to_vga::ap_const_boolean_0 = false;
const sc_lv<1> axi_stream_to_vga::ap_const_lv1_0 = "0";
const sc_lv<1> axi_stream_to_vga::ap_const_lv1_1 = "1";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_2 = "10";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_3 = "11";
const sc_lv<19> axi_stream_to_vga::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_0 = "0000000000";
const sc_lv<4> axi_stream_to_vga::ap_const_lv4_F = "1111";
const sc_lv<21> axi_stream_to_vga::ap_const_lv21_3 = "11";
const sc_lv<21> axi_stream_to_vga::ap_const_lv21_2 = "10";
const sc_lv<21> axi_stream_to_vga::ap_const_lv21_1 = "1";
const sc_lv<21> axi_stream_to_vga::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_4 = "100";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_7 = "111";
const sc_lv<4> axi_stream_to_vga::ap_const_lv4_1 = "1";
const sc_lv<4> axi_stream_to_vga::ap_const_lv4_E = "1110";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_9 = "1001";
const sc_lv<9> axi_stream_to_vga::ap_const_lv9_0 = "000000000";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_22 = "100010";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_203 = "1000000011";
const sc_lv<19> axi_stream_to_vga::ap_const_lv19_668A0 = "1100110100010100000";
const sc_lv<19> axi_stream_to_vga::ap_const_lv19_1 = "1";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_320 = "1100100000";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_3DE = "1111011110";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_3DD = "1111011101";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_1 = "1";
const sc_lv<11> axi_stream_to_vga::ap_const_lv11_770 = "11101110000";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_8F = "10001111";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_310 = "1100010000";
const sc_lv<32> axi_stream_to_vga::ap_const_lv32_5 = "101";
const sc_lv<10> axi_stream_to_vga::ap_const_lv10_5F = "1011111";

axi_stream_to_vga::axi_stream_to_vga(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_V);
    sensitive << ( or_cond2_reg_588 );
    sensitive << ( B_temp_V_read_assign_fu_130 );
    sensitive << ( B_V_preg );
    sensitive << ( ap_condition_251 );

    SC_METHOD(thread_G_V);
    sensitive << ( or_cond2_reg_588 );
    sensitive << ( G_temp_V_read_assign_fu_126 );
    sensitive << ( G_V_preg );
    sensitive << ( ap_condition_251 );

    SC_METHOD(thread_H_SYNC_V);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( or_cond2_reg_588 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( not_1_fu_498_p2 );
    sensitive << ( H_SYNC_V_preg );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_R_V);
    sensitive << ( or_cond2_reg_588 );
    sensitive << ( R_temp_V_read_assign_fu_122 );
    sensitive << ( R_V_preg );
    sensitive << ( ap_condition_251 );

    SC_METHOD(thread_V_SYNC_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( or_cond2_fu_447_p2 );
    sensitive << ( not_mid2_fu_376_p3 );
    sensitive << ( V_SYNC_V_preg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op71_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op71_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op71_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op96_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op96_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op101_read_state4 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op101_read_state4 );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op101_read_state4 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_predicate_op71_read_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_predicate_op96_read_state3 );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_predicate_op101_read_state4 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_251);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_314_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_196_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( indvar_flatten_reg_192 );
    sensitive << ( indvar_flatten_next_reg_572 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_x_phi_fu_218_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( x_reg_214 );
    sensitive << ( x_1_reg_595 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_y_phi_fu_207_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( y_reg_203 );
    sensitive << ( y_mid2_reg_583 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_predicate_op101_read_state4);
    sensitive << ( selftest_read_read_fu_134_p2 );
    sensitive << ( tmp_reg_559 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( or_cond2_reg_588 );

    SC_METHOD(thread_ap_predicate_op71_read_state2);
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( or_cond2_fu_447_p2 );
    sensitive << ( selftest_read_read_fu_134_p2 );
    sensitive << ( tmp_reg_559 );

    SC_METHOD(thread_ap_predicate_op96_read_state3);
    sensitive << ( selftest_read_read_fu_134_p2 );
    sensitive << ( tmp_reg_559 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( or_cond2_reg_588 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond_flatten_fu_314_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_196_p4 );

    SC_METHOD(thread_icmp1_fu_370_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_8_fu_360_p4 );

    SC_METHOD(thread_icmp_fu_290_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_280_p4 );

    SC_METHOD(thread_inStream_V_V_TDATA_blk_n);
    sensitive << ( inStream_V_V_TVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( or_cond2_fu_447_p2 );
    sensitive << ( selftest_read_read_fu_134_p2 );
    sensitive << ( tmp_reg_559 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( or_cond2_reg_588 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_inStream_V_V_TREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_predicate_op71_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_predicate_op101_read_state4 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_predicate_op96_read_state3 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_320_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_196_p4 );

    SC_METHOD(thread_not_1_fu_498_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_568 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( x_mid2_reg_577 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_not_mid2_fu_376_p3);
    sensitive << ( tmp_5_fu_326_p2 );
    sensitive << ( icmp1_fu_370_p2 );
    sensitive << ( icmp_fu_290_p2 );

    SC_METHOD(thread_op2_V_read_assign_fu_262_p2);
    sensitive << ( color_blinking_V );

    SC_METHOD(thread_or_cond2_fu_447_p2);
    sensitive << ( tmp2_mid2_fu_403_p3 );
    sensitive << ( tmp1_fu_441_p2 );

    SC_METHOD(thread_p_Val2_s_fu_423_p2);
    sensitive << ( tmp_5_cast_fu_419_p1 );

    SC_METHOD(thread_selftest_read_read_fu_134_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( selftest );

    SC_METHOD(thread_tmp1_fu_441_p2);
    sensitive << ( tmp_6_fu_429_p2 );
    sensitive << ( tmp_7_fu_435_p2 );

    SC_METHOD(thread_tmp2_fu_308_p2);
    sensitive << ( tmp_2_fu_296_p2 );
    sensitive << ( tmp_3_fu_302_p2 );

    SC_METHOD(thread_tmp2_mid1_fu_397_p2);
    sensitive << ( tmp_2_mid1_fu_385_p2 );
    sensitive << ( tmp_3_mid1_fu_391_p2 );

    SC_METHOD(thread_tmp2_mid2_fu_403_p3);
    sensitive << ( tmp_5_fu_326_p2 );
    sensitive << ( tmp2_mid1_fu_397_p2 );
    sensitive << ( tmp2_fu_308_p2 );

    SC_METHOD(thread_tmp_10_fu_471_p3);
    sensitive << ( p_Val2_s_fu_423_p2 );

    SC_METHOD(thread_tmp_1_i_fu_479_p1);
    sensitive << ( tmp_10_fu_471_p3 );

    SC_METHOD(thread_tmp_2_fu_296_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_y_phi_fu_207_p4 );

    SC_METHOD(thread_tmp_2_i_fu_483_p4);
    sensitive << ( tmp_1_i_fu_479_p1 );
    sensitive << ( tmp_9_fu_463_p3 );

    SC_METHOD(thread_tmp_2_mid1_fu_385_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( y_s_fu_354_p2 );

    SC_METHOD(thread_tmp_3_fu_302_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_y_phi_fu_207_p4 );

    SC_METHOD(thread_tmp_3_mid1_fu_391_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( y_s_fu_354_p2 );

    SC_METHOD(thread_tmp_4_fu_280_p4);
    sensitive << ( ap_phi_mux_y_phi_fu_207_p4 );

    SC_METHOD(thread_tmp_5_cast_fu_419_p1);
    sensitive << ( x_mid2_fu_332_p3 );

    SC_METHOD(thread_tmp_5_fu_326_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_x_phi_fu_218_p4 );

    SC_METHOD(thread_tmp_6_fu_429_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( x_mid2_fu_332_p3 );

    SC_METHOD(thread_tmp_6_i_fu_274_p2);
    sensitive << ( color_blinking_V );

    SC_METHOD(thread_tmp_7_fu_435_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( x_mid2_fu_332_p3 );

    SC_METHOD(thread_tmp_8_fu_360_p4);
    sensitive << ( y_s_fu_354_p2 );

    SC_METHOD(thread_tmp_9_fu_463_p3);
    sensitive << ( y_coordinate_V_mid2_fu_348_p2 );

    SC_METHOD(thread_x_1_fu_509_p2);
    sensitive << ( x_mid2_reg_577 );

    SC_METHOD(thread_x_mid2_fu_332_p3);
    sensitive << ( ap_phi_mux_x_phi_fu_218_p4 );
    sensitive << ( tmp_5_fu_326_p2 );

    SC_METHOD(thread_y_coordinate_V_mid2_fu_348_p2);
    sensitive << ( ap_phi_mux_y_phi_fu_207_p4 );
    sensitive << ( y_coordinate_V_mid2_s_fu_340_p3 );

    SC_METHOD(thread_y_coordinate_V_mid2_s_fu_340_p3);
    sensitive << ( tmp_5_fu_326_p2 );

    SC_METHOD(thread_y_mid2_fu_411_p3);
    sensitive << ( ap_phi_mux_y_phi_fu_207_p4 );
    sensitive << ( tmp_5_fu_326_p2 );
    sensitive << ( y_s_fu_354_p2 );

    SC_METHOD(thread_y_s_fu_354_p2);
    sensitive << ( ap_phi_mux_y_phi_fu_207_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_314_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    color_blinking_V = "0000";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    V_SYNC_V_preg = "0";
    H_SYNC_V_preg = "0";
    R_V_preg = "0000";
    G_V_preg = "0000";
    B_V_preg = "0000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "axi_stream_to_vga_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, selftest, "(port)selftest");
    sc_trace(mVcdFile, inStream_V_V_TDATA, "(port)inStream_V_V_TDATA");
    sc_trace(mVcdFile, inStream_V_V_TVALID, "(port)inStream_V_V_TVALID");
    sc_trace(mVcdFile, inStream_V_V_TREADY, "(port)inStream_V_V_TREADY");
    sc_trace(mVcdFile, R_V, "(port)R_V");
    sc_trace(mVcdFile, G_V, "(port)G_V");
    sc_trace(mVcdFile, B_V, "(port)B_V");
    sc_trace(mVcdFile, V_SYNC_V, "(port)V_SYNC_V");
    sc_trace(mVcdFile, H_SYNC_V, "(port)H_SYNC_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, color_blinking_V, "color_blinking_V");
    sc_trace(mVcdFile, inStream_V_V_TDATA_blk_n, "inStream_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_fu_314_p2, "exitcond_flatten_fu_314_p2");
    sc_trace(mVcdFile, or_cond2_fu_447_p2, "or_cond2_fu_447_p2");
    sc_trace(mVcdFile, selftest_read_read_fu_134_p2, "selftest_read_read_fu_134_p2");
    sc_trace(mVcdFile, tmp_reg_559, "tmp_reg_559");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond_flatten_reg_568, "exitcond_flatten_reg_568");
    sc_trace(mVcdFile, or_cond2_reg_588, "or_cond2_reg_588");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, indvar_flatten_reg_192, "indvar_flatten_reg_192");
    sc_trace(mVcdFile, y_reg_203, "y_reg_203");
    sc_trace(mVcdFile, x_reg_214, "x_reg_214");
    sc_trace(mVcdFile, op2_V_read_assign_fu_262_p2, "op2_V_read_assign_fu_262_p2");
    sc_trace(mVcdFile, op2_V_read_assign_reg_554, "op2_V_read_assign_reg_554");
    sc_trace(mVcdFile, tmp_6_i_fu_274_p2, "tmp_6_i_fu_274_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_563, "tmp_6_i_reg_563");
    sc_trace(mVcdFile, ap_predicate_op71_read_state2, "ap_predicate_op71_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_320_p2, "indvar_flatten_next_fu_320_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_572, "indvar_flatten_next_reg_572");
    sc_trace(mVcdFile, x_mid2_fu_332_p3, "x_mid2_fu_332_p3");
    sc_trace(mVcdFile, x_mid2_reg_577, "x_mid2_reg_577");
    sc_trace(mVcdFile, y_mid2_fu_411_p3, "y_mid2_fu_411_p3");
    sc_trace(mVcdFile, y_mid2_reg_583, "y_mid2_reg_583");
    sc_trace(mVcdFile, x_1_fu_509_p2, "x_1_fu_509_p2");
    sc_trace(mVcdFile, x_1_reg_595, "x_1_reg_595");
    sc_trace(mVcdFile, ap_predicate_op101_read_state4, "ap_predicate_op101_read_state4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_196_p4, "ap_phi_mux_indvar_flatten_phi_fu_196_p4");
    sc_trace(mVcdFile, ap_phi_mux_y_phi_fu_207_p4, "ap_phi_mux_y_phi_fu_207_p4");
    sc_trace(mVcdFile, ap_phi_mux_x_phi_fu_218_p4, "ap_phi_mux_x_phi_fu_218_p4");
    sc_trace(mVcdFile, R_temp_V_read_assign_fu_122, "R_temp_V_read_assign_fu_122");
    sc_trace(mVcdFile, tmp_2_i_fu_483_p4, "tmp_2_i_fu_483_p4");
    sc_trace(mVcdFile, G_temp_V_read_assign_fu_126, "G_temp_V_read_assign_fu_126");
    sc_trace(mVcdFile, ap_predicate_op96_read_state3, "ap_predicate_op96_read_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, B_temp_V_read_assign_fu_130, "B_temp_V_read_assign_fu_130");
    sc_trace(mVcdFile, not_mid2_fu_376_p3, "not_mid2_fu_376_p3");
    sc_trace(mVcdFile, V_SYNC_V_preg, "V_SYNC_V_preg");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, not_1_fu_498_p2, "not_1_fu_498_p2");
    sc_trace(mVcdFile, H_SYNC_V_preg, "H_SYNC_V_preg");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, R_V_preg, "R_V_preg");
    sc_trace(mVcdFile, G_V_preg, "G_V_preg");
    sc_trace(mVcdFile, B_V_preg, "B_V_preg");
    sc_trace(mVcdFile, tmp_4_fu_280_p4, "tmp_4_fu_280_p4");
    sc_trace(mVcdFile, tmp_2_fu_296_p2, "tmp_2_fu_296_p2");
    sc_trace(mVcdFile, tmp_3_fu_302_p2, "tmp_3_fu_302_p2");
    sc_trace(mVcdFile, tmp_5_fu_326_p2, "tmp_5_fu_326_p2");
    sc_trace(mVcdFile, y_coordinate_V_mid2_s_fu_340_p3, "y_coordinate_V_mid2_s_fu_340_p3");
    sc_trace(mVcdFile, y_s_fu_354_p2, "y_s_fu_354_p2");
    sc_trace(mVcdFile, tmp_8_fu_360_p4, "tmp_8_fu_360_p4");
    sc_trace(mVcdFile, icmp1_fu_370_p2, "icmp1_fu_370_p2");
    sc_trace(mVcdFile, icmp_fu_290_p2, "icmp_fu_290_p2");
    sc_trace(mVcdFile, tmp_2_mid1_fu_385_p2, "tmp_2_mid1_fu_385_p2");
    sc_trace(mVcdFile, tmp_3_mid1_fu_391_p2, "tmp_3_mid1_fu_391_p2");
    sc_trace(mVcdFile, tmp2_mid1_fu_397_p2, "tmp2_mid1_fu_397_p2");
    sc_trace(mVcdFile, tmp2_fu_308_p2, "tmp2_fu_308_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_419_p1, "tmp_5_cast_fu_419_p1");
    sc_trace(mVcdFile, tmp_6_fu_429_p2, "tmp_6_fu_429_p2");
    sc_trace(mVcdFile, tmp_7_fu_435_p2, "tmp_7_fu_435_p2");
    sc_trace(mVcdFile, tmp2_mid2_fu_403_p3, "tmp2_mid2_fu_403_p3");
    sc_trace(mVcdFile, tmp1_fu_441_p2, "tmp1_fu_441_p2");
    sc_trace(mVcdFile, y_coordinate_V_mid2_fu_348_p2, "y_coordinate_V_mid2_fu_348_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_423_p2, "p_Val2_s_fu_423_p2");
    sc_trace(mVcdFile, tmp_10_fu_471_p3, "tmp_10_fu_471_p3");
    sc_trace(mVcdFile, tmp_1_i_fu_479_p1, "tmp_1_i_fu_479_p1");
    sc_trace(mVcdFile, tmp_9_fu_463_p3, "tmp_9_fu_463_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_251, "ap_condition_251");
#endif

    }
    mHdltvinHandle.open("axi_stream_to_vga.hdltvin.dat");
    mHdltvoutHandle.open("axi_stream_to_vga.hdltvout.dat");
}

axi_stream_to_vga::~axi_stream_to_vga() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void axi_stream_to_vga::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        B_V_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_251.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) {
                B_V_preg = B_temp_V_read_assign_fu_130.read();
            } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) {
                B_V_preg = ap_const_lv4_0;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_read_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        B_temp_V_read_assign_fu_130 = inStream_V_V_TDATA.read().range(7, 4);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_1)))) {
        B_temp_V_read_assign_fu_130 = tmp_6_i_reg_563.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_559.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_0)))) {
        B_temp_V_read_assign_fu_130 = ap_const_lv4_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        G_V_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_251.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) {
                G_V_preg = G_temp_V_read_assign_fu_126.read();
            } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) {
                G_V_preg = ap_const_lv4_0;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_read_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        G_temp_V_read_assign_fu_126 = inStream_V_V_TDATA.read().range(7, 4);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_559.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_0)))) {
        G_temp_V_read_assign_fu_126 = ap_const_lv4_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        H_SYNC_V_preg = ap_const_lv1_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) || 
             (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0)))) {
            H_SYNC_V_preg = not_1_fu_498_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        R_V_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_251.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) {
                R_V_preg = R_temp_V_read_assign_fu_122.read();
            } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) {
                R_V_preg = ap_const_lv4_0;
            }
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
          esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
          esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_1)))) {
        R_temp_V_read_assign_fu_122 = ap_const_lv4_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, selftest_read_read_fu_134_p2.read()) && 
                 esl_seteq<1,21,21>(tmp_2_i_fu_483_p4.read(), ap_const_lv21_0)))) {
        R_temp_V_read_assign_fu_122 = op2_V_read_assign_reg_554.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        R_temp_V_read_assign_fu_122 = inStream_V_V_TDATA.read().range(7, 4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_559.read()))) {
        R_temp_V_read_assign_fu_122 = ap_const_lv4_F;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        V_SYNC_V_preg = ap_const_lv1_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_447_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
            V_SYNC_V_preg = not_mid2_fu_376_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
               esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) || 
              (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
               esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                     esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        color_blinking_V = ap_const_lv4_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            color_blinking_V = op2_V_read_assign_fu_262_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_192 = indvar_flatten_next_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_192 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_reg_214 = x_1_reg_595.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_reg_214 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_reg_203 = y_mid2_reg_583.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_reg_203 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_568 = exitcond_flatten_fu_314_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_572 = indvar_flatten_next_fu_320_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        op2_V_read_assign_reg_554 = op2_V_read_assign_fu_262_p2.read();
        tmp_6_i_reg_563 = tmp_6_i_fu_274_p2.read();
        tmp_reg_559 =  (sc_lv<1>) (inStream_V_V_TVALID.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        or_cond2_reg_588 = or_cond2_fu_447_p2.read();
        x_mid2_reg_577 = x_mid2_fu_332_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        x_1_reg_595 = x_1_fu_509_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        y_mid2_reg_583 = y_mid2_fu_411_p3.read();
    }
}

void axi_stream_to_vga::thread_B_V() {
    if (esl_seteq<1,1,1>(ap_condition_251.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) {
            B_V = B_temp_V_read_assign_fu_130.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) {
            B_V = ap_const_lv4_0;
        } else {
            B_V = B_V_preg.read();
        }
    } else {
        B_V = B_V_preg.read();
    }
}

void axi_stream_to_vga::thread_G_V() {
    if (esl_seteq<1,1,1>(ap_condition_251.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) {
            G_V = G_temp_V_read_assign_fu_126.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) {
            G_V = ap_const_lv4_0;
        } else {
            G_V = G_V_preg.read();
        }
    } else {
        G_V = G_V_preg.read();
    }
}

void axi_stream_to_vga::thread_H_SYNC_V() {
    if (((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0)))) {
        H_SYNC_V = not_1_fu_498_p2.read();
    } else {
        H_SYNC_V = H_SYNC_V_preg.read();
    }
}

void axi_stream_to_vga::thread_R_V() {
    if (esl_seteq<1,1,1>(ap_condition_251.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) {
            R_V = R_temp_V_read_assign_fu_122.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_588.read())) {
            R_V = ap_const_lv4_0;
        } else {
            R_V = R_V_preg.read();
        }
    } else {
        R_V = R_V_preg.read();
    }
}

void axi_stream_to_vga::thread_V_SYNC_V() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_447_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        V_SYNC_V = not_mid2_fu_376_p3.read();
    } else {
        V_SYNC_V = V_SYNC_V_preg.read();
    }
}

void axi_stream_to_vga::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void axi_stream_to_vga::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void axi_stream_to_vga::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void axi_stream_to_vga::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void axi_stream_to_vga::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void axi_stream_to_vga::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void axi_stream_to_vga::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void axi_stream_to_vga::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_read_state3.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_read_state3.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void axi_stream_to_vga::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_read_state4.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_read_state4.read()));
}

void axi_stream_to_vga::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_read_state4.read()));
}

void axi_stream_to_vga::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()));
}

void axi_stream_to_vga::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_read_state3.read()));
}

void axi_stream_to_vga::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, inStream_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_read_state4.read()));
}

void axi_stream_to_vga::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void axi_stream_to_vga::thread_ap_condition_251() {
    ap_condition_251 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void axi_stream_to_vga::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void axi_stream_to_vga::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void axi_stream_to_vga::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void axi_stream_to_vga::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void axi_stream_to_vga::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void axi_stream_to_vga::thread_ap_phi_mux_indvar_flatten_phi_fu_196_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_indvar_flatten_phi_fu_196_p4 = indvar_flatten_next_reg_572.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_196_p4 = indvar_flatten_reg_192.read();
    }
}

void axi_stream_to_vga::thread_ap_phi_mux_x_phi_fu_218_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_x_phi_fu_218_p4 = x_1_reg_595.read();
    } else {
        ap_phi_mux_x_phi_fu_218_p4 = x_reg_214.read();
    }
}

void axi_stream_to_vga::thread_ap_phi_mux_y_phi_fu_207_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_y_phi_fu_207_p4 = y_mid2_reg_583.read();
    } else {
        ap_phi_mux_y_phi_fu_207_p4 = y_reg_203.read();
    }
}

void axi_stream_to_vga::thread_ap_predicate_op101_read_state4() {
    ap_predicate_op101_read_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_559.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read()));
}

void axi_stream_to_vga::thread_ap_predicate_op71_read_state2() {
    ap_predicate_op71_read_state2 = (esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_559.read()));
}

void axi_stream_to_vga::thread_ap_predicate_op96_read_state3() {
    ap_predicate_op96_read_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_559.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read()));
}

void axi_stream_to_vga::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void axi_stream_to_vga::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void axi_stream_to_vga::thread_exitcond_flatten_fu_314_p2() {
    exitcond_flatten_fu_314_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_196_p4.read().is_01() || !ap_const_lv19_668A0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_196_p4.read() == ap_const_lv19_668A0);
}

void axi_stream_to_vga::thread_icmp1_fu_370_p2() {
    icmp1_fu_370_p2 = (!tmp_8_fu_360_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_360_p4.read() != ap_const_lv9_0);
}

void axi_stream_to_vga::thread_icmp_fu_290_p2() {
    icmp_fu_290_p2 = (!tmp_4_fu_280_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_280_p4.read() != ap_const_lv9_0);
}

void axi_stream_to_vga::thread_inStream_V_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(or_cond2_fu_447_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_559.read())) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_559.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read())) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, selftest_read_read_fu_134_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_559.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_568.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_reg_588.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)))) {
        inStream_V_V_TDATA_blk_n = inStream_V_V_TVALID.read();
    } else {
        inStream_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void axi_stream_to_vga::thread_inStream_V_V_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_read_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_read_state3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_read_state4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        inStream_V_V_TREADY = ap_const_logic_1;
    } else {
        inStream_V_V_TREADY = ap_const_logic_0;
    }
}

void axi_stream_to_vga::thread_indvar_flatten_next_fu_320_p2() {
    indvar_flatten_next_fu_320_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_196_p4.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(ap_phi_mux_indvar_flatten_phi_fu_196_p4.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void axi_stream_to_vga::thread_not_1_fu_498_p2() {
    not_1_fu_498_p2 = (!x_mid2_reg_577.read().is_01() || !ap_const_lv10_5F.is_01())? sc_lv<1>(): (sc_biguint<10>(x_mid2_reg_577.read()) > sc_biguint<10>(ap_const_lv10_5F));
}

void axi_stream_to_vga::thread_not_mid2_fu_376_p3() {
    not_mid2_fu_376_p3 = (!tmp_5_fu_326_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_5_fu_326_p2.read()[0].to_bool())? icmp1_fu_370_p2.read(): icmp_fu_290_p2.read());
}

void axi_stream_to_vga::thread_op2_V_read_assign_fu_262_p2() {
    op2_V_read_assign_fu_262_p2 = (!color_blinking_V.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(color_blinking_V.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void axi_stream_to_vga::thread_or_cond2_fu_447_p2() {
    or_cond2_fu_447_p2 = (tmp2_mid2_fu_403_p3.read() & tmp1_fu_441_p2.read());
}

void axi_stream_to_vga::thread_p_Val2_s_fu_423_p2() {
    p_Val2_s_fu_423_p2 = (!tmp_5_cast_fu_419_p1.read().is_01() || !ap_const_lv11_770.is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_5_cast_fu_419_p1.read()) + sc_bigint<11>(ap_const_lv11_770));
}

void axi_stream_to_vga::thread_selftest_read_read_fu_134_p2() {
    selftest_read_read_fu_134_p2 =  (sc_lv<1>) (selftest.read());
}

void axi_stream_to_vga::thread_tmp1_fu_441_p2() {
    tmp1_fu_441_p2 = (tmp_6_fu_429_p2.read() & tmp_7_fu_435_p2.read());
}

void axi_stream_to_vga::thread_tmp2_fu_308_p2() {
    tmp2_fu_308_p2 = (tmp_2_fu_296_p2.read() & tmp_3_fu_302_p2.read());
}

void axi_stream_to_vga::thread_tmp2_mid1_fu_397_p2() {
    tmp2_mid1_fu_397_p2 = (tmp_2_mid1_fu_385_p2.read() & tmp_3_mid1_fu_391_p2.read());
}

void axi_stream_to_vga::thread_tmp2_mid2_fu_403_p3() {
    tmp2_mid2_fu_403_p3 = (!tmp_5_fu_326_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_5_fu_326_p2.read()[0].to_bool())? tmp2_mid1_fu_397_p2.read(): tmp2_fu_308_p2.read());
}

void axi_stream_to_vga::thread_tmp_10_fu_471_p3() {
    tmp_10_fu_471_p3 = p_Val2_s_fu_423_p2.read().range(5, 5);
}

void axi_stream_to_vga::thread_tmp_1_i_fu_479_p1() {
    tmp_1_i_fu_479_p1 = esl_zext<19,1>(tmp_10_fu_471_p3.read());
}

void axi_stream_to_vga::thread_tmp_2_fu_296_p2() {
    tmp_2_fu_296_p2 = (!ap_phi_mux_y_phi_fu_207_p4.read().is_01() || !ap_const_lv10_22.is_01())? sc_lv<1>(): (sc_biguint<10>(ap_phi_mux_y_phi_fu_207_p4.read()) > sc_biguint<10>(ap_const_lv10_22));
}

void axi_stream_to_vga::thread_tmp_2_i_fu_483_p4() {
    tmp_2_i_fu_483_p4 = esl_concat<20,1>(esl_concat<1,19>(ap_const_lv1_0, tmp_1_i_fu_479_p1.read()), tmp_9_fu_463_p3.read());
}

void axi_stream_to_vga::thread_tmp_2_mid1_fu_385_p2() {
    tmp_2_mid1_fu_385_p2 = (!y_s_fu_354_p2.read().is_01() || !ap_const_lv10_22.is_01())? sc_lv<1>(): (sc_biguint<10>(y_s_fu_354_p2.read()) > sc_biguint<10>(ap_const_lv10_22));
}

void axi_stream_to_vga::thread_tmp_3_fu_302_p2() {
    tmp_3_fu_302_p2 = (!ap_phi_mux_y_phi_fu_207_p4.read().is_01() || !ap_const_lv10_203.is_01())? sc_lv<1>(): (sc_biguint<10>(ap_phi_mux_y_phi_fu_207_p4.read()) < sc_biguint<10>(ap_const_lv10_203));
}

void axi_stream_to_vga::thread_tmp_3_mid1_fu_391_p2() {
    tmp_3_mid1_fu_391_p2 = (!y_s_fu_354_p2.read().is_01() || !ap_const_lv10_203.is_01())? sc_lv<1>(): (sc_biguint<10>(y_s_fu_354_p2.read()) < sc_biguint<10>(ap_const_lv10_203));
}

void axi_stream_to_vga::thread_tmp_4_fu_280_p4() {
    tmp_4_fu_280_p4 = ap_phi_mux_y_phi_fu_207_p4.read().range(9, 1);
}

void axi_stream_to_vga::thread_tmp_5_cast_fu_419_p1() {
    tmp_5_cast_fu_419_p1 = esl_zext<11,10>(x_mid2_fu_332_p3.read());
}

void axi_stream_to_vga::thread_tmp_5_fu_326_p2() {
    tmp_5_fu_326_p2 = (!ap_phi_mux_x_phi_fu_218_p4.read().is_01() || !ap_const_lv10_320.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_x_phi_fu_218_p4.read() == ap_const_lv10_320);
}

void axi_stream_to_vga::thread_tmp_6_fu_429_p2() {
    tmp_6_fu_429_p2 = (!x_mid2_fu_332_p3.read().is_01() || !ap_const_lv10_8F.is_01())? sc_lv<1>(): (sc_biguint<10>(x_mid2_fu_332_p3.read()) > sc_biguint<10>(ap_const_lv10_8F));
}

void axi_stream_to_vga::thread_tmp_6_i_fu_274_p2() {
    tmp_6_i_fu_274_p2 = (!ap_const_lv4_E.is_01() || !color_blinking_V.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_E) - sc_biguint<4>(color_blinking_V.read()));
}

void axi_stream_to_vga::thread_tmp_7_fu_435_p2() {
    tmp_7_fu_435_p2 = (!x_mid2_fu_332_p3.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): (sc_biguint<10>(x_mid2_fu_332_p3.read()) < sc_biguint<10>(ap_const_lv10_310));
}

void axi_stream_to_vga::thread_tmp_8_fu_360_p4() {
    tmp_8_fu_360_p4 = y_s_fu_354_p2.read().range(9, 1);
}

void axi_stream_to_vga::thread_tmp_9_fu_463_p3() {
    tmp_9_fu_463_p3 = y_coordinate_V_mid2_fu_348_p2.read().range(5, 5);
}

void axi_stream_to_vga::thread_x_1_fu_509_p2() {
    x_1_fu_509_p2 = (!x_mid2_reg_577.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(x_mid2_reg_577.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void axi_stream_to_vga::thread_x_mid2_fu_332_p3() {
    x_mid2_fu_332_p3 = (!tmp_5_fu_326_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_5_fu_326_p2.read()[0].to_bool())? ap_const_lv10_0: ap_phi_mux_x_phi_fu_218_p4.read());
}

void axi_stream_to_vga::thread_y_coordinate_V_mid2_fu_348_p2() {
    y_coordinate_V_mid2_fu_348_p2 = (!ap_phi_mux_y_phi_fu_207_p4.read().is_01() || !y_coordinate_V_mid2_s_fu_340_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_phi_mux_y_phi_fu_207_p4.read()) + sc_biguint<10>(y_coordinate_V_mid2_s_fu_340_p3.read()));
}

void axi_stream_to_vga::thread_y_coordinate_V_mid2_s_fu_340_p3() {
    y_coordinate_V_mid2_s_fu_340_p3 = (!tmp_5_fu_326_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_5_fu_326_p2.read()[0].to_bool())? ap_const_lv10_3DE: ap_const_lv10_3DD);
}

void axi_stream_to_vga::thread_y_mid2_fu_411_p3() {
    y_mid2_fu_411_p3 = (!tmp_5_fu_326_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_5_fu_326_p2.read()[0].to_bool())? y_s_fu_354_p2.read(): ap_phi_mux_y_phi_fu_207_p4.read());
}

void axi_stream_to_vga::thread_y_s_fu_354_p2() {
    y_s_fu_354_p2 = (!ap_phi_mux_y_phi_fu_207_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(ap_phi_mux_y_phi_fu_207_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void axi_stream_to_vga::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(exitcond_flatten_fu_314_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void axi_stream_to_vga::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"selftest\" :  \"" << selftest.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_V_TDATA\" :  \"" << inStream_V_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_V_V_TVALID\" :  \"" << inStream_V_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_V_V_TREADY\" :  \"" << inStream_V_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_V\" :  \"" << R_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_V\" :  \"" << G_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_V\" :  \"" << B_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_SYNC_V\" :  \"" << V_SYNC_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"H_SYNC_V\" :  \"" << H_SYNC_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

