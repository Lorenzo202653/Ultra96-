

================================================================
== Vivado HLS Report for 'axi_stream_to_vga'
================================================================
* Date:           Tue Mar 10 11:32:04 2020

* Version:        2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)
* Project:        AXI_STREAM_TO_VGA
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      3.15|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1260002|  1260002|  1260002|  1260002|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+--------+----------+
        |          |      Latency      | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+--------+----------+
        |- Loop 1  |  1260000|  1260000|         4|          3|          1|  420000|    yes   |
        +----------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 3, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	6  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	2  / true
6 --> 

* FSM state operations: 

 <State 1> : 0.87ns
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%R_temp_V_read_assign = alloca i4"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%G_temp_V_read_assign = alloca i4"
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%B_temp_V_read_assign = alloca i4"
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %selftest), !map !69"
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %inStream_V_V), !map !75"
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %R_V), !map !79"
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %G_V), !map !83"
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %B_V), !map !87"
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %V_SYNC_V), !map !91"
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %H_SYNC_V), !map !95"
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([18 x i8]* @axi_stream_to_vga_st) nounwind"
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%selftest_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %selftest)"
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %inStream_V_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:53]
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %selftest, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:54]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i4* %R_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:55]
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i4* %G_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:56]
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i4* %B_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:57]
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %H_SYNC_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:58]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %V_SYNC_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:59]
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i4* @color_blinking_V, i32 1, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:73]
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%color_blinking_V_loa = load i4* @color_blinking_V, align 1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:76]
ST_1 : Operation 28 [1/1] (0.86ns)   --->   "%op2_V_read_assign = add i4 %color_blinking_V_loa, 1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:76]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "store i4 %op2_V_read_assign, i4* @color_blinking_V, align 1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:76]
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.axis.i8P(i8* %inStream_V_V, i32 1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:85]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 31 [1/1] (0.86ns)   --->   "%tmp_6_i = sub i4 -2, %color_blinking_V_loa" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:17->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.75ns)   --->   "br label %.preheader" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:87]

 <State 2> : 3.15ns
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i19 [ 0, %codeRepl ], [ %indvar_flatten_next, %9 ]"
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%y = phi i10 [ 0, %codeRepl ], [ %y_mid2, %9 ]" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88]
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%x = phi i10 [ 0, %codeRepl ], [ %x_1, %9 ]"
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_4 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %y, i32 1, i32 9)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:95]
ST_2 : Operation 37 [1/1] (0.85ns)   --->   "%icmp = icmp ne i9 %tmp_4, 0" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:95]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.85ns)   --->   "%tmp_2 = icmp ugt i10 %y, 34" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.85ns)   --->   "%tmp_3 = icmp ult i10 %y, -509" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.33ns)   --->   "%tmp2 = and i1 %tmp_2, %tmp_3" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.91ns)   --->   "%exitcond_flatten = icmp eq i19 %indvar_flatten, -104288"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.05ns)   --->   "%indvar_flatten_next = add i19 %indvar_flatten, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %10, label %.preheader.preheader"
ST_2 : Operation 44 [1/1] (0.85ns)   --->   "%tmp_5 = icmp eq i10 %x, -224" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.47ns)   --->   "%x_mid2 = select i1 %tmp_5, i10 0, i10 %x" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node y_coordinate_V_mid2)   --->   "%y_coordinate_V_mid2_s = select i1 %tmp_5, i10 -34, i10 -35" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:93]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.93ns) (out node of the LUT)   --->   "%y_coordinate_V_mid2 = add i10 %y, %y_coordinate_V_mid2_s" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:93]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.93ns)   --->   "%y_s = add i10 %y, 1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:87]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_8 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %y_s, i32 1, i32 9)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:95]
ST_2 : Operation 50 [1/1] (0.85ns)   --->   "%icmp1 = icmp ne i9 %tmp_8, 0" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:95]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.26ns)   --->   "%not_mid2 = select i1 %tmp_5, i1 %icmp1, i1 %icmp" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:95]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.85ns)   --->   "%tmp_2_mid1 = icmp ugt i10 %y_s, 34" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.85ns)   --->   "%tmp_3_mid1 = icmp ult i10 %y_s, -509" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node or_cond2)   --->   "%tmp2_mid1 = and i1 %tmp_2_mid1, %tmp_3_mid1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node or_cond2)   --->   "%tmp2_mid2 = select i1 %tmp_5, i1 %tmp2_mid1, i1 %tmp2" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.47ns)   --->   "%y_mid2 = select i1 %tmp_5, i10 %y_s, i10 %y" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_5_cast = zext i10 %x_mid2 to i11" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:92]
ST_2 : Operation 58 [1/1] (0.93ns)   --->   "%p_Val2_s = add i11 %tmp_5_cast, -144" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:92]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.85ns)   --->   "%tmp_6 = icmp ugt i10 %x_mid2, 143" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.85ns)   --->   "%tmp_7 = icmp ult i10 %x_mid2, -240" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node or_cond2)   --->   "%tmp1 = and i1 %tmp_6, %tmp_7" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_cond2 = and i1 %tmp2_mid2, %tmp1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %or_cond2, label %0, label %8" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:101]
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %V_SYNC_V, i1 %not_mid2)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:146]
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "br i1 %selftest_read, label %3, label %1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:110]
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %.get_checkerboard_color.exit_crit_edge" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:112]
ST_2 : Operation 67 [1/1] (1.18ns)   --->   "store i4 0, i4* %B_temp_V_read_assign"
ST_2 : Operation 68 [1/1] (0.75ns)   --->   "store i4 0, i4* %G_temp_V_read_assign"
ST_2 : Operation 69 [1/1] (1.61ns)   --->   "store i4 -1, i4* %R_temp_V_read_assign"
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "br label %get_checkerboard_color.exit" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:112]
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_V = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inStream_V_V)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:115]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%R_temp_V = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %tmp_V, i32 4, i32 7)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:115]
ST_2 : Operation 73 [1/1] (1.61ns)   --->   "store i4 %R_temp_V, i4* %R_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:115]
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %y_coordinate_V_mid2, i32 5)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:6->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_Val2_s, i32 5)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:92]
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_1_i = zext i1 %tmp_10 to i19" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:92]
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_2_i = call i21 @_ssdm_op_BitConcatenate.i21.i1.i19.i1(i1 false, i19 %tmp_1_i, i1 %tmp_9)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:92]
ST_2 : Operation 78 [1/1] (0.88ns)   --->   "switch i21 %tmp_2_i, label %get_checkerboard_color.exit [
    i21 0, label %4
    i21 1, label %5
    i21 2, label %6
    i21 3, label %7
  ]" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:6->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 79 [1/1] (1.18ns)   --->   "store i4 0, i4* %B_temp_V_read_assign"
ST_2 : Operation 80 [1/1] (0.75ns)   --->   "store i4 0, i4* %G_temp_V_read_assign"
ST_2 : Operation 81 [1/1] (1.61ns)   --->   "store i4 %op2_V_read_assign, i4* %R_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:27->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "br label %get_checkerboard_color.exit" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:30->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 83 [1/1] (1.18ns)   --->   "store i4 %tmp_6_i, i4* %B_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:17->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 84 [1/1] (0.75ns)   --->   "store i4 0, i4* %G_temp_V_read_assign"
ST_2 : Operation 85 [1/1] (1.61ns)   --->   "store i4 0, i4* %R_temp_V_read_assign"
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "br label %get_checkerboard_color.exit" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:24->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 87 [1/1] (1.18ns)   --->   "store i4 %tmp_6_i, i4* %B_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:17->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 88 [1/1] (0.75ns)   --->   "store i4 0, i4* %G_temp_V_read_assign"
ST_2 : Operation 89 [1/1] (1.61ns)   --->   "store i4 0, i4* %R_temp_V_read_assign"
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "br label %get_checkerboard_color.exit" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:18->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 91 [1/1] (1.18ns)   --->   "store i4 0, i4* %B_temp_V_read_assign"
ST_2 : Operation 92 [1/1] (0.75ns)   --->   "store i4 0, i4* %G_temp_V_read_assign"
ST_2 : Operation 93 [1/1] (1.61ns)   --->   "store i4 %op2_V_read_assign, i4* %R_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:9->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "br label %get_checkerboard_color.exit" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:12->AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:130]
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %V_SYNC_V, i1 %not_mid2)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:138]

 <State 3> : 0.76ns
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_V_1 = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inStream_V_V)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:116]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%G_temp_V = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %tmp_V_1, i32 4, i32 7)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:116]
ST_3 : Operation 98 [1/1] (0.75ns)   --->   "store i4 %G_temp_V, i4* %G_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:116]

 <State 4> : 1.18ns
ST_4 : Operation 99 [1/1] (0.85ns)   --->   "%not_1 = icmp ugt i10 %x_mid2, 95" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:98]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %H_SYNC_V, i1 %not_1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:147]
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_V_2 = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inStream_V_V)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:117]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_s = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %tmp_V_2, i32 4, i32 7)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:117]
ST_4 : Operation 103 [1/1] (1.18ns)   --->   "store i4 %tmp_s, i4* %B_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:117]
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "br label %get_checkerboard_color.exit" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:118]
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %H_SYNC_V, i1 %not_1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:139]
ST_4 : Operation 106 [1/1] (0.93ns)   --->   "%x_1 = add i10 %x_mid2, 1" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 5> : 0.00ns
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:89]
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:90]
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %R_V, i4 0)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:143]
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %G_V, i4 0)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:144]
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %B_V, i4 0)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:145]
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "br label %9"
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%R_temp_V_read_assign_1 = load i4* %R_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:135]
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%G_temp_V_read_assign_1 = load i4* %G_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:136]
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%B_temp_V_read_assign_1 = load i4* %B_temp_V_read_assign" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:137]
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %R_V, i4 %R_temp_V_read_assign_1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:135]
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %G_V, i4 %G_temp_V_read_assign_1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:136]
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %B_V, i4 %B_temp_V_read_assign_1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:137]
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "br label %9" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:140]
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_1)" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:150]
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "br label %.preheader" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88]

 <State 6> : 0.00ns
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "ret void" [AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:152]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.868ns
The critical path consists of the following:
	'load' operation ('color_blinking_V_loa', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:76) on static variable 'color_blinking_V' [29]  (0 ns)
	'add' operation ('op2.V', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:76) [30]  (0.868 ns)

 <State 2>: 3.15ns
The critical path consists of the following:
	'phi' operation ('x') with incoming values : ('x', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88) [38]  (0 ns)
	'icmp' operation ('tmp_5', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88) [48]  (0.859 ns)
	'select' operation ('x_mid2', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:88) [49]  (0.47 ns)
	'add' operation ('x_coordinate.V', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:92) [64]  (0.934 ns)

 <State 3>: 0.755ns
The critical path consists of the following:
	axis read on port 'inStream_V_V' (AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:116) [90]  (0 ns)
	'store' operation (AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:116) of variable 'G_temp.V', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:116 on local variable 'ssdm_int<4 + 1024 * 0, false>.V' [95]  (0.755 ns)

 <State 4>: 1.18ns
The critical path consists of the following:
	axis read on port 'inStream_V_V' (AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:117) [92]  (0 ns)
	'store' operation (AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:117) of variable 'tmp_s', AXI_STREAM_TO_VGA/vga_bram_read_address.cpp:117 on local variable 'ssdm_int<4 + 1024 * 0, false>.V' [94]  (1.18 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
