// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "pattern_generator_cross.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pattern_generator_cross::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pattern_generator_cross::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> pattern_generator_cross::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> pattern_generator_cross::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> pattern_generator_cross::ap_ST_st3_fsm_2 = "100";
const sc_lv<4> pattern_generator_cross::ap_ST_st4_fsm_3 = "1000";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> pattern_generator_cross::ap_const_lv1_0 = "0";
const sc_lv<1> pattern_generator_cross::ap_const_lv1_1 = "1";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_1 = "1";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_2 = "10";
const sc_lv<9> pattern_generator_cross::ap_const_lv9_0 = "000000000";
const sc_lv<10> pattern_generator_cross::ap_const_lv10_0 = "0000000000";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_3 = "11";
const sc_lv<8> pattern_generator_cross::ap_const_lv8_3E = "111110";
const sc_lv<8> pattern_generator_cross::ap_const_lv8_C1 = "11000001";
const sc_lv<9> pattern_generator_cross::ap_const_lv9_1FE = "111111110";
const sc_lv<9> pattern_generator_cross::ap_const_lv9_1 = "1";
const sc_lv<9> pattern_generator_cross::ap_const_lv9_1E0 = "111100000";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_27F = "1001111111";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_1DF = "111011111";
const sc_lv<10> pattern_generator_cross::ap_const_lv10_2D0 = "1011010000";
const sc_lv<10> pattern_generator_cross::ap_const_lv10_1 = "1";
const sc_lv<10> pattern_generator_cross::ap_const_lv10_280 = "1010000000";
const sc_lv<32> pattern_generator_cross::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";

pattern_generator_cross::pattern_generator_cross(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_209);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );

    SC_METHOD(thread_ap_sig_bdd_239);
    sensitive << ( tmp_2_fu_156_p2 );
    sensitive << ( tmp_4_fu_161_p2 );

    SC_METHOD(thread_ap_sig_bdd_242);
    sensitive << ( tmp_8_fu_178_p2 );
    sensitive << ( tmp_1_fu_183_p2 );

    SC_METHOD(thread_ap_sig_bdd_245);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_204_p2 );
    sensitive << ( or_cond_fu_222_p2 );

    SC_METHOD(thread_ap_sig_bdd_29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_29 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_41 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_57 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_111 );

    SC_METHOD(thread_ap_sig_ioackin_outputStream_V_TREADY);
    sensitive << ( outputStream_V_TREADY );
    sensitive << ( ap_reg_ioackin_outputStream_V_TREADY );

    SC_METHOD(thread_exitcond5_fu_133_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( y_reg_77 );

    SC_METHOD(thread_exitcond_fu_204_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_204_p2 );
    sensitive << ( or_cond_fu_222_p2 );
    sensitive << ( or_cond7_fu_232_p2 );
    sensitive << ( ap_sig_ioackin_outputStream_V_TREADY );
    sensitive << ( x_reg_99 );

    SC_METHOD(thread_or_cond7_fu_232_p2);
    sensitive << ( tmp_s_reg_314 );
    sensitive << ( tmp_9_fu_227_p2 );

    SC_METHOD(thread_or_cond_fu_222_p2);
    sensitive << ( tmp_3_reg_309 );
    sensitive << ( tmp_6_fu_216_p2 );

    SC_METHOD(thread_outputStream_V_TDATA);
    sensitive << ( or_cond7_fu_232_p2 );
    sensitive << ( ap_sig_bdd_245 );

    SC_METHOD(thread_outputStream_V_TVALID);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_204_p2 );
    sensitive << ( or_cond_fu_222_p2 );
    sensitive << ( or_cond7_fu_232_p2 );
    sensitive << ( ap_reg_ioackin_outputStream_V_TREADY );

    SC_METHOD(thread_storemerge4_fu_273_p2);
    sensitive << ( tmp_5_reg_110 );
    sensitive << ( storemerge4_v_cast_cast_fu_265_p3 );

    SC_METHOD(thread_storemerge4_v_cast_cast_fu_265_p3);
    sensitive << ( dirY );

    SC_METHOD(thread_storemerge_fu_249_p2);
    sensitive << ( tmp_7_reg_88 );
    sensitive << ( storemerge_v_cast_cast_fu_241_p3 );

    SC_METHOD(thread_storemerge_v_cast_cast_fu_241_p3);
    sensitive << ( dirX );

    SC_METHOD(thread_tmp_1_fu_183_p2);
    sensitive << ( lineY_load_reg_293 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );
    sensitive << ( tmp_8_fu_178_p2 );

    SC_METHOD(thread_tmp_2_fu_156_p2);
    sensitive << ( lineX_load_reg_285 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );

    SC_METHOD(thread_tmp_3_fu_145_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );
    sensitive << ( y_reg_77 );

    SC_METHOD(thread_tmp_4_fu_161_p2);
    sensitive << ( lineX_load_reg_285 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );
    sensitive << ( tmp_2_fu_156_p2 );

    SC_METHOD(thread_tmp_6_fu_216_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_204_p2 );
    sensitive << ( or_cond_fu_222_p2 );
    sensitive << ( or_cond7_fu_232_p2 );
    sensitive << ( ap_sig_ioackin_outputStream_V_TREADY );
    sensitive << ( x_reg_99 );

    SC_METHOD(thread_tmp_8_fu_178_p2);
    sensitive << ( lineY_load_reg_293 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );

    SC_METHOD(thread_tmp_9_fu_227_p2);
    sensitive << ( lineX_load_reg_285 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_204_p2 );
    sensitive << ( or_cond_fu_222_p2 );
    sensitive << ( or_cond7_fu_232_p2 );
    sensitive << ( ap_sig_ioackin_outputStream_V_TREADY );
    sensitive << ( x_cast1_fu_200_p1 );

    SC_METHOD(thread_tmp_s_fu_151_p2);
    sensitive << ( lineY_load_reg_293 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond5_fu_133_p2 );
    sensitive << ( y_cast2_fu_129_p1 );

    SC_METHOD(thread_x_1_fu_210_p2);
    sensitive << ( x_reg_99 );

    SC_METHOD(thread_x_cast1_fu_200_p1);
    sensitive << ( x_reg_99 );

    SC_METHOD(thread_y_1_fu_139_p2);
    sensitive << ( y_reg_77 );

    SC_METHOD(thread_y_cast2_fu_129_p1);
    sensitive << ( y_reg_77 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_fu_133_p2 );
    sensitive << ( exitcond_fu_204_p2 );
    sensitive << ( or_cond_fu_222_p2 );
    sensitive << ( or_cond7_fu_232_p2 );
    sensitive << ( ap_sig_ioackin_outputStream_V_TREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    lineX = "00000000000000000000000000000000";
    lineY = "00000000000000000000000000000000";
    dirX = "0";
    dirY = "0";
    ap_CS_fsm = "0001";
    ap_reg_ioackin_outputStream_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pattern_generator_cross_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, outputStream_V_TDATA, "(port)outputStream_V_TDATA");
    sc_trace(mVcdFile, outputStream_V_TVALID, "(port)outputStream_V_TVALID");
    sc_trace(mVcdFile, outputStream_V_TREADY, "(port)outputStream_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, lineX, "lineX");
    sc_trace(mVcdFile, lineY, "lineY");
    sc_trace(mVcdFile, dirX, "dirX");
    sc_trace(mVcdFile, dirY, "dirY");
    sc_trace(mVcdFile, lineX_load_reg_285, "lineX_load_reg_285");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_29, "ap_sig_bdd_29");
    sc_trace(mVcdFile, lineY_load_reg_293, "lineY_load_reg_293");
    sc_trace(mVcdFile, y_1_fu_139_p2, "y_1_fu_139_p2");
    sc_trace(mVcdFile, y_1_reg_304, "y_1_reg_304");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_41, "ap_sig_bdd_41");
    sc_trace(mVcdFile, tmp_3_fu_145_p2, "tmp_3_fu_145_p2");
    sc_trace(mVcdFile, tmp_3_reg_309, "tmp_3_reg_309");
    sc_trace(mVcdFile, exitcond5_fu_133_p2, "exitcond5_fu_133_p2");
    sc_trace(mVcdFile, tmp_s_fu_151_p2, "tmp_s_fu_151_p2");
    sc_trace(mVcdFile, tmp_s_reg_314, "tmp_s_reg_314");
    sc_trace(mVcdFile, x_1_fu_210_p2, "x_1_fu_210_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_57, "ap_sig_bdd_57");
    sc_trace(mVcdFile, exitcond_fu_204_p2, "exitcond_fu_204_p2");
    sc_trace(mVcdFile, or_cond_fu_222_p2, "or_cond_fu_222_p2");
    sc_trace(mVcdFile, or_cond7_fu_232_p2, "or_cond7_fu_232_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_outputStream_V_TREADY, "ap_sig_ioackin_outputStream_V_TREADY");
    sc_trace(mVcdFile, y_reg_77, "y_reg_77");
    sc_trace(mVcdFile, tmp_7_reg_88, "tmp_7_reg_88");
    sc_trace(mVcdFile, tmp_2_fu_156_p2, "tmp_2_fu_156_p2");
    sc_trace(mVcdFile, x_reg_99, "x_reg_99");
    sc_trace(mVcdFile, tmp_5_reg_110, "tmp_5_reg_110");
    sc_trace(mVcdFile, tmp_8_fu_178_p2, "tmp_8_fu_178_p2");
    sc_trace(mVcdFile, storemerge_fu_249_p2, "storemerge_fu_249_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_111, "ap_sig_bdd_111");
    sc_trace(mVcdFile, storemerge4_fu_273_p2, "storemerge4_fu_273_p2");
    sc_trace(mVcdFile, tmp_4_fu_161_p2, "tmp_4_fu_161_p2");
    sc_trace(mVcdFile, tmp_1_fu_183_p2, "tmp_1_fu_183_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_outputStream_V_TREADY, "ap_reg_ioackin_outputStream_V_TREADY");
    sc_trace(mVcdFile, y_cast2_fu_129_p1, "y_cast2_fu_129_p1");
    sc_trace(mVcdFile, tmp_6_fu_216_p2, "tmp_6_fu_216_p2");
    sc_trace(mVcdFile, x_cast1_fu_200_p1, "x_cast1_fu_200_p1");
    sc_trace(mVcdFile, tmp_9_fu_227_p2, "tmp_9_fu_227_p2");
    sc_trace(mVcdFile, storemerge_v_cast_cast_fu_241_p3, "storemerge_v_cast_cast_fu_241_p3");
    sc_trace(mVcdFile, storemerge4_v_cast_cast_fu_265_p3, "storemerge4_v_cast_cast_fu_265_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_239, "ap_sig_bdd_239");
    sc_trace(mVcdFile, ap_sig_bdd_209, "ap_sig_bdd_209");
    sc_trace(mVcdFile, ap_sig_bdd_242, "ap_sig_bdd_242");
    sc_trace(mVcdFile, ap_sig_bdd_245, "ap_sig_bdd_245");
#endif

    }
    mHdltvinHandle.open("pattern_generator_cross.hdltvin.dat");
    mHdltvoutHandle.open("pattern_generator_cross.hdltvout.dat");
}

pattern_generator_cross::~pattern_generator_cross() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void pattern_generator_cross::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outputStream_V_TREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
              !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read())))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
              !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read())))))) {
            ap_reg_ioackin_outputStream_V_TREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, outputStream_V_TREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, outputStream_V_TREADY.read())))) {
            ap_reg_ioackin_outputStream_V_TREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        dirX = ap_const_lv1_0;
    } else {
        if (ap_sig_bdd_209.read()) {
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_156_p2.read())) {
                dirX = ap_const_lv1_0;
            } else if (ap_sig_bdd_239.read()) {
                dirX = ap_const_lv1_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        dirY = ap_const_lv1_0;
    } else {
        if (ap_sig_bdd_209.read()) {
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_178_p2.read())) {
                dirY = ap_const_lv1_0;
            } else if (ap_sig_bdd_242.read()) {
                dirY = ap_const_lv1_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        lineX = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
            lineX = storemerge_fu_249_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        lineY = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
            lineY = storemerge4_fu_273_p2.read();
        }
    }
    if (ap_sig_bdd_209.read()) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_178_p2.read())) {
            tmp_5_reg_110 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_178_p2.read())) {
            tmp_5_reg_110 = lineY_load_reg_293.read();
        }
    }
    if (ap_sig_bdd_209.read()) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_156_p2.read())) {
            tmp_7_reg_88 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_156_p2.read())) {
            tmp_7_reg_88 = lineX_load_reg_285.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_133_p2.read()))) {
        x_reg_99 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()))))) {
        x_reg_99 = x_1_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()))) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()))) {
        y_reg_77 = y_1_reg_304.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        y_reg_77 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        lineX_load_reg_285 = lineX.read();
        lineY_load_reg_293 = lineY.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_133_p2.read()))) {
        tmp_3_reg_309 = tmp_3_fu_145_p2.read();
        tmp_s_reg_314 = tmp_s_fu_151_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        y_1_reg_304 = y_1_fu_139_p2.read();
    }
}

void pattern_generator_cross::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pattern_generator_cross::thread_ap_sig_bdd_111() {
    ap_sig_bdd_111 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void pattern_generator_cross::thread_ap_sig_bdd_209() {
    ap_sig_bdd_209 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_133_p2.read()));
}

void pattern_generator_cross::thread_ap_sig_bdd_239() {
    ap_sig_bdd_239 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_156_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_161_p2.read()));
}

void pattern_generator_cross::thread_ap_sig_bdd_242() {
    ap_sig_bdd_242 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_178_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_183_p2.read()));
}

void pattern_generator_cross::thread_ap_sig_bdd_245() {
    ap_sig_bdd_245 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()));
}

void pattern_generator_cross::thread_ap_sig_bdd_29() {
    ap_sig_bdd_29 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void pattern_generator_cross::thread_ap_sig_bdd_41() {
    ap_sig_bdd_41 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void pattern_generator_cross::thread_ap_sig_bdd_57() {
    ap_sig_bdd_57 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void pattern_generator_cross::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_29.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void pattern_generator_cross::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_41.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void pattern_generator_cross::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_57.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void pattern_generator_cross::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_111.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void pattern_generator_cross::thread_ap_sig_ioackin_outputStream_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outputStream_V_TREADY.read())) {
        ap_sig_ioackin_outputStream_V_TREADY = outputStream_V_TREADY.read();
    } else {
        ap_sig_ioackin_outputStream_V_TREADY = ap_const_logic_1;
    }
}

void pattern_generator_cross::thread_exitcond5_fu_133_p2() {
    exitcond5_fu_133_p2 = (!y_reg_77.read().is_01() || !ap_const_lv9_1FE.is_01())? sc_lv<1>(): sc_lv<1>(y_reg_77.read() == ap_const_lv9_1FE);
}

void pattern_generator_cross::thread_exitcond_fu_204_p2() {
    exitcond_fu_204_p2 = (!x_reg_99.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): sc_lv<1>(x_reg_99.read() == ap_const_lv10_2D0);
}

void pattern_generator_cross::thread_or_cond7_fu_232_p2() {
    or_cond7_fu_232_p2 = (tmp_9_fu_227_p2.read() | tmp_s_reg_314.read());
}

void pattern_generator_cross::thread_or_cond_fu_222_p2() {
    or_cond_fu_222_p2 = (tmp_3_reg_309.read() & tmp_6_fu_216_p2.read());
}

void pattern_generator_cross::thread_outputStream_V_TDATA() {
    if (ap_sig_bdd_245.read()) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read())) {
            outputStream_V_TDATA = ap_const_lv8_C1;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read())) {
            outputStream_V_TDATA = ap_const_lv8_3E;
        } else {
            outputStream_V_TDATA = "XXXXXXXX";
        }
    } else {
        outputStream_V_TDATA = "XXXXXXXX";
    }
}

void pattern_generator_cross::thread_outputStream_V_TVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outputStream_V_TREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outputStream_V_TREADY.read())))) {
        outputStream_V_TVALID = ap_const_logic_1;
    } else {
        outputStream_V_TVALID = ap_const_logic_0;
    }
}

void pattern_generator_cross::thread_storemerge4_fu_273_p2() {
    storemerge4_fu_273_p2 = (!tmp_5_reg_110.read().is_01() || !storemerge4_v_cast_cast_fu_265_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_reg_110.read()) + sc_biguint<32>(storemerge4_v_cast_cast_fu_265_p3.read()));
}

void pattern_generator_cross::thread_storemerge4_v_cast_cast_fu_265_p3() {
    storemerge4_v_cast_cast_fu_265_p3 = (!dirY.read()[0].is_01())? sc_lv<32>(): ((dirY.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_1);
}

void pattern_generator_cross::thread_storemerge_fu_249_p2() {
    storemerge_fu_249_p2 = (!tmp_7_reg_88.read().is_01() || !storemerge_v_cast_cast_fu_241_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_reg_88.read()) + sc_biguint<32>(storemerge_v_cast_cast_fu_241_p3.read()));
}

void pattern_generator_cross::thread_storemerge_v_cast_cast_fu_241_p3() {
    storemerge_v_cast_cast_fu_241_p3 = (!dirX.read()[0].is_01())? sc_lv<32>(): ((dirX.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_1);
}

void pattern_generator_cross::thread_tmp_1_fu_183_p2() {
    tmp_1_fu_183_p2 = (!lineY_load_reg_293.read().is_01() || !ap_const_lv32_1DF.is_01())? sc_lv<1>(): sc_lv<1>(lineY_load_reg_293.read() == ap_const_lv32_1DF);
}

void pattern_generator_cross::thread_tmp_2_fu_156_p2() {
    tmp_2_fu_156_p2 = (!lineX_load_reg_285.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(lineX_load_reg_285.read() == ap_const_lv32_0);
}

void pattern_generator_cross::thread_tmp_3_fu_145_p2() {
    tmp_3_fu_145_p2 = (!y_reg_77.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): (sc_biguint<9>(y_reg_77.read()) < sc_biguint<9>(ap_const_lv9_1E0));
}

void pattern_generator_cross::thread_tmp_4_fu_161_p2() {
    tmp_4_fu_161_p2 = (!lineX_load_reg_285.read().is_01() || !ap_const_lv32_27F.is_01())? sc_lv<1>(): sc_lv<1>(lineX_load_reg_285.read() == ap_const_lv32_27F);
}

void pattern_generator_cross::thread_tmp_6_fu_216_p2() {
    tmp_6_fu_216_p2 = (!x_reg_99.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): (sc_biguint<10>(x_reg_99.read()) < sc_biguint<10>(ap_const_lv10_280));
}

void pattern_generator_cross::thread_tmp_8_fu_178_p2() {
    tmp_8_fu_178_p2 = (!lineY_load_reg_293.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(lineY_load_reg_293.read() == ap_const_lv32_0);
}

void pattern_generator_cross::thread_tmp_9_fu_227_p2() {
    tmp_9_fu_227_p2 = (!x_cast1_fu_200_p1.read().is_01() || !lineX_load_reg_285.read().is_01())? sc_lv<1>(): sc_lv<1>(x_cast1_fu_200_p1.read() == lineX_load_reg_285.read());
}

void pattern_generator_cross::thread_tmp_s_fu_151_p2() {
    tmp_s_fu_151_p2 = (!y_cast2_fu_129_p1.read().is_01() || !lineY_load_reg_293.read().is_01())? sc_lv<1>(): sc_lv<1>(y_cast2_fu_129_p1.read() == lineY_load_reg_293.read());
}

void pattern_generator_cross::thread_x_1_fu_210_p2() {
    x_1_fu_210_p2 = (!x_reg_99.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(x_reg_99.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void pattern_generator_cross::thread_x_cast1_fu_200_p1() {
    x_cast1_fu_200_p1 = esl_zext<32,10>(x_reg_99.read());
}

void pattern_generator_cross::thread_y_1_fu_139_p2() {
    y_1_fu_139_p2 = (!y_reg_77.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(y_reg_77.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void pattern_generator_cross::thread_y_cast2_fu_129_p1() {
    y_cast2_fu_129_p1 = esl_zext<32,9>(y_reg_77.read());
}

void pattern_generator_cross::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_133_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()))))) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else if ((!((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outputStream_V_TREADY.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_232_p2.read()))) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_204_p2.read()))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

void pattern_generator_cross::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"outputStream_V_TDATA\" :  \"" << outputStream_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputStream_V_TVALID\" :  \"" << outputStream_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outputStream_V_TREADY\" :  \"" << outputStream_V_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

